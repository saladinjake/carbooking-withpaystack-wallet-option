{"version":3,"sources":["../../../server/dynamic_server/mongo_api/App.js"],"names":["require","config","debug","util","pug","error","http","socket_io","io","MongoAppDemo","express","use","allowedOrigins","corsOption","methods","credentials","exposedHeaders","secret","process","env","SECRET","resave","saveUninitialized","passport","initialize","bodyParser","json","disable","urlencoded","extended","serializeUser","user","done","deserializeUser","obj","router","BridgeRouter","attachRoutes","port","PORT","request","response","next","status","__dirname","set","that","app","listen","err","console","log","on","socket","id"],"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","sourcesContent":["require('dotenv').config();\nimport express, { Router } from 'express';\nimport mongoose from 'mongoose'\nimport cors from 'cors';\nconst debug = require('debug')('ireport:server/server');\nconst util = require('util');\nimport bodyParser from 'body-parser';\nimport logger from 'morgan';\nimport BridgeRouter from './api/routes';\nimport config from './config/mongo_config.js';\nimport DbMongoose from './models/db';\nimport cookieParser from 'cookie-parser';\nimport passport from 'passport';\nimport session from 'express-session';\nimport methodOverride from 'method-override';\nimport fs from 'fs';\nimport path from 'path';\nimport compression from 'compression';\n// import helmet from 'helmet'; // csrf xcrf security\nconst pug = require('pug');\n//var config = require('./oauth.js');\nimport UserModel from './models/User.model';\n\nconst error = require('./middlewares/error');\n\n\n\n// var socket = require(\"socket.io\");\nvar http = require('http');\n\n\nvar socket_io = require(\"socket.io\");\nvar io = socket_io();\n\n//import favicon from 'serve-favicon';\n//const exphbs = require('express-handlebars');\n\nrequire('./config/passport'); // pass passport for configuration\n\n\nclass MongoAppDemo {\n  constructor() {\n    this.express = express();\n    this.express.use(logger('dev'));\n  \n    //this.express.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\n    // let corsOption = {\n    //     origin: true,\n    //     methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n    //     credentials: true,\n    //     exposedHeaders: ['x-auth-token']\n    // };\n\n    var allowedOrigins = [\n      'http://localhost:4000',\n      'https://checkout.paystack.com',\n      \"https://google.com\",\n      \"https:mail.google.com\",\n      \"https://facebook.com\",\n      \"https://twitter.com\",\n      \"https://instagram.com\"\n    ];\n\n    let corsOption = {\n       'Access-Control-Allow-Origin': '*',\n        // origin: function(origin, callback){\n        //   // allow requests with no origin \n        //   // (like mobile apps or curl requests)\n        //   if(!origin) return callback(null, true);\n        //   if(allowedOrigins.indexOf(origin) === -1){\n        //     var msg = 'The CORS policy for this site does not ' +\n        //               'allow access from the specified Origin.';\n        //     return callback(new Error(msg), false);\n        //   }\n        //   return callback(null, true);\n        // },\n        methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n        credentials: true,\n        exposedHeaders: ['x-auth-token'],\n         \"Access-Control-Allow-Credentials\" :\"true\"\n        \n    };\n    this.express.use(cors(corsOption));\n\n    // gzip compression\n    this.express.use(compression());\n// secure apps by setting various HTTP headers\n    // this.express.use(helmet());\n\n    // if error is not an instanceOf APIError, convert it.\n//     this.express.use(error.converter);\n\n// // catch 404 and forward to error handler\n//     this.express.use(error.notFound);\n\n// // error handler, send stacktrace only during development\n//     this.express.use(error.handler);\n\n//     this.express.options(\"/*\", function(req, res, next){\n//   res.header('Access-Control-Allow-Origin', '*');\n//   res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE,OPTIONS');\n//   res.header('Access-Control-Allow-Headers', 'Content-Type, Authorization, Content-Length, X-Requested-With');\n//   res.sendStatus(200);\n// });\n   // this.express.use(cors());\n    \n    // required for passport\n    this.express.use(session({ secret: process.env.SECRET, \n          resave: true,\n          saveUninitialized: true \n    })); // session secret\n    this.express.use(passport.initialize());\n    \n    //this.express.use(cors(corsOption));\n        \n    this.express.use(bodyParser.json());//\n    // this.express.use(methodOverride());\n    this.express.disable('x-powered-by');\n    this.express.use(\n          bodyParser.urlencoded({\n            extended: false,\n          }),\n    );\n    this.express.use(cookieParser());\n\n    // serialize and deserialize\n    // passport.serializeUser(function(user, done) {\n    //   console.log('serializeUser: ' + user.id);\n    //   done(null, user.id);\n    // });\n    // passport.deserializeUser(function(id, done) {\n    //   UserModel.findById(id, function(err, user){\n    //     console.log(user);\n    //       if(!err) done(null, user);\n    //       else done(err, null);\n    //     });\n    // });\n\n    passport.serializeUser(function(user, done) {\n      done(null, user);\n    });\n\n    passport.deserializeUser(function(obj, done) {\n      done(null, obj);\n    });\n\n    \n\n    const router = Router();\n    new BridgeRouter(router).attachRoutes();\n\n    this.port = process.env.PORT || 12000;\n    //define the route real path\n    this.express.use('/api/v1', router);\n    this.express.use((request, response, next) => {\n      response.status(404).json({\n        status: 404,\n        error: 'User has no record',\n      });\n      next();\n    });\n    this.express.disable('x-powered-by');\n    this.express.use(express.static(__dirname +'../../../public'));\n\n\n      // app.use(express.static(path.join(__dirname, 'public/')));\n      this.express.set('view engine', pug);\n\n\n  \n    \n  }\n\n  initialize() {}\n\n  run(port = 12000) {\n    const that = this;\n    if (port) {\n      this.port = port;\n      this.port = port;\n    }\n\n\n     let app = that.express;  \n\n\n    io.listen(\n       that.express.listen(that.port, err => {\n          if (err) {\n            return console.log(err);\n          }\n          console.log(`server is listening on ${that.port}`);\n       })\n    );\n\n    that.express.io = io.on(\"connection\", function(socket){\n      console.log(\"Socket connected: \" + socket.id);\n    });\n\n\n// }); \n\n \n\n   }\n}\n\n\n\nexport { passport };\nexport default MongoAppDemo;\n"],"file":"App.js"}