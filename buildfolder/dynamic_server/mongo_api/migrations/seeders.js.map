{"version":3,"sources":["../../../../server/dynamic_server/mongo_api/migrations/seeders.js"],"names":["MongooseDatabase","getInstance","db","Seeders","inspection","driveTest","setTimeout","InspectionModel","addInspection","err","collection","console","log","DriveTestModel","addTest","role","RolesAndPreviledgesModel","addRole","paystack","google","facebook","instagram","sendgrid","aws","PayStackSettingsModel","addSettings","FacebookSettingsModel","GoogleSettingsModel","InstagramSettingsModel","AWSSettingsModel","SendgridSettingsModel","dataUsers","UserModel","addUser","DriversModel","PartnerModel","cars","CarModel","addCars","Plan","PlanModel","addPlanCategory","indivPlan","IndividualPlanModel","addIndividualPlan","copPlan","CoperatePlanModel","addCoperatePlan","UsersPlanModel","addPlanToUser","itinerary","ItineraryModel","addItinerary","dataInterventions","id","findOne","exec","then","user","NewIntervention","SOSModel","_user","_id","save","savedIntervention","e","dataFaqs","FAQModel","addFaq","data","NotificationModel","addNotification","MechModel","addMech","WalletModel","addToWallet","QuoteModel","PaymentsModel","dataRedflags","NewFeedbackModel","FeedbackModel","savedRedflag","deleteMany","table","forEach","mongoose","connection","createCollection","coll"],"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","sourcesContent":["import mongoose from 'mongoose'\nimport UserModel from '../models/User.model';\nimport PartnerModel from \"../models/Partners.model\";\nimport DriversModel from \"../models/Driver.model\";\nimport SOSModel from '../models/SOS.model';\nimport FeedbackModel from '../models/Feedback.model';\nimport CarModel from '../models/Cars.model';\nimport PlanModel from '../models/Plan.model';\nimport IndividualPlanModel from '../models/IndividualPlan.model';\nimport CoperatePlanModel from '../models/CoperatePlan.model';\nimport UsersPlanModel from '../models/UserPlan.model';\nimport ItineraryModel from '../models/Itinerary.model';\nimport FAQModel from '../models/FAQ.model';\nimport NotificationModel from '../models/Notification.model';\nimport MechModel from '../models/Repairs.model';\nimport PayStackSettingsModel from \"../models/PaystackSettings.model\";\nimport FacebookSettingsModel from \"../models/FacebookSettings.model\";\nimport GoogleSettingsModel from \"../models/GmailSettings.model\";\nimport InstagramSettingsModel from \"../models/InstagramSettings.model\";\nimport AWSSettingsModel from \"../models/AWS3BucketSettings.model\";\nimport SendgridSettingsModel from \"../models/SendgridEmailSettings.model\";\nimport WalletModel from \"../models/Wallet.model\";\nimport PaymentsModel from \"../models/Payments.model\";\nimport QuotationsModel from \"../models/Quotation.model\";\nimport QuoteModel from \"../models/Quote.model\";\n\nimport InspectionModel from '../models/Inspection.model';\nimport DriveTestModel from '../models/DriveTest.model';\n\nimport RolesAndPreviledgesModel from '../models/RolesAndPreviledges.model'\nimport db from '../models/db';\n\nconst MongooseDatabase = db.getInstance() || new db();\n\nclass Seeders{\n\n  seedInspectionAndDriveTest(inspection,driveTest){\n     setTimeout(()  => {\n\n             InspectionModel.addInspection(inspection,(err, collection) =>{\n                 if(err){\n                   console.log('could not create inspection settings')\n                 }\n                 console.log(collection + \"inspection has been added\")\n             });\n\n\n            DriveTestModel.addTest(driveTest,(err, collection) =>{\n                 if(err){\n                   console.log('could not add drive test seed settings')\n                 }\n                 console.log(collection + \"drive test has been added\")\n             });\n\n\n            \n\n\n\n     },24000)\n  }\n\n\n  seedRole(role){\n     setTimeout(()  => {\n\n            RolesAndPreviledgesModel.addRole(role,(err, collection) =>{\n                 if(err){\n                   console.log('could not create roles')\n                   console.log(err)\n                 }\n                 console.log(collection + \"roles has been added\")\n             });\n\n\n     },22000)\n  }\n\n  seed3rdPartySettings(paystack,google,facebook,instagram,sendgrid,aws){\n           setTimeout(()  => {\n              PayStackSettingsModel.addSettings(paystack,(err, collection) =>{\n                 if(err){\n                   console.log('could not create paystack settings')\n                 }\n                 console.log(collection + \"paystack settings has been added\")\n             });\n\n\n              FacebookSettingsModel.addSettings(facebook,(err, collection) =>{\n                 if(err){\n                   console.log('could not facebook settings')\n                 }\n                 console.log(collection + \"facebook has been added\")\n             });\n\n\n              GoogleSettingsModel.addSettings(google,(err, collection) =>{\n                 if(err){\n                   console.log('could not google')\n                 }\n                 console.log(collection + \"google has been added\")\n             });\n\n\n              InstagramSettingsModel.addSettings(instagram,(err, collection) =>{\n                 if(err){\n                   console.log('could not create instagram')\n                 }\n                 console.log(collection + \"instagram settings has been added\")\n             });\n\n\n              AWSSettingsModel.addSettings(aws,(err, collection) =>{\n                 if(err){\n                   console.log('could not create aws settings')\n                 }\n                 console.log(collection + \"has been added\")\n             });\n\n              SendgridSettingsModel.addSettings(sendgrid,(err, collection) =>{\n                 if(err){\n                   console.log('could not create send grid settings')\n                 }\n                 console.log(collection + \"send grid has been added\")\n             })\n\n\n           },17000)\n    \n  }\n\n  seedUsers(dataUsers){\n           setTimeout(()  => {\n              UserModel.addUser(dataUsers,(err, collection) =>{\n                 if(err){\n                   console.log('could not create user')\n                 }\n                 console.log(collection + \"has been added\")\n             })\n           },3000)\n    \n  }\n\n  seedDrivers(dataUsers){\n           setTimeout(()  => {\n              DriversModel.addUser(dataUsers,(err, collection) =>{\n                 if(err){\n                   console.log('could not create driver')\n                 }\n                 console.log(collection + \"driver has been added\")\n             })\n           },15000)\n    \n  }\n\n  seedPartners(dataUsers){\n           setTimeout(()  => {\n              PartnerModel.addUser(dataUsers,(err, collection) =>{\n                 if(err){\n                   console.log('could not create partner')\n                 }\n                 console.log(collection + \"partner has been added\")\n             })\n           },19000)\n    \n  }\n\n  seedCars(cars){\n    setTimeout(()  => {\n              CarModel.addCars(cars,(err, collection) =>{\n                 if(err){\n                   console.log(err)\n                   console.log('could not create car')\n                 }\n                 console.log(collection + \" for cars has been added\")\n             })\n           },11000)\n  }\n\n\n  seedPlanCategory(Plan){\n    setTimeout(()  => {\n              PlanModel.addPlanCategory(Plan,(err, collection) =>{\n                 if(err){\n                   console.log('could not create  plan category')\n                 }\n                 console.log(collection + \" for plans category has been added\")\n             })\n           },17000)\n  }\n\n\n  seedIndividualPlans(indivPlan){\n    setTimeout(()  => {\n           IndividualPlanModel.addIndividualPlan(indivPlan,(err, collection) =>{\n                 if(err){\n                   console.log('could not create individual plan')\n                 }\n                 console.log(collection + \" for individual plans has been added\")\n             })\n           },15000)\n  }\n\n\n  seedCoperatePlans(copPlan){\n    setTimeout(()  => {\n              CoperatePlanModel.addCoperatePlan(copPlan,(err, collection) =>{\n                 if(err){\n                   console.log('could not create coperate plan')\n                 }\n                 console.log(collection + \" for coperate plans has been added\")\n             })\n           },19000)\n  }\n\n  seedUsersPlan(copPlan){\n    setTimeout(()  => {\n              UsersPlanModel.addPlanToUser(copPlan,(err, collection) =>{\n                 if(err){\n                   console.log('could not create user  plan')\n                 }\n                 console.log(collection + \" for **** user plans has been added\")\n             })\n           },13000)\n  }\n\n\n\n  seedItinerary(itinerary){\n    setTimeout(()  => {\n            ItineraryModel.addItinerary(itinerary,(err, collection) =>{\n                 if(err){\n                   console.log('could not create user  itinerary')\n                 }\n                 console.log(collection + \" for **** user itinerary has been added\")\n             })\n           },4000)\n  }\n\n\n\t\n\n\tseedSOSRequestByUser(dataInterventions, id){\n     \n          // perform seeding\n          setTimeout(()  => {\n              UserModel.findOne({id: id}).exec()\n              .then((user) =>{\n               console.log(user + \"to porpulate by redflag\")\n               \n               const NewIntervention = new SOSModel({...dataInterventions,_user: user._id});\n              NewIntervention.save()\n                .then(savedIntervention => console.log(savedIntervention  + \"has been added\"))\n                .catch(e => console.log(e));\n\n            }).catch(e => console.log('could not find user data for his redflag/sos'))\n\n           },12000)\n \n\t}\n\n  seedFaqs(dataFaqs){\n\n    setTimeout(()  => {\n              FAQModel.addFaq(dataFaqs,(err, collection) =>{\n                 if(err){\n                   console.log('could not create dataFaqs')\n                 }\n                 console.log(collection + \" dataFaqs has been added\")\n             })\n           },18000)\n\n  }\n\n\n  seedNotification(data){\n\n    setTimeout(()  => {\n              NotificationModel.addNotification(data,(err, collection) =>{\n                 if(err){\n                   console.log('could not create data for addMech')\n                 }\n                 console.log(collection + \" addMech has been added\")\n             })\n           },20000)\n\n  }\n\n  seedMechanicRequest(data){\n\n    setTimeout(()  => {\n      MechModel.addMech(data,(err, collection) =>{\n                 if(err){\n                   console.log('could not create data for notification')\n                 }\n                 console.log(collection + \" dnotification has been added\")\n             })\n      },20000)\n\n  }\n\n  seedWalletHistory(data){\n\n    setTimeout(()  => {\n      WalletModel.addToWallet(data,(err, collection) =>{\n                 if(err){\n                   console.log('could not add topwallet for user')\n                 }\n                 console.log(collection + \"top wallet transaction has been added\")\n             })\n      },24000)\n\n  }\n\n  seedQuotationHistory(data){\n    setTimeout(()  => {\n      QuoteModel.addToWallet(data,(err, collection) =>{\n        if(err){\n          console.log('could not add quotation for user')\n        }\n          console.log(collection + \" quotation transaction has been added\")\n        })\n      },40000)\n\n  }\n\n\n  seedPaymentHistory(data){\n    setTimeout(()  => {\n      PaymentsModel.addToWallet(data,(err, collection) =>{\n                 if(err){\n                   console.log('could not add payments for user')\n                 }\n                 console.log(collection + \" payment transaction has been added\")\n             })\n      },18000)\n\n  }\n\n\n\n\tseedFeedbackByUser(dataRedflags, id){\n          // perform seeding\n          //Awesome saladin.. Awesome!!!\n          setTimeout(()  => {\n            UserModel.findOne({id: id}).exec()\n            .then((user) =>{\n             console.log(user + \"to porpulate by intervention\")\n             \n             const NewFeedbackModel = new FeedbackModel({...dataRedflags,_user: user._id});\n            NewFeedbackModel.save()\n              .then(savedRedflag => console.log(savedRedflag  + \"has been added\"))\n              .catch(e => console.log(e));\n\n          }).catch(e => console.log('could not find user data for his redflag'))\n\n         },21000)     \n\t}\n\n\n\n\n\n\n\ttearDown(){\n    UserModel.deleteMany().exec()\n    .then(table=> console.log('table deleted: ' + table))\n    .catch(e => throw e)\n     \n    SOSModel.deleteMany().exec()\n       .then(table=> console.log('table deleted: ' + table))\n       .catch(e => throw e)\n\n    SOSModel.deleteMany().exec()\n       .then(table=> console.log('table deleted: ' + table))\n       .catch(e => throw e)\n\n    CarModel.deleteMany().exec()\n       .then(table=> console.log('table deleted: ' + table))\n       .catch(e => throw e)\n\n    PlanModel.deleteMany().exec()\n       .then(table=> console.log('table deleted: ' + table))\n       .catch(e => throw e)\n\n    IndividualPlanModel.deleteMany().exec()\n       .then(table=> console.log('table deleted: ' + table))\n       .catch(e => throw e)\n\n   \n    CoperatePlanModel.deleteMany().exec()\n       .then(table=> console.log('table deleted: ' + table))\n       .catch(e => throw e)\n\n\n    UsersPlanModel.deleteMany().exec()\n       .then(table=> console.log('table deleted: ' + table))\n       .catch(e => throw e)\n\n    // for(let collection in mongoose.connection.collections){\n    //   mongoose.connection.collections[collection].drop( (err,coll) =>{\n    //      if(err){\n    //        console.log(\"error droping\")\n    //      }\n    //      console.log(coll +\" has been dropped\")\n    //   })\n    // }\n       \n\t}\n\n\tbuildUp(){\n     [\n       //all collections to create\n      \n      'users',\n      'plan',\n      'cars',\n\n\n     ].forEach((table)=>{\n         mongoose.connection.createCollection(table, (err,coll) =>{\n           if(err){\n             console.log(\"error creating\")\n           }\n           console.log(coll +\" has been created\")\n        });\n\n     });\n\t\n  \n\t}\n}\nexport default Seeders;"],"file":"seeders.js"}