{"version":3,"sources":["../../../../server/dynamic_server/mongo_api/utils/APIError.js"],"names":["httpStatus","require","ExtendableError","message","errors","status","isPublic","stack","name","constructor","isOperational","Error","APIError","INTERNAL_SERVER_ERROR","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,UAAU,0BAAGC,OAAO,CAAC,aAAD,CAAV,CAAhB;AAEA;;;;IAGMC,e;;;;;AACJ,iCAEG;AAAA;;AAAA,QADDC,OACC,QADDA,OACC;AAAA,QADQC,MACR,QADQA,MACR;AAAA,QADgBC,MAChB,QADgBA,MAChB;AAAA,QADwBC,QACxB,QADwBA,QACxB;AAAA,QADkCC,KAClC,QADkCA,KAClC;;AAAA;;AAAA;AAAA;AACD,yFAAMJ,OAAN;AADC;AAED,UAAKK,IAAL,GAAY,MAAKC,WAAL,CAAiBD,IAA7B;AAFC;AAGD,UAAKL,OAAL,GAAeA,OAAf;AAHC;AAID,UAAKC,MAAL,GAAcA,MAAd;AAJC;AAKD,UAAKC,MAAL,GAAcA,MAAd;AALC;AAMD,UAAKC,QAAL,GAAgBA,QAAhB;AANC;AAOD,UAAKI,aAAL,GAAqB,IAArB,CAPC,CAO0B;;AAP1B;AAQD,UAAKH,KAAL,GAAaA,KAAb,CARC,CASD;;AATC;AAUF;;;mBAb2BI,K;AAgB9B;;;;;;IAIMC,Q;;;;;AACJ;;;;;;AAMA,2BAMG;AAAA,QALDT,OAKC,SALDA,OAKC;AAAA,QAJDC,MAIC,SAJDA,MAIC;AAAA,QAHDG,KAGC,SAHDA,KAGC;AAAA,6BAFDF,MAEC;AAAA,QAFDA,MAEC,uDAFQL,UAAU,CAACa,qBAEnB;AAAA,+BADDP,QACC;AAAA,QADDA,QACC,yDADU,KACV;;AAAA;;AAAA;AAAA;AAAA,iFACK;AACJH,MAAAA,OAAO,EAAPA,OADI;AACKC,MAAAA,MAAM,EAANA,MADL;AACaC,MAAAA,MAAM,EAANA,MADb;AACqBC,MAAAA,QAAQ,EAARA,QADrB;AAC+BC,MAAAA,KAAK,EAALA;AAD/B,KADL;AAIF;;;EAjBoBL,e;;;AAoBvBY,MAAM,CAACC,OAAP,GAAiBH,QAAjB","sourcesContent":["const httpStatus = require('http-status');\n\n/**\n * @extends Error\n */\nclass ExtendableError extends Error {\n  constructor({\n    message, errors, status, isPublic, stack,\n  }) {\n    super(message);\n    this.name = this.constructor.name;\n    this.message = message;\n    this.errors = errors;\n    this.status = status;\n    this.isPublic = isPublic;\n    this.isOperational = true; // This is required since bluebird 4 doesn't append it anymore.\n    this.stack = stack;\n    // Error.captureStackTrace(this, this.constructor.name);\n  }\n}\n\n/**\n * Class representing an API error.\n * @extends ExtendableError\n */\nclass APIError extends ExtendableError {\n  /**\n   * Creates an API error.\n   * @param {string} message - Error message.\n   * @param {number} status - HTTP status code of error.\n   * @param {boolean} isPublic - Whether the message should be visible to customer or not.\n   */\n  constructor({\n    message,\n    errors,\n    stack,\n    status = httpStatus.INTERNAL_SERVER_ERROR,\n    isPublic = false,\n  }) {\n    super({\n      message, errors, status, isPublic, stack,\n    });\n  }\n}\n\nmodule.exports = APIError;\n"],"file":"APIError.js"}