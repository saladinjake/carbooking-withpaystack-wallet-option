{"version":3,"sources":["../../../../server/dynamic_server/mongo_api/controllers/ewallet.controller.js"],"names":["httpStatus","require","omit","UserModel","Transaction","paymentService","withdrawalService","transferService","errorHandler","handler","exports","getBalance","request","response","find","email","params","id","then","data","redFlag","length","status","json","error","accountBalance","balance","message","err","getTransactions","req","res","next","query","accountNumber","user","list","transactions","transformedTransactions","map","transaction","transform","console","log","deposit","debitCard","customer","body","card","amount","paymentResponse","transfer","destinationAccountNumber","transferResponse","withdrawal","withdrawalResponse"],"mappingsaAAD,CAAV,CAAhB;;AACA,mCAAiBA,OAAO,CAAC,QAAD,CAAxB;AAAA,IAAQC,IAAR,QAAQA,IAAR;;AACA,IAAMC,SAAS,2BAAGF,OAAO,CAAC,sBAAD,CAAV,CAAf;AACA,IAAMG,WAAW,2BAAGH,OAAO,CAAC,6BAAD,CAAV,CAAjB;AACA,IAAMI,cAAc,2BAAGJ,OAAO,CAAC,4BAAD,CAAV,CAApB;AACA,IAAMK,iBAAiB,2BAAGL,OAAO,CAAC,+BAAD,CAAV,CAAvB;AACA,IAAMM,eAAe,2BAAGN,OAAO,CAAC,6BAAD,CAAV,CAArB;;AACA,oCAAkCA,OAAO,CAAC,sBAAD,CAAzC;AAAA,IAAiBO,YAAjB,SAAQC,OAAR;AACA;;AACA;;AACA;;AACA;AACA;AACA;AACA;;;;;AACAC,OAAO,CAACC,UAAR,GAAqB,UAACC,OAAD,EAAUC,QAAV,EAAuB;AAAA;AAAA;AAC1CV,EAAAA,SAAS,CAACW,IAAV,CAAe;AAAEC,IAAAA,KAAK,EAAEH,OAAO,CAACI,MAAR,CAAeC;AAAxB,GAAf,EACGC,IADH,CACQ,UAAAC,IAAI,EAAI;AAAA;AACZ,QAAMC,OAAO,4BAAGD,IAAH,CAAb;AADY;;AAEZ,QAAIC,OAAO,CAACC,MAAR,IAAkB,CAAtB,EAAyB;AAAA;AAAA;AACvB,aAAOR,QAAQ,CAACS,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAC/BD,QAAAA,MAAM,EAAE,GADuB;AAE/BE,QAAAA,KAAK,EAAE;AAFwB,OAA1B,CAAP;AAID,KALD;AAAA;AAAA;;AAMA,QAAMC,cAAc,4BAAGN,IAAI,CAAC,CAAD,CAAJ,CAAQO,OAAX,CAApB;AARY;AASZ,WAAOb,QAAQ,CAACS,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAC/BD,MAAAA,MAAM,EAAE,GADuB;AAE/BH,MAAAA,IAAI,EAAE,CACJ;AACEM,QAAAA,cAAc,EAAdA,cADF;AAEEE,QAAAA,OAAO,EAAE;AAFX,OADI;AAFyB,KAA1B,CAAP;AASD,GAnBH,WAoBS,UAAAC,GAAG,EACR;AAAA;AAAA;AAAA,WAAAf,QAAQ,CAACS,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AACxBD,MAAAA,MAAM,EAAE,GADgB;AAExBE,MAAAA,KAAK,EAAE;AAFiB,KAA1B;AAGE,GAxBN;AA0BD,CA3BD;AA6BA;AACA;AACA;AACA;;;;;AACAd,OAAO,CAACmB,eAAR;AAAA,4FAA0B,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEtBF,YAAAA,GAAG,CAACG,KAAJ,CAAUC,aAAV,GAA0BJ,GAAG,CAACK,IAAJ,CAASD,aAAnC;AAFsB;AAAA;AAAA,mBAGK9B,WAAW,CAACgC,IAAZ,CAAiBN,GAAG,CAACG,KAArB,CAHL;;AAAA;AAGhBI,YAAAA,YAHgB;AAIhBC,YAAAA,uBAJgB,4BAIUD,YAAY,CAACE,GAAb,CAAiB,UAAAC,WAAW,EAAI;AAAA;AAAA;AAAA,qBAAAA,WAAW,CAACC,SAAZ;AAAuB,aAAvD,CAJV;AAAA;AAKtBC,YAAAA,OAAO,CAACC,GAAR,CAAYL,uBAAZ;AALsB;AAMtBP,YAAAA,GAAG,CAACR,IAAJ,CAASe,uBAAT;AANsB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQtBN,YAAAA,IAAI,aAAJ;;AARsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;;;;;AACAtB,OAAO,CAACkC,OAAR;AAAA,4FAAkB,kBAAOd,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEgB3B,cAAc,CAACwC,SAAf,CAC5Bf,GAAG,CAACgB,QAAJ,CAAaZ,aADe,EAE5BJ,GAAG,CAACiB,IAAJ,CAASC,IAFmB,EAG5BlB,GAAG,CAACiB,IAAJ,CAASE,MAHmB,CAFhB;;AAAA;AAERC,YAAAA,eAFQ;AAAA;AAOdnB,YAAAA,GAAG,CAACR,IAAJ,CAAS2B,eAAT;AAPc;AAAA;;AAAA;AAAA;AAAA;AAAA;AASdlB,YAAAA,IAAI,cAAJ;;AATc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;;;;;AACAtB,OAAO,CAACyC,QAAR;AAAA,4FAAmB,kBAAOrB,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEgBzB,eAAe,CAAC4C,QAAhB,CAC7BrB,GAAG,CAACgB,QAAJ,CAAaZ,aADgB,EAE7BJ,GAAG,CAACiB,IAAJ,CAASE,MAFoB,EAG7BnB,GAAG,CAACiB,IAAJ,CAASK,wBAHoB,CAFhB;;AAAA;AAETC,YAAAA,gBAFS;AAAA;AAOftB,YAAAA,GAAG,CAACR,IAAJ,CAAS8B,gBAAT;AAPe;AAAA;;AAAA;AAAA;AAAA;AAAA;AASfrB,YAAAA,IAAI,cAAJ;;AATe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;;;;;AACAtB,OAAO,CAAC4C,UAAR;AAAA,4FAAqB,kBAAOxB,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEgB1B,iBAAiB,CAACgD,UAAlB,CAC/BxB,GAAG,CAACgB,QAAJ,CAAaZ,aADkB,EAE/BJ,GAAG,CAACiB,IAAJ,CAASC,IAFsB,EAG/BlB,GAAG,CAACiB,IAAJ,CAASE,MAHsB,CAFhB;;AAAA;AAEXM,YAAAA,kBAFW;AAAA;AAOjBxB,YAAAA,GAAG,CAACR,IAAJ,CAASgC,kBAAT;AAPiB;AAAA;;AAAA;AAAA;AAAA;AAAA;AASjBvB,YAAAA,IAAI,cAAJ;;AATiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["const httpStatus = require('http-status');\nconst { omit } = require('lodash');\nconst UserModel = require('../models/User.model');\nconst Transaction = require('../models/transaction.model');\nconst paymentService = require('../services/paymentService');\nconst withdrawalService = require('../services/withdrawalService');\nconst transferService = require('../services/transferService');\nconst { handler: errorHandler } = require('../middlewares/error');\n/****************************************************************/\n/******* @author saladin jake (Victor juwa) ********************************/\n/******* @desc Express js || ****************/\n/**\n * Get customer balance\n * @public\n */\nexports.getBalance = (request, response) => {\n  UserModel.find({ email: request.params.id })\n    .then(data => {\n      const redFlag = data;\n      if (redFlag.length <= 0) {\n        return response.status(404).json({\n          status: 404,\n          error: 'The id of the given red-flag was not found',\n        });\n      }\n      const accountBalance = data[0].balance;\n      return response.status(200).json({\n        status: 200,\n        data: [\n          {\n            accountBalance,\n            message: 'Get a specific red-flag was successful',\n          },\n        ],\n      });\n    })\n    .catch(err =>\n      response.status(400).json({\n        status: 400,\n        error: 'some error occured',\n      }),\n    );\n};\n\n/**\n * Get customer transactions\n * @public\n */\nexports.getTransactions = async (req, res, next) => {\n  try {\n    req.query.accountNumber = req.user.accountNumber;\n    const transactions = await Transaction.list(req.query);\n    const transformedTransactions = transactions.map(transaction => transaction.transform());\n    console.log(transformedTransactions);\n    res.json(transformedTransactions);\n  } catch (error) {\n    next(error);\n  }\n};\n\n/**\n * eWallet Deposit\n * @public\n */\nexports.deposit = async (req, res, next) => {\n  try {\n    const paymentResponse = await paymentService.debitCard(\n      req.customer.accountNumber,\n      req.body.card,\n      req.body.amount,\n    );\n    res.json(paymentResponse);\n  } catch (error) {\n    next(error);\n  }\n};\n\n/**\n * eWallet Transfer\n * @public\n */\nexports.transfer = async (req, res, next) => {\n  try {\n    const transferResponse = await transferService.transfer(\n      req.customer.accountNumber,\n      req.body.amount,\n      req.body.destinationAccountNumber,\n    );\n    res.json(transferResponse);\n  } catch (error) {\n    next(error);\n  }\n};\n\n/**\n * eWallet Withdrawal\n * @public\n */\nexports.withdrawal = async (req, res, next) => {\n  try {\n    const withdrawalResponse = await withdrawalService.withdrawal(\n      req.customer.accountNumber,\n      req.body.card,\n      req.body.amount,\n    );\n    res.json(withdrawalResponse);\n  } catch (error) {\n    next(error);\n  }\n};\n"],"file":"ewallet.controller.js"}