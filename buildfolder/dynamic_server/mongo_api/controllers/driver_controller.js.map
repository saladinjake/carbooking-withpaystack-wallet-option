{"version":3,"sources":["../../../../server/dynamic_server/mongo_api/controllers/driver_controller.js"],"names":["DriverController","request","response","DriverService","signup","login","confirmationPost","resendTokenPost","passwordForgot","confirmResetPassword","changePasswordTrigger","updateProfile","showProfile","DriverRedFlagService","createRedFlag","allRedFlags","redFlagId","sendNotifications","getNotifications","editRedFlag","editRedFlagComment","deleteRedFlag","updateRedFlagStatus","usersRedflags","getDriversAssignedTrips","getAssignedDriverToCars","driverConfirmBooking"],"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","sourcesContent":["/* eslint-disable prefer-const */\nimport { DriverService } from '../services/driver_services';\nimport { DriverRedFlagService } from '../services/sos_service_drivers'\n\nexport default class DriverController {\n  static signup(request, response) {\n    return DriverService.signup(request, response);\n  }\n\n  static login(request, response) {\n    return DriverService.login(request, response);\n  }\n\n  static confirmationPost(request,response){\n    return DriverService.confirmationPost(request,response)\n  }\n\n  static resendTokenPost(request,response){\n    return DriverService.resendTokenPost(request,response)\n  }\n\n  static passwordForgot(request, response){\n    return DriverService.passwordForgot(request,response);\n  }\n\n\n\n\n  static confirmResetPassword(request,response){\n    return DriverService.confirmResetPassword(request,response);\n  }\n\n  static changePasswordTrigger(request,response){\n    return DriverService.changePasswordTrigger(request,response);\n  }\n\n  \n\n  static updateProfile(request,response){\n    return DriverService.updateProfile(request,response)\n  }\n\n  static showProfile(request,response){\n    return DriverService.showProfile(request,response)\n  }\n\n\n\n\n  static createRedFlag(request, response){\n   return DriverRedFlagService.createRedFlag(request, response);\n  }\n\n  static allRedFlags(request, response){\n    return DriverRedFlagService.allRedFlags(request, response);\n  }\n\n  static redFlagId(request, response){\n    return DriverRedFlagService.redFlagId(request, response);\n  }\n\n  static sendNotifications(request, response){\n    return DriverRedFlagService.sendNotifications(request, response);\n  }\n\n  static getNotifications(request, response){\n    return DriverRedFlagService.getNotifications(request, response);\n  }\n\n  static editRedFlag(request, response){\n    return DriverRedFlagService.editRedFlag(request, response);\n  }\n\n  static editRedFlagComment(request, response){\n    return DriverRedFlagService.editRedFlagComment(request, response);\n  }\n\n  static deleteRedFlag(request, response){\n    return DriverRedFlagService.deleteRedFlag(request, response);\n  }\n\n  static updateRedFlagStatus(request, response){\n    return DriverRedFlagService.updateRedFlagStatus(request, response);\n  }\n  static usersRedflags(request, response){\n    DriverRedFlagService.usersRedflags(request, response);\n  }\n\n\n  static getDriversAssignedTrips(request, response){\n      DriverService.getDriversAssignedTrips(request, response)\n  }\n\n  static getAssignedDriverToCars(request, response){\n      DriverService.getAssignedDriverToCars(request, response)\n  }\n\n\n\n  \n\n  \n\n\n\n\n\n\n\n\n\n\n\n  //drivers\n\n  static driverConfirmBooking(request,response){\n     return DriverService.driverConfirmBooking(request,response); \n  }\n\n\n\n}\n"],"file":"driver_controller.js"}