{"version":3,"sources":["../../../../server/dynamic_server/mongo_api/controllers/driver_controller.js"],"names":["DriverController","request","response","DriverService","signup","login","confirmationPost","resendTokenPost","passwordForgot","confirmResetPassword","changePasswordTrigger","updateProfile","showProfile","DriverRedFlagService","createRedFlag","allRedFlags","redFlagId","sendNotifications","getNotifications","editRedFlag","editRedFlagComment","deleteRedFlag","updateRedFlagStatus","usersRedflags","getDriversAssignedTrips","getAssignedDriverToCars","driverConfirmBooking"],"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","sourcesContent":["/* eslint-disable prefer-const */\nimport { DriverService } from '../services/driver_services';\nimport { DriverRedFlagService } from '../services/sos_service_drivers';\n/****************************************************************/\n/******* @author saladin jake (Victor juwa) ********************************/\n/******* @desc Express js || ****************/\nexport default class DriverController {\n  static signup(request, response) {\n    return DriverService.signup(request, response);\n  }\n\n  static login(request, response) {\n    return DriverService.login(request, response);\n  }\n\n  static confirmationPost(request, response) {\n    return DriverService.confirmationPost(request, response);\n  }\n\n  static resendTokenPost(request, response) {\n    return DriverService.resendTokenPost(request, response);\n  }\n\n  static passwordForgot(request, response) {\n    return DriverService.passwordForgot(request, response);\n  }\n\n  static confirmResetPassword(request, response) {\n    return DriverService.confirmResetPassword(request, response);\n  }\n\n  static changePasswordTrigger(request, response) {\n    return DriverService.changePasswordTrigger(request, response);\n  }\n\n  static updateProfile(request, response) {\n    return DriverService.updateProfile(request, response);\n  }\n\n  static showProfile(request, response) {\n    return DriverService.showProfile(request, response);\n  }\n\n  static createRedFlag(request, response) {\n    return DriverRedFlagService.createRedFlag(request, response);\n  }\n\n  static allRedFlags(request, response) {\n    return DriverRedFlagService.allRedFlags(request, response);\n  }\n\n  static redFlagId(request, response) {\n    return DriverRedFlagService.redFlagId(request, response);\n  }\n\n  static sendNotifications(request, response) {\n    return DriverRedFlagService.sendNotifications(request, response);\n  }\n\n  static getNotifications(request, response) {\n    return DriverRedFlagService.getNotifications(request, response);\n  }\n\n  static editRedFlag(request, response) {\n    return DriverRedFlagService.editRedFlag(request, response);\n  }\n\n  static editRedFlagComment(request, response) {\n    return DriverRedFlagService.editRedFlagComment(request, response);\n  }\n\n  static deleteRedFlag(request, response) {\n    return DriverRedFlagService.deleteRedFlag(request, response);\n  }\n\n  static updateRedFlagStatus(request, response) {\n    return DriverRedFlagService.updateRedFlagStatus(request, response);\n  }\n  static usersRedflags(request, response) {\n    DriverRedFlagService.usersRedflags(request, response);\n  }\n\n  static getDriversAssignedTrips(request, response) {\n    DriverService.getDriversAssignedTrips(request, response);\n  }\n\n  static getAssignedDriverToCars(request, response) {\n    DriverService.getAssignedDriverToCars(request, response);\n  }\n\n  //drivers\n\n  static driverConfirmBooking(request, response) {\n    return DriverService.driverConfirmBooking(request, response);\n  }\n}\n"],"file":"driver_controller.js"}