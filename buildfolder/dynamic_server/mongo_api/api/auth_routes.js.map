{"version":3,"sources":["../../../../server/dynamic_server/mongo_api/api/auth_routes.js"],"names":["dotenv","config","SIGNUP_LINK","LOGIN_LINK","AuthRoutes","router","get","request","response","status","json","message","post","UserSanitizer","validateSignUp","checkIfUserExists","UserController","signup","validateLogin","checkIfUserIsBanned","login","confirmationPost","resendTokenPost","passwordForgot","confirmResetPassword","changePasswordTrigger","req","res","logout","redirect","createToken","auth","JWT","sign","id","process","env","SECRET","expiresIn","passport","authenticate","session","failureRedirect","user","send","console","log","token","setHeader","scope"],"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","sourcesContent":["import dotenv from 'dotenv';\ndotenv.config();\nimport UserController from '../controllers/user_controller';\nimport UserSanitizer from '../middlewares/user_sanitizer';\n\n// for social media auth\nimport JWT from 'jsonwebtoken';\nimport { TokenGenerator } from '../helpers/token_generator';\n\nimport { passport } from  '../App';\nimport  config from  '../config/mongo_config';\nimport request from 'request';\n\n\n\n// import BridgeRoutes from './routes';\nconst SIGNUP_LINK = '/auth/signup';\nconst LOGIN_LINK = '/auth/login';\nclass AuthRoutes {\n  constructor(router) {\n    // super(router);\n    this.router = router;\n  }\n\n  attachRoutes() {\n    // simplelogins\n    this.router.get('/', (request, response) =>\n      response.status(200).json({\n        message: 'Welcome to commute API',\n      }),\n    );\n    this.router.post(\n      '/auth/signup',\n      UserSanitizer.validateSignUp,\n      UserSanitizer.checkIfUserExists,\n      UserController.signup,\n    );\n    this.router.post('/auth/login', \n      UserSanitizer.validateLogin,\n      UserSanitizer.checkIfUserIsBanned,\n      UserController.login\n     );\n    this.router.get('/auth/confirmation/:id', UserController.confirmationPost);\n    this.router.get('/auth/resend/:id', UserController.resendTokenPost);\n    this.router.post('/auth/forgot_password', UserController.passwordForgot);\n    this.router.get('/auth/resetMyPassword/:id', UserController.confirmResetPassword);//show form\n    this.router.post('/auth/resetpassword', UserController.changePasswordTrigger);\n\n    this.router.get('/logout', function(req, res){\n      req.logout();\n      res.redirect('/');\n    });\n  //   return this.router;\n\n  \nconst createToken = auth => {\n    return JWT.sign({\n        id: auth.id\n    }, process.env.SECRET, { expiresIn: 60 * 120 });\n}\n// module.exports = {\n//     facebookOAuth: async (req, res, next) => {\n//         if(!req.user) {\n//             return res.send(401, 'User not authenticated');\n//         }\n//         req.token = createToken(req.user);\n//         res.setHeader('x-auth-token', req.token);\n//         res.status(200).json(req.token);\n//     }\n// };\n    // send to google to do the authentication\n    this.router.get('/auth/facebook',\n        passport.authenticate('facebook'),\n        function(req, res){});\n    this.router.get('/auth/facebook/callback',\n        passport.authenticate('facebook', {session: false, failureRedirect: '/' }),\n        function(req, res) {\n           //console.log(req.user)\n        if(!req.user) {\n            return res.send(401, 'User not authenticated');\n        }\n\n        if(req.user){\n          console.log(req.user)\n        }\n\n        \n        req.token = createToken(req.user);\n        res.setHeader('x-auth-token', req.token);\n        res.status(200).json(req.token);\n        // res.redirect(`/${req.roken}`);\n        \n    });\n\n    this.router.get('/auth/twitter',\n        passport.authenticate('twitter'),\n        function(req, res){});\n    this.router.get('/auth/twitter/callback',\n        passport.authenticate('twitter', { failureRedirect: '/' }),\n        function(req, res) {\n          res.redirect('http://localhost:4000');\n        });\n\n      \n    this.router.get('/auth/google',\n        passport.authenticate('google', { scope: [\n          'https://www.googleapis.com/auth/plus.login',\n          'https://www.googleapis.com/auth/plus.profile.emails.read'\n        ] }\n      ));\n    this.router.get('/auth/google/callback',\n        passport.authenticate('google', { failureRedirect: '/' }),\n        \n        function(req, res) {\n          res.redirect('http://localhost:4000');\n    });\n\n    this.router.get('/auth/instagram',\n        passport.authenticate('instagram'),\n        function(req, res){});\n    this.router.get('/auth/instagram/callback',\n        passport.authenticate('instagram', { failureRedirect: '/' }),\n        function(req, res) {\n          res.redirect('/account');\n    });\n\n\n\n  }\n}\nexport default AuthRoutes;\n"],"file":"auth_routes.js"}