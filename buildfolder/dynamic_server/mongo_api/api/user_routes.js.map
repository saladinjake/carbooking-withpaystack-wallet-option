{"version":3,"sources":["../../../../server/dynamic_server/mongo_api/api/user_routes.js"],"names":["corsOption","origin","methods","credentials","exposedHeaders","controllerWallet","require","UserRoutes","router","get","req","res","next","MailConfig","ViewOption","gmailTransport","hbs","HelperOptions","from","to","subject","template","context","name","email","address","sendMail","error","info","console","log","json","smtpTransport","verify","success","output","message","end","UserController","testEmail","TokenVerification","userAuthentication","showProfile","post","UserSanitizer","validateSignUp","updateProfile","getCarsInfo","individualPlans","coperatePlans","addNewPlans","getAllUsersPlans","getAllUsersQuotations","getOnePlanById","patch","updateItem","deleteItem","put","debitWallet","updatePlanStatus","updateItinStatus","updateQuoteStatus","addDriveTestFromItinerary","getUserCars","saveUsersItinerary","getUsersItinerary","updateItineraryStatus","updateDriverRatings","editViewUsersItinerary","updateUsersItinerary","route","getBalance","paystackPayMeMoney","paystackCallBack","paystackReceipt","paystackHistory","paystackPayments","createPaymentDetail","paystackQuotations","makeNotification","getUserNotification","render","adminAuthentication","checkIfUserExists","addUserByAdmin","manageUsers","manageUsersDetail","manageUsersDetailVerification","deleteUser","addAdminByAdmin","manageAdmins","manageAdminsDetail","manageAdminsDetailVerification","checkIfDriverExists","addDriverByAdmin","manageDrivers","manageDriversDetail","manageDriversDetailVerification","deleteDriver","managePartners","deletePartner","managePartnersDetail","managePartnersDetailVerification","checkIfPartnerExists","addPartnerByAdmin","managePartnersEarnings","deletePartnersEarnings","managePartnersEarningsDetail","addPartnersEarningsByAdmin","manageProfile","manageProfileDetail","manageProfileDetailVerification","managePlanPackage","managePlanPackageCorporate","createNewPlan","managePlanPackageDetail","deletePlanPackage","manageSOS","manageSOSDetail","deleteSOS","manageTickets","manageTicketsDetail","deleteTicket","createNewTicket","manageFaqs","manageFaqsDetail","createNewFAQ","manageGoogleSettings","manageFacebookSettings","managePaystackSettings","manageEmailSettings","manageS3BucketSettings","manageInstagramSettings","manageSettingsDetail","manageItineraries","manageUsersPlan","manageItineraryDetail","manageUserNotificationCounter","manageBookings","manageBookingsDetail","makeQuotation","manageManualBooking","adminDashboard","adminDashboardTodaySales","adminDashboardYesterdaySales","adminDashboardWeeklySales","adminDashboardMonthlySales","paystackHistoryAdmin","paystackPaymentsAdmin","paystackQuotationsAdmin","deletePayment","deleteWallet","deleteQuotation","updateUsersPlanStatusAdmin","updateItineraryStatusAdmin","checkIfUserDoesntExists","createNewItinerary","createNewPlanBooking","createNewCar","manageCars","manageCarsDetail","manageInspection","createNewInspection","manageInspectionDetail","deleteInspection","manageDriveTest","manageDriveTestDetail","createNewDriveTest","deleteDriveTest","manageUsersDriveTestCenterUpdate","managePreviledges","createNewPreviledges","adminPreviledgesEdit","getUserPreviledges","showUserInfo","setOldBalance","managePreviledgesDetail","deletePreviledges","showProfileRights","getTrails","createTrail","getAllNotification","getAllRepairs","changeRepairStatus","driverConfirmBooking","revokecar","revokecarstatus","getrevokecars","updateNotificationStatus","io","app","body","status","params","id","DriverModel","updateOne","$set","socketId","err","updateDetails","send","find","parseFloat","latitude","request","longitude","location","findOne","driverId","emit","update","_id","coordinate","coordinates","db","driversLocation","mongojs","ObjectId","updatedLocation","type","payload"],"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","sourcesContent":["import UserController from '../controllers/user_controller';\nimport UserSanitizer from '../middlewares/user_sanitizer';\n\nimport TokenVerification from '../middlewares/token_validator';\nimport SubmitEventValidator from '../middlewares/post_sanitizer';\n\nimport DriverModel from \"../models/Driver.model\";\n\n\n\nimport cors from 'cors';\nlet corsOption = {\n        origin: true,\n        methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n        credentials: true,\n        exposedHeaders: ['x-auth-token'],\n        'Access-Control-Allow-Origin': '*'\n    };\n\n\n\n//for e wallet transactions\n\n// const validate = require('express-validation');\n const controllerWallet = require('../controllers/ewallet.controller');\n// //const { authorize, ADMIN, LOGGED_CUSTOMER } = require('../../middlewares/auth');\n// const {\n//   listCustomers,\n//   walletDeposit,\n//   walletTransfer,\n//   createCustomer,\n//   replaceCustomer,\n//   updateCustomer,\n// } = require('../helpers/customer.validation');\n\nclass UserRoutes {\n  constructor(router) {\n    // super(router);\n    this.router = router;\n  }\n\n  attachRoutes() {\n    /*\n * Respond to GET requests to /account.\n * Upon request, render the 'account.html' web page in views/ directory.\n */\n\n this.router.get('/email/template', (req, res, next) => {\n  MailConfig.ViewOption(gmailTransport,hbs);\n  let HelperOptions = {\n    from: '\"COMMUTE TAXI SERVICE\" <juwavictor@gmail.com>',\n    to: 'juwavictor@gmail.com',\n    subject: 'Hellow world!',\n    template: 'test',\n    context: {\n      name:\"COMMUTE TAXI\",\n      email: \"juwavictor@gmail.com\",\n      address: \"3A DOTUN CLOSE, IKEJA LAGOS\"\n    }\n  };\n  gmailTransport.sendMail(HelperOptions, (error,info) => {\n    if(error) {\n      console.log(error);\n      res.json(error);\n    }\n    console.log(\"email is send\");\n    console.log(info);\n    res.json(info)\n  });\n});\n\nthis.router.get('/email/smtp/template', (req, res, next) => {\n  MailConfig.ViewOption(smtpTransport,hbs);\n  let HelperOptions = {\n    from: '\"COMMUTE TAXI SERVICE\" <tester@softclo.com>',\n    to: 'tariqul.islam.rony@gmail.com',\n    subject: 'Hellow world!',\n    template: 'test',\n    context: {\n      name:\"tariqul_islam\",\n      email: \"tester@softclo.com\",\n      address: \"30 a my street\"\n    }\n  };\n  smtpTransport.verify((error, success) => {\n      if(error) {\n        res.json({output: 'error', message: error})\n        res.end();\n      } else {\n        smtpTransport.sendMail(HelperOptions, (error,info) => {\n          if(error) {\n            res.json({output: 'error', message: error})\n          }\n          res.json({output: 'success', message: info});\n          res.end();\n        });\n      }\n  })\n  \n});\n\n\n this.router.get('/test-email',\n  UserController.testEmail,\n  )\n\n    this.router.get('/profile/update/:id',\n      TokenVerification.userAuthentication,\n    \tUserController.showProfile\n    );//\n    this.router.post('/profile/update/:id',\n      TokenVerification.userAuthentication,\n    \tUserSanitizer.validateSignUp,\n    \tUserController.updateProfile\n    );\n\n    this.router.get(\"/get-cars-info-user\",\n    TokenVerification.userAuthentication,\n    UserController.getCarsInfo\n  );\n\n    this.router.get(\n        '/individual/plans/view',\n        TokenVerification.userAuthentication,\n        UserController.individualPlans\n      );\n    this.router.get(\n        '/coperate/plans/view',\n        TokenVerification.userAuthentication,\n        UserController.coperatePlans\n      );\n    this.router.post(\n      '/plans/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.addNewPlans,\n    );\n    this.router.get(\n      '/plans/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.getAllUsersPlans,\n    );\n\n     this.router.get(\n      '/quotations/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.getAllUsersQuotations,\n    );\n\n    this.router.get(\n      '/plans/:id',\n      TokenVerification.userAuthentication,\n      UserController.getOnePlanById,\n    );\n\n    this.router.patch(\n      '/plans/:id',\n      TokenVerification.userAuthentication,\n      UserController.updateItem,\n    );\n\n    this.router.delete(\n      '/plans/:id',\n      TokenVerification.userAuthentication,\n      UserController.deleteItem,\n    );\n\n    this.router.put(\n      '/debit-wallet-transactions/:id/user',\n       TokenVerification.userAuthentication,\n       UserController.debitWallet,\n\n    );\n\n\n     \n\n     this.router.put(\n      '/plan-status/:id/update',\n       TokenVerification.userAuthentication,\n       UserController.updatePlanStatus,\n    );\n\n     this.router.put(\n      '/itin-status/:id/update',\n       TokenVerification.userAuthentication,\n       UserController.updateItinStatus,\n    );\n\n     this.router.put(\n      '/quote-status/:id/update',\n       TokenVerification.userAuthentication,\n      UserController.updateQuoteStatus,\n    );\n\n     this.router.post('/add-drive-test-for-user',\n         TokenVerification.userAuthentication,\n      UserController.addDriveTestFromItinerary,\n         \n      )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    this.router.get(\n      '/cars/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.getUserCars,\n    );\n\n\n    this.router.post(\n      '/itinerary/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.saveUsersItinerary,\n    );\n\n\n    this.router.get(\n      '/itinerary/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.getUsersItinerary,\n    );\n    \n    //update itineray status\n    this.router.put(\n      '/itinerary/:id/status',\n      TokenVerification.userAuthentication,\n      UserController.updateItineraryStatus,\n    );\n\n\n     this.router.put(\n      '/user/:id/ratings',\n      TokenVerification.userAuthentication,\n      UserController.updateDriverRatings,\n    );\n    \n\n\n\n\n\n    this.router.get(\n      '/itinerary/:id/user/edit',\n      TokenVerification.userAuthentication,\n      UserController.editViewUsersItinerary,\n    );\n\n    this.router.post(\n      '/itinerary/:id/user/edit',\n      TokenVerification.userAuthentication,\n      UserController.updateUsersItinerary,\n    );\n\n    this.router\n      .route('/balance/:id')\n      .get( TokenVerification.userAuthentication,  controllerWallet.getBalance);\n\n    // this.router\n    //   .route('/transactions')\n    //   .get( TokenVerification.userAuthentication,  controllerWallet.getTransactions);\n\n    // this.router\n    //   .route('/deposit')\n    //   .post( TokenVerification.userAuthentication, \n    //     validate(walletDeposit), controllerWallet.deposit);\n\n\n\n    this.router.post('/paystack/pay',//cors(corsOption), \n      TokenVerification.userAuthentication,\n      UserController.paystackPayMeMoney\n    );\n\n    this.router.get('/paystack/callback', \n      // TokenVerification.userAuthentication,\n      UserController.paystackCallBack\n    );\n\n    this.router.get('/receipt/:id',\n      // TokenVerification.userAuthentication, \n      UserController.paystackReceipt\n    );\n\n     this.router.get('/payment-history/:id',\n      TokenVerification.userAuthentication, \n      UserController.paystackHistory\n    );\n\n\n     this.router.get('/payment-payments/:id',\n      TokenVerification.userAuthentication, \n      UserController.paystackPayments\n    );\n\n     this.router.post('/makepayments',\n      TokenVerification.userAuthentication, \n      UserController.createPaymentDetail\n      )\n\n     this.router.get('/payment-quotations/:id',\n      TokenVerification.userAuthentication, \n      UserController.paystackQuotations\n    );\n\n     this.router.post('/notification',\n      TokenVerification.userAuthentication, \n       //UserSanitizer.checkIfUserDoesntExists,\n      UserController.makeNotification\n      );\n     this.router.get('/notification/:id',\n      TokenVerification.userAuthentication, \n      UserController.getUserNotification\n      );\n\n\n  // this.router.get(\"/drivers\",     //read done\n  //   TokenVerification.userAuthentication, \n  //   UserController.getDrivers\n  // );\n\n    \n    \n    // this.router\n    //   .route('/transfer')\n    //   .post( TokenVerification.userAuthentication, validate(walletTransfer), controllerWallet.transfer);\n\n    // this.router\n    //   .route('/withdrawal')\n    //   .post( TokenVerification.userAuthentication, validate(walletDeposit), controllerWallet.withdrawal);\n\n\n   this.router.get('/',(req, res) => {\n       res.render('index.pug');\n  });\n\n    \n  this.router.get('/error', (req, res)=>{\n      res.render('error.pug');\n  })\n\n \n  this.router.get('/testpaystack',(req, res) => {\n      res.render('index.pug');\n  });\n\n\n\n\n  //adminusers\n\n  //admin : users routes\n  this.router.post(\"/admin-add-user\", //create done\n    TokenVerification.adminAuthentication,\n    UserSanitizer.checkIfUserExists,\n    UserController.addUserByAdmin\n  );\n\n  this.router.get(\"/admin-users\", //read - done\n    TokenVerification.adminAuthentication,\n    UserController.manageUsers\n  );\n\n  this.router.put(\"/admin-users-detail/:id\", //update\n    TokenVerification.adminAuthentication,\n    UserController.manageUsersDetail\n  );\n\n  this.router.put(\"/admin-users-detail-verification/:id\", //update\n    TokenVerification.adminAuthentication,\n    UserController.manageUsersDetailVerification\n  );\n\n  this.router.delete(\"/users/:id/delete\", //delete - done\n    TokenVerification.adminAuthentication,\n    UserController.deleteUser\n  )//\n\n  \n\n  \n\n  //end of admin user routes\n\n  this.router.post(\"/add-admin\", //create done\n    TokenVerification.adminAuthentication,\n    UserSanitizer.checkIfUserExists,\n    UserController.addAdminByAdmin\n  );\n\n\n  this.router.get(\"/admin-admins\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.manageAdmins\n  );\n\n\n\n  this.router.put(\"/admin-admins-detail/:id\", //edit done\n    TokenVerification.adminAuthentication,\n    UserController.manageAdminsDetail\n  );\n\n  this.router.put(\"/admin-admins-detail-verification/:id\", //update\n    TokenVerification.adminAuthentication,\n    UserController.manageAdminsDetailVerification\n  );\n\n  this.router.delete(\"/users/:id/delete\", //delete - done\n    TokenVerification.adminAuthentication,\n    UserController.deleteUser\n  )//\n\n\n\n\n   this.router.post(\"/add-driver\", //create done\n    TokenVerification.adminAuthentication,\n    UserSanitizer.checkIfDriverExists,\n    UserController.addDriverByAdmin\n  );\n\n  this.router.get(\"/admin-drivers\",     //read done\n    TokenVerification.adminAuthentication,\n    UserController.manageDrivers\n  );\n\n  \n\n  this.router.put(\"/admin-drivers-detail/:id\", // update\n    TokenVerification.adminAuthentication,\n    UserController.manageDriversDetail\n  );\n\n  this.router.put(\"/admin-drivers-detail-verification/:id\", //update\n    TokenVerification.adminAuthentication,\n    UserController.manageDriversDetailVerification\n  );\n\n  this.router.delete(\"/drivers/:id/delete\", //delete done\n    TokenVerification.adminAuthentication,\n    UserController.deleteDriver\n  );\n\n\n\n\n\n  this.router.get(\"/admin-partners\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.managePartners\n  );\n\n  this.router.delete(\"/partners/:id/delete\",//delete done\n    TokenVerification.adminAuthentication,\n    UserController.deletePartner\n  )\n\n  this.router.put(\"/admin-partners-detail/:id\", //update done\n    TokenVerification.adminAuthentication,\n    UserController.managePartnersDetail\n  );\n\n  this.router.put(\"/admin-partners-detail-verification/:id\", //update\n    TokenVerification.adminAuthentication,\n    UserController.managePartnersDetailVerification\n  );\n\n  this.router.post(\"/add-partner\", //create done\n    TokenVerification.adminAuthentication,\n    UserSanitizer.checkIfPartnerExists,\n    UserController.addPartnerByAdmin\n  );\n\n\n\n    this.router.get(\"/admin-earnings\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.managePartnersEarnings\n  );\n\n  this.router.delete(\"/partners-earnings/:id/delete\",//delete done\n    TokenVerification.adminAuthentication,\n    UserController.deletePartnersEarnings\n  )\n\n  this.router.put(\"/partners-earnings-detail/:id\", //update done\n    TokenVerification.adminAuthentication,\n    UserController.managePartnersEarningsDetail\n  );\n\n \n\n  this.router.post(\"/add-partner-earnings\", //create done\n    TokenVerification.adminAuthentication,\n    // UserSanitizer.checkIfPartnerExists,\n    UserController.addPartnersEarningsByAdmin\n  );\n\n\n\n\n\n\n\n\n\n  this.router.get(\"/admin-profile/:id\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.manageProfile\n  );\n\n  this.router.put(\"/admin-profile-detail/:id\", //update not completed\n    TokenVerification.adminAuthentication,\n    UserController.manageProfileDetail\n  )\n\n  this.router.put(\"/admin-profile-detail-verification/:id\", //update\n    TokenVerification.adminAuthentication,\n    UserController.manageProfileDetailVerification\n  );\n\n\n\n  this.router.get(\"/admin-plan-package\",  // read done\n    TokenVerification.adminAuthentication,\n    UserController.managePlanPackage\n  );\n\n  this.router.get(\"/admin-plan-package-corporate\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.managePlanPackageCorporate\n  );\n\n  this.router.post(\"/add-plan\", //create \n    TokenVerification.adminAuthentication,\n    UserController.createNewPlan\n  );\n\n\n  this.router.put(\"/admin-plan-package-detail/:id\",// update done\n    TokenVerification.adminAuthentication,\n    UserController.managePlanPackageDetail\n  );\n\n  this.router.delete(\"/plan-package/:id/delete/:delete_type\",//delete done\n    TokenVerification.adminAuthentication,\n    UserController.deletePlanPackage\n  );\n\n\n  this.router.get(\"/admin-sos\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.manageSOS\n  )\n\n  this.router.put(\"/admin-sos-detail/:id\", //update\n    TokenVerification.adminAuthentication,\n    UserController.manageSOSDetail\n  );\n\n  this.router.delete(\"/redflag-sos/:id/delete\", //delete done\n    TokenVerification.adminAuthentication,\n    UserController.deleteSOS\n  );\n\n  //admin cant create any sos\n\n\n\n  //tickets \n\n  this.router.get(\"/admin-tickets\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.manageTickets\n  )\n\n\n  this.router.put(\"/admin-ticket-detail/:id\", //update \n    TokenVerification.adminAuthentication,\n    UserController.manageTicketsDetail\n  );\n\n  this.router.delete(\"/tickets/:id/delete\", //delete done\n    TokenVerification.adminAuthentication,\n    UserController.deleteTicket\n  );\n\n  this.router.post(\"/add-ticket\",          //done for admin\n    TokenVerification.adminAuthentication,\n    UserController.createNewTicket\n  )\n\n  \n\n  this.router.get(\"/admin-faqs\",  //done\n    TokenVerification.adminAuthentication,\n    UserController.manageFaqs\n  )\n  \n  this.router.put(\"/admin-faqs-detail/:id\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageFaqsDetail\n  );\n\n  this.router.post(\"/add-faq\", //done\n    TokenVerification.adminAuthentication,\n    UserController.createNewFAQ\n  );\n\n\n  this.router.get(\"/admin-settings-google\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageGoogleSettings\n  )\n\n  this.router.get(\"/admin-settings-facebook\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageFacebookSettings\n  )\n\n  this.router.get(\"/admin-settings-paystack\", //done --- revisit this\n    TokenVerification.adminAuthentication,\n    UserController.managePaystackSettings\n  )\n\n\n  this.router.get(\"/admin-settings-email\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageEmailSettings\n  )\n\n\n  this.router.get(\"/admin-settings-bucket\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageS3BucketSettings\n  )\n\n  this.router.get(\"/admin-settings-instagram\",//done\n    TokenVerification.adminAuthentication,\n    UserController.manageInstagramSettings\n  );\n\n\n  this.router.get(\"/admin-settings-instagram\",//done\n    TokenVerification.adminAuthentication,\n    UserController.manageInstagramSettings\n  );\n\n  this.router.put(\"/admin-settings-detail/:id\",\n    TokenVerification.adminAuthentication,\n    UserController.manageSettingsDetail\n  );\n\n\n\n  \n  \n\n\n\n  \n\n  this.router.get(\"/admin-itineraries\",  //done\n    TokenVerification.adminAuthentication,\n    UserController.manageItineraries\n  )\n\n  this.router.get(\"/admin-users-plan\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageUsersPlan\n  );\n\n\n\n\n  this.router.put(\"/admin-itinerary-details/:id\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageItineraryDetail\n  );\n\n  this.router.put(\"/notification-update/:id\", //done\n    TokenVerification.adminAuthentication,\n     UserController.manageUserNotificationCounter\n  )\n\n   \n\n\n  \n\n\n  \n\n  // this.router.get(\"/admin-wallet\",\n  //   TokenVerification.adminAuthentication,\n  //   UserController.manageWalletHistory\n  // )\n\n  this.router.get(\"/admin-bookings\",\n    TokenVerification.adminAuthentication,\n    UserController.manageBookings\n  );\n\n  this.router.put(\"/admin-bookings-detail\",\n    TokenVerification.adminAuthentication,\n    UserController.manageBookingsDetail\n  );\n\n  this.router.post('/make-quotation',\n    TokenVerification.adminAuthentication,\n    UserController.makeQuotation\n    )\n\n  \n\n\n\n  this.router.post(\"/admin-manual-booking\",\n    TokenVerification.adminAuthentication,\n\n    UserController.manageManualBooking\n  );\n\n  \n\n  \n\n  this.router.get(\"/admin\",\n    TokenVerification.adminAuthentication,\n    UserController.adminDashboard\n  );\n\n  this.router.get(\"/admin-sales-today\",\n    TokenVerification.adminAuthentication,\n    UserController.adminDashboardTodaySales\n  )\n\n\n\n  this.router.get(\"/admin-sales-yesterday\",\n    TokenVerification.adminAuthentication,\n    UserController.adminDashboardYesterdaySales\n  )\n\n\n  this.router.get(\"/admin-sales-lastweek\",\n    TokenVerification.adminAuthentication,\n    UserController.adminDashboardWeeklySales\n  );\n\n\n  this.router.get(\"/admin-users-month-ago\",\n    TokenVerification.adminAuthentication,\n    UserController.adminDashboardMonthlySales\n  );\n\n\n  this.router.get('/payment-history',\n      TokenVerification.adminAuthentication, \n      UserController.paystackHistoryAdmin\n    );\n\n\n     this.router.get('/payment-payments',\n      TokenVerification.adminAuthentication, \n      UserController.paystackPaymentsAdmin\n    );\n\n     this.router.get('/payment-quotations',\n      TokenVerification.adminAuthentication, \n      UserController.paystackQuotationsAdmin\n    );\n\n\n\n     this.router.delete('/payment/:id/delete',\n      TokenVerification.adminAuthentication, \n      UserController.deletePayment\n    );\n\n\n     this.router.delete('/wallet/:id/delete',\n      TokenVerification.adminAuthentication, \n      UserController.deleteWallet\n    );\n\n     this.router.delete('/quotation/:id/delete',\n      TokenVerification.adminAuthentication, \n      UserController.deleteQuotation\n    );\n\n\n\n  this.router.put(\"/userplan-status-update/:id\",\n    TokenVerification.adminAuthentication,\n    UserController.updateUsersPlanStatusAdmin\n  );\n\n\n  this.router.put(\"/user-itinerary-status-update/:id\",\n    TokenVerification.adminAuthentication,\n    UserController.updateItineraryStatusAdmin\n  );//admin-itinerary-add\n\n\n  this.router.post(\"/admin-itinerary-add\",\n    TokenVerification.adminAuthentication,\n\n    UserSanitizer.checkIfUserDoesntExists,\n    UserController.createNewItinerary\n  );\n\n  this.router.post(\"/admin-plan-add\",  //add booking\n    TokenVerification.adminAuthentication,\n     //UserSanitizer.checkIfUserDoesntExists,\n    UserController.createNewPlanBooking\n  );\n\n\n\n\n\n  this.router.post(\"/add-cars\", //done\n    TokenVerification.adminAuthentication,\n    UserController.createNewCar\n  );\n\n\n  this.router.get(\"/admin-cars-mgt\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageCars\n  );\n\n  this.router.get(\"/get-cars-info\",\n    TokenVerification.adminAuthentication,\n    UserController.getCarsInfo\n  );\n\n\n  this.router.put(\"/admin-cars-detail/:id\",\n    TokenVerification.adminAuthentication,\n    UserController.manageCarsDetail\n  );\n\n\n\n\n\n  this.router.get(\"/admin-inspection\", //read\n    TokenVerification.adminAuthentication,\n    UserController.manageInspection\n  );\n\n  this.router.post(\"/add-inspection\", //create \n    TokenVerification.adminAuthentication,\n    UserController.createNewInspection\n  );\n\n\n  this.router.put(\"/admin-inspection-detail/:id\",// update \n    TokenVerification.adminAuthentication,\n    UserController.manageInspectionDetail\n  );\n\n  this.router.delete(\"/inspection/:id/delete\",//delete \n    TokenVerification.adminAuthentication,\n    UserController.deleteInspection\n  );\n\n\n\n\n\n  this.router.get(\"/admin-drive-test\",\n    UserController.manageDriveTest\n  )\n\n\n  this.router.put(\"/admin-drive-test-detail/:id\",\n    TokenVerification.adminAuthentication,\n    UserController.manageDriveTestDetail\n  )\n\n   this.router.post(\"/add-drive-test\", //create \n    TokenVerification.adminAuthentication,\n    UserController.createNewDriveTest\n  );\n\n\n   this.router.delete(\"/drive-test/:id/delete\",//delete \n    TokenVerification.adminAuthentication,\n    UserController.deleteDriveTest\n  );\n\n\n   \n    this.router.put(\"/update-testcenter/:id\",\n    TokenVerification.adminAuthentication,\n    UserController.manageUsersDriveTestCenterUpdate\n  )\n\n\n  \n\n  this.router.get(\"/admin-previledges\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.managePreviledges\n  );\n\n  this.router.post(\"/add-roles\", //create \n    TokenVerification.adminAuthentication,\n    UserController.createNewPreviledges\n  );//\n\n\n   this.router.put(\"/admin-previledges-update/:id\", //create \n    TokenVerification.adminAuthentication,\n    UserController.adminPreviledgesEdit\n  );\n\n\n   this.router.get('/get-admin-previledges/:id',\n      TokenVerification.adminAuthentication,\n    UserController.getUserPreviledges\n    );\n\n\n   this.router.get('/fetchuserinfo/:id',\n      TokenVerification.userAuthentication,\n      UserController.showUserInfo\n    );\n\n\n   this.router.put(\"/old_balance/:id\", //create \n    TokenVerification.userAuthentication,\n    UserController.setOldBalance\n  );\n\n\n\n\n\n  this.router.put(\"/admin-role-detail/:id\",// update done\n    TokenVerification.adminAuthentication,\n    UserController.managePreviledgesDetail\n  );\n\n  this.router.delete(\"/roles/:id/delete\",//delete done\n    TokenVerification.adminAuthentication,\n    UserController.deletePreviledges\n  );\n\n  this.router.get('/profile-admin-rights/update/:id/permission/:roles',\n      TokenVerification.userAuthentication,\n      UserController.showProfileRights\n    );//showProfileRights(request,response)\n\n\n\n  this.router.get(\"/get-trails\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.getTrails\n  );\n\n  this.router.post(\"/log-audit\", //create \n    TokenVerification.adminAuthentication,\n    UserController.createTrail\n  );//\n\n\n  \n this.router.get('/get-all-notification',\n   TokenVerification.adminAuthentication,\n   UserController.getAllNotification\n  );\n\n\n this.router.get('/get-all-cars-repair-request',\n   TokenVerification.adminAuthentication,\n   UserController.getAllRepairs\n  );\n\n\n this.router.put('/admin-mech-status/:id',\n   TokenVerification.adminAuthentication,\n   UserController.changeRepairStatus\n  );\n//drivers\n     this.router.get('/confirm-booking-request',\n      //TokenVerification.userAuthentication, \n      UserController.driverConfirmBooking\n    );\n\n\n     // Add a vehicle retrieval \n     this.router.post('/admin-new-car-revoke',\n      TokenVerification.adminAuthentication,\n      UserController.revokecar\n    );\n\n     this.router.put('/admin-new-car-revoke-status/:id',\n      TokenVerification.adminAuthentication,\n      UserController.revokecarstatus\n    );\n\n     this.router.get('/admin-get-revoke-details',\n      TokenVerification.adminAuthentication,\n      UserController.getrevokecars\n    );\n\n     this.router.put('/notification/:id',\n      TokenVerification.userAuthentication,\n      UserController.updateNotificationStatus\n      )\n\n\n\n    //update driver socket id\n    this.router.put(\"/driverLocationSocket/:id\", function(req, res, next){\n      var io = req.app.io;\n      if(!req.body){\n        res.status(400);\n        res.json({\n          \"error\":\"Bad Data\"\n        });\n      } else {\n        console.log(req.params.id)\n        DriverModel.updateOne({id:req.params.id},\n          {$set: {socketId:req.body.socketId}}, function(err, updateDetails) {\n            if(err){\n              res.send(err);\n            }else{\n              console.log(updateDetails )\n              res.send(updateDetails);\n            }\n        });\n      }\n    });\n\n    //get nearby driver\n    this.router.get(\"/driverLocation/:latitude/:longitude\", function (req, res, next) {\n      //DriverModel.ensureIndex({\"coordinate\": \"2dsphere\"});\n      DriverModel.find({\n        \"location\": {\n         \"$near\": {\n          \"$maxDistance\": 1000,\n          \"$geometry\": {\n           \"type\": \"Point\",\n           \"coordinates\": [parseFloat(req.params.latitude), parseFloat(request.params.longitude)]\n          }\n         }\n        }\n       }, function (err, location) {\n              if (err) {\n                res.send(err);\n              } else {\n                res.send(location);\n              }\n            });\n    });\n\n    //Get Single Driver and emit track by user to driver\n    this.router.get(\"/driverLocation/:id\", function (req, res, next) {\n      var io = req.app.io;\n      DriverModel.findOne({ driverId: req.params.id }, function (err, location) {\n        if (err) {\n          res.send(err);\n        }\n        res.send(location);\n        io.emit(\"trackDriver\", location);\n      });\n    });\n\n    //Update Location by driver to user\n    this.router.put(\"/driverLocation/:id\", function (req, res, next) {\n      var io = req.app.io;\n      var location = req.body;\n      var latitude = parseFloat(location.latitude);\n      var longitude = parseFloat(location.longitude);\n      if (!location) {\n        res.status(400);\n        res.json({\n          \"error\": \"Bad Data\"\n        });\n      } else {\n        DriverModel.update({ _id: req.params.id }, {\n          $set: {\n            socketId: location.socketId,\n            coordinate: {\n              \"type\": \"Point\",\n              coordinates: [\n                longitude,\n                latitude\n              ]\n            }\n          }\n        }, function (err, updateDetails) {\n          if (err) {\n            console.log(updateDetails);\n            res.send(err);\n          }\n          if (updateDetails) {\n\n            //Get updated location\n            db.driversLocation.findOne({ _id: mongojs.ObjectId(req.params.id) }, function (error, updatedLocation) {\n              if (error) {\n                res.send(error);\n              }\n              res.send(updatedLocation);\n              io.emit(\"action\", {\n                type: \"UPDATE_DRIVER_LOCATION\",\n                payload: updatedLocation\n              });\n            });\n          }\n        });\n      }\n    });\n\n\n    \n    return this.router;\n  }\n}\nexport default UserRoutes;\n"],"file":"user_routes.js"}