{"version":3,"sources":["../../../../server/dynamic_server/mongo_api/api/user_routes.js"],"names":["corsOption","origin","methods","credentials","exposedHeaders","controllerWallet","require","UserRoutes","router","get","req","res","next","MailConfig","ViewOption","gmailTransport","hbs","HelperOptions","from","to","subject","template","context","name","email","address","sendMail","error","info","console","log","json","smtpTransport","verify","success","output","message","end","UserController","testEmail","TokenVerification","userAuthentication","showProfile","post","UserSanitizer","validateSignUp","updateProfile","getCarsInfo","individualPlans","coperatePlans","addNewPlans","getAllUsersPlans","getAllUsersQuotations","getOnePlanById","patch","updateItem","deleteItem","put","debitWallet","updatePlanStatus","updateItinStatus","updateQuoteStatus","addDriveTestFromItinerary","getUserCars","saveUsersItinerary","getUsersItinerary","updateItineraryStatus","editViewUsersItinerary","updateUsersItinerary","route","getBalance","paystackPayMeMoney","paystackCallBack","paystackReceipt","paystackHistory","paystackPayments","createPaymentDetail","paystackQuotations","makeNotification","getUserNotification","render","adminAuthentication","checkIfUserExists","addUserByAdmin","manageUsers","manageUsersDetail","manageUsersDetailVerification","deleteUser","addAdminByAdmin","manageAdmins","manageAdminsDetail","manageAdminsDetailVerification","checkIfDriverExists","addDriverByAdmin","manageDrivers","manageDriversDetail","manageDriversDetailVerification","deleteDriver","managePartners","deletePartner","managePartnersDetail","managePartnersDetailVerification","checkIfPartnerExists","addPartnerByAdmin","managePartnersEarnings","deletePartnersEarnings","managePartnersEarningsDetail","addPartnersEarningsByAdmin","manageProfile","manageProfileDetail","manageProfileDetailVerification","managePlanPackage","managePlanPackageCorporate","createNewPlan","managePlanPackageDetail","deletePlanPackage","manageSOS","manageSOSDetail","deleteSOS","manageTickets","manageTicketsDetail","deleteTicket","createNewTicket","manageFaqs","manageFaqsDetail","createNewFAQ","manageGoogleSettings","manageFacebookSettings","managePaystackSettings","manageEmailSettings","manageS3BucketSettings","manageInstagramSettings","manageSettingsDetail","manageItineraries","manageUsersPlan","manageItineraryDetail","manageUserNotificationCounter","manageBookings","manageBookingsDetail","makeQuotation","manageManualBooking","adminDashboard","adminDashboardTodaySales","adminDashboardYesterdaySales","adminDashboardWeeklySales","adminDashboardMonthlySales","paystackHistoryAdmin","paystackPaymentsAdmin","paystackQuotationsAdmin","deletePayment","deleteWallet","deleteQuotation","updateUsersPlanStatusAdmin","updateItineraryStatusAdmin","checkIfUserDoesntExists","createNewItinerary","createNewPlanBooking","createNewCar","manageCars","manageCarsDetail","manageInspection","createNewInspection","manageInspectionDetail","deleteInspection","manageDriveTest","manageDriveTestDetail","createNewDriveTest","deleteDriveTest","manageUsersDriveTestCenterUpdate","managePreviledges","createNewPreviledges","adminPreviledgesEdit","getUserPreviledges","showUserInfo","setOldBalance","managePreviledgesDetail","deletePreviledges","showProfileRights","getTrails","createTrail","getAllNotification","getAllRepairs","changeRepairStatus","driverConfirmBooking","revokecar","revokecarstatus","getrevokecars","io","app","body","status","params","id","DriverModel","updateOne","$set","socketId","err","updateDetails","send","find","parseFloat","latitude","request","longitude","location","findOne","driverId","emit","update","_id","coordinate","coordinates","db","driversLocation","mongojs","ObjectId","updatedLocation","type","payload"],"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","sourcesContent":["import UserController from '../controllers/user_controller';\nimport UserSanitizer from '../middlewares/user_sanitizer';\n\nimport TokenVerification from '../middlewares/token_validator';\nimport SubmitEventValidator from '../middlewares/post_sanitizer';\n\nimport DriverModel from \"../models/Driver.model\";\n\n\n\nimport cors from 'cors';\nlet corsOption = {\n        origin: true,\n        methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n        credentials: true,\n        exposedHeaders: ['x-auth-token'],\n        'Access-Control-Allow-Origin': '*'\n    };\n\n\n\n//for e wallet transactions\n\n// const validate = require('express-validation');\n const controllerWallet = require('../controllers/ewallet.controller');\n// //const { authorize, ADMIN, LOGGED_CUSTOMER } = require('../../middlewares/auth');\n// const {\n//   listCustomers,\n//   walletDeposit,\n//   walletTransfer,\n//   createCustomer,\n//   replaceCustomer,\n//   updateCustomer,\n// } = require('../helpers/customer.validation');\n\nclass UserRoutes {\n  constructor(router) {\n    // super(router);\n    this.router = router;\n  }\n\n  attachRoutes() {\n    /*\n * Respond to GET requests to /account.\n * Upon request, render the 'account.html' web page in views/ directory.\n */\n\n this.router.get('/email/template', (req, res, next) => {\n  MailConfig.ViewOption(gmailTransport,hbs);\n  let HelperOptions = {\n    from: '\"COMMUTE TAXI SERVICE\" <juwavictor@gmail.com>',\n    to: 'juwavictor@gmail.com',\n    subject: 'Hellow world!',\n    template: 'test',\n    context: {\n      name:\"COMMUTE TAXI\",\n      email: \"juwavictor@gmail.com\",\n      address: \"3A DOTUN CLOSE, IKEJA LAGOS\"\n    }\n  };\n  gmailTransport.sendMail(HelperOptions, (error,info) => {\n    if(error) {\n      console.log(error);\n      res.json(error);\n    }\n    console.log(\"email is send\");\n    console.log(info);\n    res.json(info)\n  });\n});\n\nthis.router.get('/email/smtp/template', (req, res, next) => {\n  MailConfig.ViewOption(smtpTransport,hbs);\n  let HelperOptions = {\n    from: '\"COMMUTE TAXI SERVICE\" <tester@softclo.com>',\n    to: 'tariqul.islam.rony@gmail.com',\n    subject: 'Hellow world!',\n    template: 'test',\n    context: {\n      name:\"tariqul_islam\",\n      email: \"tester@softclo.com\",\n      address: \"30 a my street\"\n    }\n  };\n  smtpTransport.verify((error, success) => {\n      if(error) {\n        res.json({output: 'error', message: error})\n        res.end();\n      } else {\n        smtpTransport.sendMail(HelperOptions, (error,info) => {\n          if(error) {\n            res.json({output: 'error', message: error})\n          }\n          res.json({output: 'success', message: info});\n          res.end();\n        });\n      }\n  })\n  \n});\n\n\n this.router.get('/test-email',\n  UserController.testEmail,\n  )\n\n    this.router.get('/profile/update/:id',\n      TokenVerification.userAuthentication,\n    \tUserController.showProfile\n    );//\n    this.router.post('/profile/update/:id',\n      TokenVerification.userAuthentication,\n    \tUserSanitizer.validateSignUp,\n    \tUserController.updateProfile\n    );\n\n    this.router.get(\"/get-cars-info-user\",\n    TokenVerification.userAuthentication,\n    UserController.getCarsInfo\n  );\n\n    this.router.get(\n        '/individual/plans/view',\n        TokenVerification.userAuthentication,\n        UserController.individualPlans\n      );\n    this.router.get(\n        '/coperate/plans/view',\n        TokenVerification.userAuthentication,\n        UserController.coperatePlans\n      );\n    this.router.post(\n      '/plans/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.addNewPlans,\n    );\n    this.router.get(\n      '/plans/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.getAllUsersPlans,\n    );\n\n     this.router.get(\n      '/quotations/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.getAllUsersQuotations,\n    );\n\n    this.router.get(\n      '/plans/:id',\n      TokenVerification.userAuthentication,\n      UserController.getOnePlanById,\n    );\n\n    this.router.patch(\n      '/plans/:id',\n      TokenVerification.userAuthentication,\n      UserController.updateItem,\n    );\n\n    this.router.delete(\n      '/plans/:id',\n      TokenVerification.userAuthentication,\n      UserController.deleteItem,\n    );\n\n    this.router.put(\n      '/debit-wallet-transactions/:id/user',\n       TokenVerification.userAuthentication,\n       UserController.debitWallet,\n\n    );\n\n\n     \n\n     this.router.put(\n      '/plan-status/:id/update',\n       TokenVerification.userAuthentication,\n       UserController.updatePlanStatus,\n    );\n\n     this.router.put(\n      '/itin-status/:id/update',\n       TokenVerification.userAuthentication,\n       UserController.updateItinStatus,\n    );\n\n     this.router.put(\n      '/quote-status/:id/update',\n       TokenVerification.userAuthentication,\n      UserController.updateQuoteStatus,\n    );\n\n     this.router.post('/add-drive-test-for-user',\n         TokenVerification.userAuthentication,\n      UserController.addDriveTestFromItinerary,\n         \n      )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    this.router.get(\n      '/cars/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.getUserCars,\n    );\n\n\n    this.router.post(\n      '/itinerary/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.saveUsersItinerary,\n    );\n\n\n    this.router.get(\n      '/itinerary/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.getUsersItinerary,\n    );\n    \n    //update itineray status\n    this.router.put(\n      '/itinerary/:id/status',\n      TokenVerification.userAuthentication,\n      UserController.updateItineraryStatus,\n    );\n    \n\n\n\n\n\n    this.router.get(\n      '/itinerary/:id/user/edit',\n      TokenVerification.userAuthentication,\n      UserController.editViewUsersItinerary,\n    );\n\n    this.router.post(\n      '/itinerary/:id/user/edit',\n      TokenVerification.userAuthentication,\n      UserController.updateUsersItinerary,\n    );\n\n    this.router\n      .route('/balance/:id')\n      .get( TokenVerification.userAuthentication,  controllerWallet.getBalance);\n\n    // this.router\n    //   .route('/transactions')\n    //   .get( TokenVerification.userAuthentication,  controllerWallet.getTransactions);\n\n    // this.router\n    //   .route('/deposit')\n    //   .post( TokenVerification.userAuthentication, \n    //     validate(walletDeposit), controllerWallet.deposit);\n\n\n\n    this.router.post('/paystack/pay',//cors(corsOption), \n      TokenVerification.userAuthentication,\n      UserController.paystackPayMeMoney\n    );\n\n    this.router.get('/paystack/callback', \n      // TokenVerification.userAuthentication,\n      UserController.paystackCallBack\n    );\n\n    this.router.get('/receipt/:id',\n      // TokenVerification.userAuthentication, \n      UserController.paystackReceipt\n    );\n\n     this.router.get('/payment-history/:id',\n      TokenVerification.userAuthentication, \n      UserController.paystackHistory\n    );\n\n\n     this.router.get('/payment-payments/:id',\n      TokenVerification.userAuthentication, \n      UserController.paystackPayments\n    );\n\n     this.router.post('/makepayments',\n      TokenVerification.userAuthentication, \n      UserController.createPaymentDetail\n      )\n\n     this.router.get('/payment-quotations/:id',\n      TokenVerification.userAuthentication, \n      UserController.paystackQuotations\n    );\n\n     this.router.post('/notification',\n      TokenVerification.userAuthentication, \n       //UserSanitizer.checkIfUserDoesntExists,\n      UserController.makeNotification\n      );\n     this.router.get('/notification/:id',\n      TokenVerification.userAuthentication, \n      UserController.getUserNotification\n      );\n\n\n  // this.router.get(\"/drivers\",     //read done\n  //   TokenVerification.userAuthentication, \n  //   UserController.getDrivers\n  // );\n\n    \n    \n    // this.router\n    //   .route('/transfer')\n    //   .post( TokenVerification.userAuthentication, validate(walletTransfer), controllerWallet.transfer);\n\n    // this.router\n    //   .route('/withdrawal')\n    //   .post( TokenVerification.userAuthentication, validate(walletDeposit), controllerWallet.withdrawal);\n\n\n   this.router.get('/',(req, res) => {\n       res.render('index.pug');\n  });\n\n    \n  this.router.get('/error', (req, res)=>{\n      res.render('error.pug');\n  })\n\n \n  this.router.get('/testpaystack',(req, res) => {\n      res.render('index.pug');\n  });\n\n\n\n\n  //adminusers\n\n  //admin : users routes\n  this.router.post(\"/admin-add-user\", //create done\n    TokenVerification.adminAuthentication,\n    UserSanitizer.checkIfUserExists,\n    UserController.addUserByAdmin\n  );\n\n  this.router.get(\"/admin-users\", //read - done\n    TokenVerification.adminAuthentication,\n    UserController.manageUsers\n  );\n\n  this.router.put(\"/admin-users-detail/:id\", //update\n    TokenVerification.adminAuthentication,\n    UserController.manageUsersDetail\n  );\n\n  this.router.put(\"/admin-users-detail-verification/:id\", //update\n    TokenVerification.adminAuthentication,\n    UserController.manageUsersDetailVerification\n  );\n\n  this.router.delete(\"/users/:id/delete\", //delete - done\n    TokenVerification.adminAuthentication,\n    UserController.deleteUser\n  )//\n\n  \n\n  \n\n  //end of admin user routes\n\n  this.router.post(\"/add-admin\", //create done\n    TokenVerification.adminAuthentication,\n    UserSanitizer.checkIfUserExists,\n    UserController.addAdminByAdmin\n  );\n\n\n  this.router.get(\"/admin-admins\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.manageAdmins\n  );\n\n\n\n  this.router.put(\"/admin-admins-detail/:id\", //edit done\n    TokenVerification.adminAuthentication,\n    UserController.manageAdminsDetail\n  );\n\n  this.router.put(\"/admin-admins-detail-verification/:id\", //update\n    TokenVerification.adminAuthentication,\n    UserController.manageAdminsDetailVerification\n  );\n\n  this.router.delete(\"/users/:id/delete\", //delete - done\n    TokenVerification.adminAuthentication,\n    UserController.deleteUser\n  )//\n\n\n\n\n   this.router.post(\"/add-driver\", //create done\n    TokenVerification.adminAuthentication,\n    UserSanitizer.checkIfDriverExists,\n    UserController.addDriverByAdmin\n  );\n\n  this.router.get(\"/admin-drivers\",     //read done\n    TokenVerification.adminAuthentication,\n    UserController.manageDrivers\n  );\n\n  \n\n  this.router.put(\"/admin-drivers-detail/:id\", // update\n    TokenVerification.adminAuthentication,\n    UserController.manageDriversDetail\n  );\n\n  this.router.put(\"/admin-drivers-detail-verification/:id\", //update\n    TokenVerification.adminAuthentication,\n    UserController.manageDriversDetailVerification\n  );\n\n  this.router.delete(\"/drivers/:id/delete\", //delete done\n    TokenVerification.adminAuthentication,\n    UserController.deleteDriver\n  );\n\n\n\n\n\n  this.router.get(\"/admin-partners\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.managePartners\n  );\n\n  this.router.delete(\"/partners/:id/delete\",//delete done\n    TokenVerification.adminAuthentication,\n    UserController.deletePartner\n  )\n\n  this.router.put(\"/admin-partners-detail/:id\", //update done\n    TokenVerification.adminAuthentication,\n    UserController.managePartnersDetail\n  );\n\n  this.router.put(\"/admin-partners-detail-verification/:id\", //update\n    TokenVerification.adminAuthentication,\n    UserController.managePartnersDetailVerification\n  );\n\n  this.router.post(\"/add-partner\", //create done\n    TokenVerification.adminAuthentication,\n    UserSanitizer.checkIfPartnerExists,\n    UserController.addPartnerByAdmin\n  );\n\n\n\n    this.router.get(\"/admin-earnings\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.managePartnersEarnings\n  );\n\n  this.router.delete(\"/partners-earnings/:id/delete\",//delete done\n    TokenVerification.adminAuthentication,\n    UserController.deletePartnersEarnings\n  )\n\n  this.router.put(\"/partners-earnings-detail/:id\", //update done\n    TokenVerification.adminAuthentication,\n    UserController.managePartnersEarningsDetail\n  );\n\n \n\n  this.router.post(\"/add-partner-earnings\", //create done\n    TokenVerification.adminAuthentication,\n    // UserSanitizer.checkIfPartnerExists,\n    UserController.addPartnersEarningsByAdmin\n  );\n\n\n\n\n\n\n\n\n\n  this.router.get(\"/admin-profile/:id\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.manageProfile\n  );\n\n  this.router.put(\"/admin-profile-detail/:id\", //update not completed\n    TokenVerification.adminAuthentication,\n    UserController.manageProfileDetail\n  )\n\n  this.router.put(\"/admin-profile-detail-verification/:id\", //update\n    TokenVerification.adminAuthentication,\n    UserController.manageProfileDetailVerification\n  );\n\n\n\n  this.router.get(\"/admin-plan-package\",  // read done\n    TokenVerification.adminAuthentication,\n    UserController.managePlanPackage\n  );\n\n  this.router.get(\"/admin-plan-package-corporate\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.managePlanPackageCorporate\n  );\n\n  this.router.post(\"/add-plan\", //create \n    TokenVerification.adminAuthentication,\n    UserController.createNewPlan\n  );\n\n\n  this.router.put(\"/admin-plan-package-detail/:id\",// update done\n    TokenVerification.adminAuthentication,\n    UserController.managePlanPackageDetail\n  );\n\n  this.router.delete(\"/plan-package/:id/delete/:delete_type\",//delete done\n    TokenVerification.adminAuthentication,\n    UserController.deletePlanPackage\n  );\n\n\n  this.router.get(\"/admin-sos\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.manageSOS\n  )\n\n  this.router.put(\"/admin-sos-detail/:id\", //update\n    TokenVerification.adminAuthentication,\n    UserController.manageSOSDetail\n  );\n\n  this.router.delete(\"/redflag-sos/:id/delete\", //delete done\n    TokenVerification.adminAuthentication,\n    UserController.deleteSOS\n  );\n\n  //admin cant create any sos\n\n\n\n  //tickets \n\n  this.router.get(\"/admin-tickets\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.manageTickets\n  )\n\n\n  this.router.put(\"/admin-ticket-detail/:id\", //update \n    TokenVerification.adminAuthentication,\n    UserController.manageTicketsDetail\n  );\n\n  this.router.delete(\"/tickets/:id/delete\", //delete done\n    TokenVerification.adminAuthentication,\n    UserController.deleteTicket\n  );\n\n  this.router.post(\"/add-ticket\",          //done for admin\n    TokenVerification.adminAuthentication,\n    UserController.createNewTicket\n  )\n\n  \n\n  this.router.get(\"/admin-faqs\",  //done\n    TokenVerification.adminAuthentication,\n    UserController.manageFaqs\n  )\n  \n  this.router.put(\"/admin-faqs-detail/:id\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageFaqsDetail\n  );\n\n  this.router.post(\"/add-faq\", //done\n    TokenVerification.adminAuthentication,\n    UserController.createNewFAQ\n  );\n\n\n  this.router.get(\"/admin-settings-google\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageGoogleSettings\n  )\n\n  this.router.get(\"/admin-settings-facebook\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageFacebookSettings\n  )\n\n  this.router.get(\"/admin-settings-paystack\", //done --- revisit this\n    TokenVerification.adminAuthentication,\n    UserController.managePaystackSettings\n  )\n\n\n  this.router.get(\"/admin-settings-email\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageEmailSettings\n  )\n\n\n  this.router.get(\"/admin-settings-bucket\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageS3BucketSettings\n  )\n\n  this.router.get(\"/admin-settings-instagram\",//done\n    TokenVerification.adminAuthentication,\n    UserController.manageInstagramSettings\n  );\n\n\n  this.router.get(\"/admin-settings-instagram\",//done\n    TokenVerification.adminAuthentication,\n    UserController.manageInstagramSettings\n  );\n\n  this.router.put(\"/admin-settings-detail/:id\",\n    TokenVerification.adminAuthentication,\n    UserController.manageSettingsDetail\n  );\n\n\n\n  \n  \n\n\n\n  \n\n  this.router.get(\"/admin-itineraries\",  //done\n    TokenVerification.adminAuthentication,\n    UserController.manageItineraries\n  )\n\n  this.router.get(\"/admin-users-plan\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageUsersPlan\n  );\n\n\n\n\n  this.router.put(\"/admin-itinerary-details/:id\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageItineraryDetail\n  );\n\n  this.router.put(\"/notification-update/:id\", //done\n    TokenVerification.adminAuthentication,\n     UserController.manageUserNotificationCounter\n  )\n\n   \n\n\n  \n\n\n  \n\n  // this.router.get(\"/admin-wallet\",\n  //   TokenVerification.adminAuthentication,\n  //   UserController.manageWalletHistory\n  // )\n\n  this.router.get(\"/admin-bookings\",\n    TokenVerification.adminAuthentication,\n    UserController.manageBookings\n  );\n\n  this.router.put(\"/admin-bookings-detail\",\n    TokenVerification.adminAuthentication,\n    UserController.manageBookingsDetail\n  );\n\n  this.router.post('/make-quotation',\n    TokenVerification.adminAuthentication,\n    UserController.makeQuotation\n    )\n\n  \n\n\n\n  this.router.post(\"/admin-manual-booking\",\n    TokenVerification.adminAuthentication,\n\n    UserController.manageManualBooking\n  );\n\n  \n\n  \n\n  this.router.get(\"/admin\",\n    TokenVerification.adminAuthentication,\n    UserController.adminDashboard\n  );\n\n  this.router.get(\"/admin-sales-today\",\n    TokenVerification.adminAuthentication,\n    UserController.adminDashboardTodaySales\n  )\n\n\n\n  this.router.get(\"/admin-sales-yesterday\",\n    TokenVerification.adminAuthentication,\n    UserController.adminDashboardYesterdaySales\n  )\n\n\n  this.router.get(\"/admin-sales-lastweek\",\n    TokenVerification.adminAuthentication,\n    UserController.adminDashboardWeeklySales\n  );\n\n\n  this.router.get(\"/admin-users-month-ago\",\n    TokenVerification.adminAuthentication,\n    UserController.adminDashboardMonthlySales\n  );\n\n\n  this.router.get('/payment-history',\n      TokenVerification.adminAuthentication, \n      UserController.paystackHistoryAdmin\n    );\n\n\n     this.router.get('/payment-payments',\n      TokenVerification.adminAuthentication, \n      UserController.paystackPaymentsAdmin\n    );\n\n     this.router.get('/payment-quotations',\n      TokenVerification.adminAuthentication, \n      UserController.paystackQuotationsAdmin\n    );\n\n\n\n     this.router.delete('/payment/:id/delete',\n      TokenVerification.adminAuthentication, \n      UserController.deletePayment\n    );\n\n\n     this.router.delete('/wallet/:id/delete',\n      TokenVerification.adminAuthentication, \n      UserController.deleteWallet\n    );\n\n     this.router.delete('/quotation/:id/delete',\n      TokenVerification.adminAuthentication, \n      UserController.deleteQuotation\n    );\n\n\n\n  this.router.put(\"/userplan-status-update/:id\",\n    TokenVerification.adminAuthentication,\n    UserController.updateUsersPlanStatusAdmin\n  );\n\n\n  this.router.put(\"/user-itinerary-status-update/:id\",\n    TokenVerification.adminAuthentication,\n    UserController.updateItineraryStatusAdmin\n  );//admin-itinerary-add\n\n\n  this.router.post(\"/admin-itinerary-add\",\n    TokenVerification.adminAuthentication,\n\n    UserSanitizer.checkIfUserDoesntExists,\n    UserController.createNewItinerary\n  );\n\n  this.router.post(\"/admin-plan-add\",  //add booking\n    TokenVerification.adminAuthentication,\n     //UserSanitizer.checkIfUserDoesntExists,\n    UserController.createNewPlanBooking\n  );\n\n\n\n\n\n  this.router.post(\"/add-cars\", //done\n    TokenVerification.adminAuthentication,\n    UserController.createNewCar\n  );\n\n\n  this.router.get(\"/admin-cars-mgt\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageCars\n  );\n\n  this.router.get(\"/get-cars-info\",\n    TokenVerification.adminAuthentication,\n    UserController.getCarsInfo\n  );\n\n\n  this.router.put(\"/admin-cars-detail/:id\",\n    TokenVerification.adminAuthentication,\n    UserController.manageCarsDetail\n  );\n\n\n\n\n\n  this.router.get(\"/admin-inspection\", //read\n    TokenVerification.adminAuthentication,\n    UserController.manageInspection\n  );\n\n  this.router.post(\"/add-inspection\", //create \n    TokenVerification.adminAuthentication,\n    UserController.createNewInspection\n  );\n\n\n  this.router.put(\"/admin-inspection-detail/:id\",// update \n    TokenVerification.adminAuthentication,\n    UserController.manageInspectionDetail\n  );\n\n  this.router.delete(\"/inspection/:id/delete\",//delete \n    TokenVerification.adminAuthentication,\n    UserController.deleteInspection\n  );\n\n\n\n\n\n  this.router.get(\"/admin-drive-test\",\n    UserController.manageDriveTest\n  )\n\n\n  this.router.put(\"/admin-drive-test-detail/:id\",\n    TokenVerification.adminAuthentication,\n    UserController.manageDriveTestDetail\n  )\n\n   this.router.post(\"/add-drive-test\", //create \n    TokenVerification.adminAuthentication,\n    UserController.createNewDriveTest\n  );\n\n\n   this.router.delete(\"/drive-test/:id/delete\",//delete \n    TokenVerification.adminAuthentication,\n    UserController.deleteDriveTest\n  );\n\n\n   \n    this.router.put(\"/update-testcenter/:id\",\n    TokenVerification.adminAuthentication,\n    UserController.manageUsersDriveTestCenterUpdate\n  )\n\n\n  \n\n  this.router.get(\"/admin-previledges\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.managePreviledges\n  );\n\n  this.router.post(\"/add-roles\", //create \n    TokenVerification.adminAuthentication,\n    UserController.createNewPreviledges\n  );//\n\n\n   this.router.put(\"/admin-previledges-update/:id\", //create \n    TokenVerification.adminAuthentication,\n    UserController.adminPreviledgesEdit\n  );\n\n\n   this.router.get('/get-admin-previledges/:id',\n      TokenVerification.adminAuthentication,\n    UserController.getUserPreviledges\n    );\n\n\n   this.router.get('/fetchuserinfo/:id',\n      TokenVerification.userAuthentication,\n      UserController.showUserInfo\n    );\n\n\n   this.router.put(\"/old_balance/:id\", //create \n    TokenVerification.userAuthentication,\n    UserController.setOldBalance\n  );\n\n\n\n\n\n  this.router.put(\"/admin-role-detail/:id\",// update done\n    TokenVerification.adminAuthentication,\n    UserController.managePreviledgesDetail\n  );\n\n  this.router.delete(\"/roles/:id/delete\",//delete done\n    TokenVerification.adminAuthentication,\n    UserController.deletePreviledges\n  );\n\n  this.router.get('/profile-admin-rights/update/:id/permission/:roles',\n      TokenVerification.userAuthentication,\n      UserController.showProfileRights\n    );//showProfileRights(request,response)\n\n\n\n  this.router.get(\"/get-trails\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.getTrails\n  );\n\n  this.router.post(\"/log-audit\", //create \n    TokenVerification.adminAuthentication,\n    UserController.createTrail\n  );//\n\n\n  \n this.router.get('/get-all-notification',\n   TokenVerification.adminAuthentication,\n   UserController.getAllNotification\n  );\n\n\n this.router.get('/get-all-cars-repair-request',\n   TokenVerification.adminAuthentication,\n   UserController.getAllRepairs\n  );\n\n\n this.router.put('/admin-mech-status/:id',\n   TokenVerification.adminAuthentication,\n   UserController.changeRepairStatus\n  );\n//drivers\n     this.router.get('/confirm-booking-request',\n      //TokenVerification.userAuthentication, \n      UserController.driverConfirmBooking\n    );\n\n\n     // Add a vehicle retrieval \n     this.router.post('/admin-new-car-revoke',\n      TokenVerification.adminAuthentication,\n      UserController.revokecar\n    );\n\n     this.router.put('/admin-new-car-revoke-status/:id',\n      TokenVerification.adminAuthentication,\n      UserController.revokecarstatus\n    );\n\n     this.router.get('/admin-get-revoke-details',\n      TokenVerification.adminAuthentication,\n      UserController.getrevokecars\n    );\n\n\n\n    //update driver socket id\n    this.router.put(\"/driverLocationSocket/:id\", function(req, res, next){\n      var io = req.app.io;\n      if(!req.body){\n        res.status(400);\n        res.json({\n          \"error\":\"Bad Data\"\n        });\n      } else {\n        console.log(req.params.id)\n        DriverModel.updateOne({id:req.params.id},\n          {$set: {socketId:req.body.socketId}}, function(err, updateDetails) {\n            if(err){\n              res.send(err);\n            }else{\n              console.log(updateDetails )\n              res.send(updateDetails);\n            }\n        });\n      }\n    });\n\n    //get nearby driver\n    this.router.get(\"/driverLocation/:latitude/:longitude\", function (req, res, next) {\n      //DriverModel.ensureIndex({\"coordinate\": \"2dsphere\"});\n      DriverModel.find({\n        \"location\": {\n         \"$near\": {\n          \"$maxDistance\": 1000,\n          \"$geometry\": {\n           \"type\": \"Point\",\n           \"coordinates\": [parseFloat(req.params.latitude), parseFloat(request.params.longitude)]\n          }\n         }\n        }\n       }, function (err, location) {\n              if (err) {\n                res.send(err);\n              } else {\n                res.send(location);\n              }\n            });\n    });\n\n    //Get Single Driver and emit track by user to driver\n    this.router.get(\"/driverLocation/:id\", function (req, res, next) {\n      var io = req.app.io;\n      DriverModel.findOne({ driverId: req.params.id }, function (err, location) {\n        if (err) {\n          res.send(err);\n        }\n        res.send(location);\n        io.emit(\"trackDriver\", location);\n      });\n    });\n\n    //Update Location by driver to user\n    this.router.put(\"/driverLocation/:id\", function (req, res, next) {\n      var io = req.app.io;\n      var location = req.body;\n      var latitude = parseFloat(location.latitude);\n      var longitude = parseFloat(location.longitude);\n      if (!location) {\n        res.status(400);\n        res.json({\n          \"error\": \"Bad Data\"\n        });\n      } else {\n        DriverModel.update({ _id: req.params.id }, {\n          $set: {\n            socketId: location.socketId,\n            coordinate: {\n              \"type\": \"Point\",\n              coordinates: [\n                longitude,\n                latitude\n              ]\n            }\n          }\n        }, function (err, updateDetails) {\n          if (err) {\n            console.log(updateDetails);\n            res.send(err);\n          }\n          if (updateDetails) {\n\n            //Get updated location\n            db.driversLocation.findOne({ _id: mongojs.ObjectId(req.params.id) }, function (error, updatedLocation) {\n              if (error) {\n                res.send(error);\n              }\n              res.send(updatedLocation);\n              io.emit(\"action\", {\n                type: \"UPDATE_DRIVER_LOCATION\",\n                payload: updatedLocation\n              });\n            });\n          }\n        });\n      }\n    });\n\n\n    \n    return this.router;\n  }\n}\nexport default UserRoutes;\n"],"file":"user_routes.js"}