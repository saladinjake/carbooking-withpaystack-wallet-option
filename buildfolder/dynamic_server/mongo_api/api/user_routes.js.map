{"version":3,"sources":["../../../../server/dynamic_server/mongo_api/api/user_routes.js"],"names":["corsOption","origin","methods","credentials","exposedHeaders","controllerWallet","require","UserRoutes","router","get","req","res","next","MailConfig","ViewOption","gmailTransport","hbs","HelperOptions","from","to","subject","template","context","name","email","address","sendMail","error","info","console","log","json","smtpTransport","verify","success","output","message","end","UserController","testEmail","post","userExists","TokenVerification","userAuthentication","walletUpgradeViaMobile","deleteItinerary","setPlanIdForUser","getPlanIdForUser","showProfile","UserSanitizer","validateSignUp","updateProfile","getCarsInfo","individualPlans","coperatePlans","addNewPlans","getAllUsersPlans","getAllUsersQuotations","getOnePlanById","patch","updateItem","deleteItem","put","debitWallet","updatePlanStatus","updateItinStatus","updateQuoteStatus","addDriveTestFromItinerary","getUserCars","saveUsersItinerary","getUsersItinerary","updateItineraryStatus","updateDriverRatings","editViewUsersItinerary","updateUsersItinerary","route","getBalance","paystackPayMeMoney","paystackCallBack","paystackReceipt","paystackHistory","paystackPayments","createPaymentDetail","paystackQuotations","makeNotification","getUserNotification","render","adminAuthentication","checkIfUserExists","addUserByAdmin","manageUsers","manageUsersDetail","manageUsersDetailVerification","deleteUser","addAdminByAdmin","manageAdmins","manageAdminsDetail","manageAdminsDetailVerification","checkIfDriverExists","addDriverByAdmin","manageDrivers","manageDriversDetail","manageDriversDetailVerification","deleteDriver","managePartners","deletePartner","managePartnersDetail","managePartnersDetailVerification","checkIfPartnerExists","addPartnerByAdmin","managePartnersEarnings","deletePartnersEarnings","managePartnersEarningsDetail","addPartnersEarningsByAdmin","manageProfile","manageProfileDetail","manageProfileDetailVerification","managePlanPackage","managePlanPackageCorporate","createNewPlan","managePlanPackageDetail","deletePlanPackage","manageSOS","manageSOSDetail","deleteSOS","manageTickets","manageTicketsDetail","deleteTicket","createNewTicket","manageFaqs","manageFaqsDetail","createNewFAQ","manageGoogleSettings","manageFacebookSettings","managePaystackSettings","manageEmailSettings","manageS3BucketSettings","manageInstagramSettings","manageSettingsDetail","manageItineraries","manageUsersPlan","manageItineraryDetail","manageUserNotificationCounter","manageBookings","manageBookingsDetail","makeQuotation","manageManualBooking","adminDashboard","adminDashboardTodaySales","adminDashboardYesterdaySales","adminDashboardWeeklySales","adminDashboardMonthlySales","paystackHistoryAdmin","paystackPaymentsAdmin","paystackQuotationsAdmin","deletePayment","deleteWallet","deleteQuotation","updateUsersPlanStatusAdmin","updateItineraryStatusAdmin","checkIfUserDoesntExists","createNewItinerary","createNewPlanBooking","createNewCar","manageCars","manageCarsDetail","manageInspection","createNewInspection","manageInspectionDetail","deleteInspection","manageDriveTest","manageDriveTestDetail","createNewDriveTest","deleteDriveTest","manageUsersDriveTestCenterUpdate","managePreviledges","createNewPreviledges","adminPreviledgesEdit","getUserPreviledges","showUserInfo","setOldBalance","managePreviledgesDetail","deletePreviledges","showProfileRights","getTrails","createTrail","getAllNotification","getAllRepairs","changeRepairStatus","driverConfirmBooking","revokecar","revokecarstatus","getrevokecars","updateNotificationStatus","io","app","body","status","params","id","DriverModel","updateOne","$set","socketId","err","updateDetails","send","find","parseFloat","latitude","request","longitude","location","findOne","driverId","emit","update","_id","coordinate","coordinates","db","driversLocation","mongojs","ObjectId","updatedLocation","type","payload"],"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","sourcesContent":["import UserController from '../controllers/user_controller';\nimport UserSanitizer from '../middlewares/user_sanitizer';\n\nimport TokenVerification from '../middlewares/token_validator';\nimport SubmitEventValidator from '../middlewares/post_sanitizer';\n\nimport DriverModel from \"../models/Driver.model\";\n\n\n\nimport cors from 'cors';\nlet corsOption = {\n        origin: true,\n        methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n        credentials: true,\n        exposedHeaders: ['x-auth-token'],\n        'Access-Control-Allow-Origin': '*'\n    };\n\n\n\n//for e wallet transactions\n\n// const validate = require('express-validation');\n const controllerWallet = require('../controllers/ewallet.controller');\n// //const { authorize, ADMIN, LOGGED_CUSTOMER } = require('../../middlewares/auth');\n// const {\n//   listCustomers,\n//   walletDeposit,\n//   walletTransfer,\n//   createCustomer,\n//   replaceCustomer,\n//   updateCustomer,\n// } = require('../helpers/customer.validation');\n\nclass UserRoutes {\n  constructor(router) {\n    // super(router);\n    this.router = router;\n  }\n\n  attachRoutes() {\n    /*\n * Respond to GET requests to /account.\n * Upon request, render the 'account.html' web page in views/ directory.\n */\n\n this.router.get('/email/template', (req, res, next) => {\n  MailConfig.ViewOption(gmailTransport,hbs);\n  let HelperOptions = {\n    from: '\"COMMUTE TAXI SERVICE\" <juwavictor@gmail.com>',\n    to: 'juwavictor@gmail.com',\n    subject: 'Hellow world!',\n    template: 'test',\n    context: {\n      name:\"COMMUTE TAXI\",\n      email: \"juwavictor@gmail.com\",\n      address: \"3A DOTUN CLOSE, IKEJA LAGOS\"\n    }\n  };\n  gmailTransport.sendMail(HelperOptions, (error,info) => {\n    if(error) {\n      console.log(error);\n      res.json(error);\n    }\n    console.log(\"email is send\");\n    console.log(info);\n    res.json(info)\n  });\n});\n\nthis.router.get('/email/smtp/template', (req, res, next) => {\n  MailConfig.ViewOption(smtpTransport,hbs);\n  let HelperOptions = {\n    from: '\"COMMUTE TAXI SERVICE\" <tester@softclo.com>',\n    to: 'tariqul.islam.rony@gmail.com',\n    subject: 'Hellow world!',\n    template: 'test',\n    context: {\n      name:\"tariqul_islam\",\n      email: \"tester@softclo.com\",\n      address: \"30 a my street\"\n    }\n  };\n  smtpTransport.verify((error, success) => {\n      if(error) {\n        res.json({output: 'error', message: error})\n        res.end();\n      } else {\n        smtpTransport.sendMail(HelperOptions, (error,info) => {\n          if(error) {\n            res.json({output: 'error', message: error})\n          }\n          res.json({output: 'success', message: info});\n          res.end();\n        });\n      }\n  })\n  \n});\n\n\n this.router.get('/test-email',\n  UserController.testEmail,\n  )\n\n  this.router.post('/userexists',\n  // TokenVerification.userAuthentication,\n   UserController.userExists\n   )\n\n   this.router.post('/transaction/upgrade-amount',\n   TokenVerification.userAuthentication,\n     UserController.walletUpgradeViaMobile\n   )\n\n\n   this.router.delete('/itinerary/delete/:id',\n     TokenVerification.userAuthentication,\n     UserController.deleteItinerary\n   )\n\n\n   this.router.post('/payplan-get/',\n   TokenVerification.userAuthentication,\n     UserController.setPlanIdForUser\n   )\n\n   this.router.get('/payplan-set/:id',\n   TokenVerification.userAuthentication,\n     UserController.getPlanIdForUser\n   )\n\n  //  this.router.get('/userexists',\n  //  UserController.userExists\n  //  )\n\n    this.router.get('/profile/update/:id',\n      TokenVerification.userAuthentication,\n    \tUserController.showProfile\n    );//\n    this.router.post('/profile/update/:id',\n      TokenVerification.userAuthentication,\n    \tUserSanitizer.validateSignUp,\n    \tUserController.updateProfile\n    );\n\n    this.router.get(\"/get-cars-info-user\",\n    TokenVerification.userAuthentication,\n    UserController.getCarsInfo\n  );\n\n    this.router.get(\n        '/individual/plans/view',\n        TokenVerification.userAuthentication,\n        UserController.individualPlans\n      );\n    this.router.get( \n        '/coperate/plans/view',\n        TokenVerification.userAuthentication,\n        UserController.coperatePlans\n      );\n    this.router.post(\n      '/plans/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.addNewPlans,\n    );\n    this.router.get(\n      '/plans/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.getAllUsersPlans,\n    );\n\n     this.router.get(\n      '/quotations/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.getAllUsersQuotations,\n    );\n\n    this.router.get(\n      '/plans/:id',\n      TokenVerification.userAuthentication,\n      UserController.getOnePlanById,\n    );\n\n    this.router.patch(\n      '/plans/:id',\n      TokenVerification.userAuthentication,\n      UserController.updateItem,\n    );\n\n    this.router.delete(\n      '/plans/:id',\n      TokenVerification.userAuthentication,\n      UserController.deleteItem,\n    );\n\n    this.router.put(\n      '/debit-wallet-transactions/:id/user',\n       TokenVerification.userAuthentication,\n       UserController.debitWallet,\n\n    );\n\n\n     \n\n     this.router.put(\n      '/plan-status/:id/update',\n       TokenVerification.userAuthentication,\n       UserController.updatePlanStatus,\n    );\n\n     this.router.put(\n      '/itin-status/:id/update',\n       TokenVerification.userAuthentication,\n       UserController.updateItinStatus,\n    );\n\n     this.router.put(\n      '/quote-status/:id/update',\n       TokenVerification.userAuthentication,\n      UserController.updateQuoteStatus,\n    );\n\n     this.router.post('/add-drive-test-for-user',\n         TokenVerification.userAuthentication,\n      UserController.addDriveTestFromItinerary,\n         \n      )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    this.router.get(\n      '/cars/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.getUserCars,\n    );\n\n\n    this.router.post(\n      '/itinerary/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.saveUsersItinerary,\n    );\n\n\n    this.router.get(\n      '/itinerary/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.getUsersItinerary,\n    );\n    \n    //update itineray status\n    this.router.put(\n      '/itinerary/:id/status',\n      TokenVerification.userAuthentication,\n      UserController.updateItineraryStatus,\n    );\n\n\n     this.router.put(\n      '/user/:id/ratings',\n      TokenVerification.userAuthentication,\n      UserController.updateDriverRatings,\n    );\n    \n\n\n\n\n\n    this.router.get(\n      '/itinerary/:id/user/edit',\n      TokenVerification.userAuthentication,\n      UserController.editViewUsersItinerary,\n    );\n\n    this.router.post(\n      '/itinerary/:id/user/edit',\n      TokenVerification.userAuthentication,\n      UserController.updateUsersItinerary,\n    );\n\n    this.router\n      .route('/balance/:id')\n      .get( TokenVerification.userAuthentication,  controllerWallet.getBalance);\n\n    // this.router\n    //   .route('/transactions')\n    //   .get( TokenVerification.userAuthentication,  controllerWallet.getTransactions);\n\n    // this.router\n    //   .route('/deposit')\n    //   .post( TokenVerification.userAuthentication, \n    //     validate(walletDeposit), controllerWallet.deposit);\n\n\n\n    this.router.post('/paystack/pay',//cors(corsOption), \n      TokenVerification.userAuthentication,\n      UserController.paystackPayMeMoney\n    );\n\n    this.router.get('/paystack/callback', \n      // TokenVerification.userAuthentication,\n      UserController.paystackCallBack\n    );\n\n    this.router.get('/receipt/:id',\n      // TokenVerification.userAuthentication, \n      UserController.paystackReceipt\n    );\n\n     this.router.get('/payment-history/:id',\n      TokenVerification.userAuthentication, \n      UserController.paystackHistory\n    );\n\n\n     this.router.get('/payment-payments/:id',\n      TokenVerification.userAuthentication, \n      UserController.paystackPayments\n    );\n\n     this.router.post('/makepayments',\n      TokenVerification.userAuthentication, \n      UserController.createPaymentDetail\n      )\n\n     this.router.get('/payment-quotations/:id',\n      TokenVerification.userAuthentication, \n      UserController.paystackQuotations\n    );\n\n     this.router.post('/notification',\n      TokenVerification.userAuthentication, \n       //UserSanitizer.checkIfUserDoesntExists,\n      UserController.makeNotification\n      );\n     this.router.get('/notification/:id',\n      TokenVerification.userAuthentication, \n      UserController.getUserNotification\n      );\n\n\n  // this.router.get(\"/drivers\",     //read done\n  //   TokenVerification.userAuthentication, \n  //   UserController.getDrivers\n  // );\n\n    \n    \n    // this.router\n    //   .route('/transfer')\n    //   .post( TokenVerification.userAuthentication, validate(walletTransfer), controllerWallet.transfer);\n\n    // this.router\n    //   .route('/withdrawal')\n    //   .post( TokenVerification.userAuthentication, validate(walletDeposit), controllerWallet.withdrawal);\n\n\n   this.router.get('/',(req, res) => {\n       res.render('index.pug');\n  });\n\n    \n  this.router.get('/error', (req, res)=>{\n      res.render('error.pug');\n  })\n\n \n  this.router.get('/testpaystack',(req, res) => {\n      res.render('index.pug');\n  });\n\n\n\n\n  //adminusers\n\n  //admin : users routes\n  this.router.post(\"/admin-add-user\", //create done\n    TokenVerification.adminAuthentication,\n    UserSanitizer.checkIfUserExists,\n    UserController.addUserByAdmin\n  );\n\n  this.router.get(\"/admin-users\", //read - done\n    TokenVerification.adminAuthentication,\n    UserController.manageUsers\n  );\n\n  this.router.put(\"/admin-users-detail/:id\", //update\n    TokenVerification.adminAuthentication,\n    UserController.manageUsersDetail\n  );\n\n  this.router.put(\"/admin-users-detail-verification/:id\", //update\n    TokenVerification.adminAuthentication,\n    UserController.manageUsersDetailVerification\n  );\n\n  this.router.delete(\"/users/:id/delete\", //delete - done\n    TokenVerification.adminAuthentication,\n    UserController.deleteUser\n  )//\n\n  \n\n  \n\n  //end of admin user routes\n\n  this.router.post(\"/add-admin\", //create done\n    TokenVerification.adminAuthentication,\n    UserSanitizer.checkIfUserExists,\n    UserController.addAdminByAdmin\n  );\n\n\n  this.router.get(\"/admin-admins\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.manageAdmins\n  );\n\n\n\n  this.router.put(\"/admin-admins-detail/:id\", //edit done\n    TokenVerification.adminAuthentication,\n    UserController.manageAdminsDetail\n  );\n\n  this.router.put(\"/admin-admins-detail-verification/:id\", //update\n    TokenVerification.adminAuthentication,\n    UserController.manageAdminsDetailVerification\n  );\n\n  this.router.delete(\"/users/:id/delete\", //delete - done\n    TokenVerification.adminAuthentication,\n    UserController.deleteUser\n  )//\n\n\n\n\n   this.router.post(\"/add-driver\", //create done\n    TokenVerification.adminAuthentication,\n    UserSanitizer.checkIfDriverExists,\n    UserController.addDriverByAdmin\n  );\n\n  this.router.get(\"/admin-drivers\",     //read done\n    TokenVerification.adminAuthentication,\n    UserController.manageDrivers\n  );\n\n  \n\n  this.router.put(\"/admin-drivers-detail/:id\", // update\n    TokenVerification.adminAuthentication,\n    UserController.manageDriversDetail\n  );\n\n  this.router.put(\"/admin-drivers-detail-verification/:id\", //update\n    TokenVerification.adminAuthentication,\n    UserController.manageDriversDetailVerification\n  );\n\n  this.router.delete(\"/drivers/:id/delete\", //delete done\n    TokenVerification.adminAuthentication,\n    UserController.deleteDriver\n  );\n\n\n\n\n\n  this.router.get(\"/admin-partners\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.managePartners\n  );\n\n  this.router.delete(\"/partners/:id/delete\",//delete done\n    TokenVerification.adminAuthentication,\n    UserController.deletePartner\n  )\n\n  this.router.put(\"/admin-partners-detail/:id\", //update done\n    TokenVerification.adminAuthentication,\n    UserController.managePartnersDetail\n  );\n\n  this.router.put(\"/admin-partners-detail-verification/:id\", //update\n    TokenVerification.adminAuthentication,\n    UserController.managePartnersDetailVerification\n  );\n\n  this.router.post(\"/add-partner\", //create done\n    TokenVerification.adminAuthentication,\n    UserSanitizer.checkIfPartnerExists,\n    UserController.addPartnerByAdmin\n  );\n\n\n\n    this.router.get(\"/admin-earnings\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.managePartnersEarnings\n  );\n\n  this.router.delete(\"/partners-earnings/:id/delete\",//delete done\n    TokenVerification.adminAuthentication,\n    UserController.deletePartnersEarnings\n  )\n\n  this.router.put(\"/partners-earnings-detail/:id\", //update done\n    TokenVerification.adminAuthentication,\n    UserController.managePartnersEarningsDetail\n  );\n\n \n\n  this.router.post(\"/add-partner-earnings\", //create done\n    TokenVerification.adminAuthentication,\n    // UserSanitizer.checkIfPartnerExists,\n    UserController.addPartnersEarningsByAdmin\n  );\n\n\n\n\n\n\n\n\n\n  this.router.get(\"/admin-profile/:id\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.manageProfile\n  );\n\n  this.router.put(\"/admin-profile-detail/:id\", //update not completed\n    TokenVerification.adminAuthentication,\n    UserController.manageProfileDetail\n  )\n\n  this.router.put(\"/admin-profile-detail-verification/:id\", //update\n    TokenVerification.adminAuthentication,\n    UserController.manageProfileDetailVerification\n  );\n\n\n\n  this.router.get(\"/admin-plan-package\",  // read done\n    TokenVerification.adminAuthentication,\n    UserController.managePlanPackage\n  );\n\n  this.router.get(\"/admin-plan-package-corporate\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.managePlanPackageCorporate\n  );\n\n  this.router.post(\"/add-plan\", //create \n    TokenVerification.adminAuthentication,\n    UserController.createNewPlan\n  );\n\n\n  this.router.put(\"/admin-plan-package-detail/:id\",// update done\n    TokenVerification.adminAuthentication,\n    UserController.managePlanPackageDetail\n  );\n\n  this.router.delete(\"/plan-package/:id/delete/:delete_type\",//delete done\n    TokenVerification.adminAuthentication,\n    UserController.deletePlanPackage\n  );\n\n\n  this.router.get(\"/admin-sos\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.manageSOS\n  )\n\n  this.router.put(\"/admin-sos-detail/:id\", //update\n    TokenVerification.adminAuthentication,\n    UserController.manageSOSDetail\n  );\n\n  this.router.delete(\"/redflag-sos/:id/delete\", //delete done\n    TokenVerification.adminAuthentication,\n    UserController.deleteSOS\n  );\n\n  //admin cant create any sos\n\n\n\n  //tickets \n\n  this.router.get(\"/admin-tickets\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.manageTickets\n  )\n\n\n  this.router.put(\"/admin-ticket-detail/:id\", //update \n    TokenVerification.adminAuthentication,\n    UserController.manageTicketsDetail\n  );\n\n  this.router.delete(\"/tickets/:id/delete\", //delete done\n    TokenVerification.adminAuthentication,\n    UserController.deleteTicket\n  );\n\n  this.router.post(\"/add-ticket\",          //done for admin\n    TokenVerification.adminAuthentication,\n    UserController.createNewTicket\n  )\n\n  \n\n  this.router.get(\"/admin-faqs\",  //done\n    TokenVerification.adminAuthentication,\n    UserController.manageFaqs\n  )\n  \n  this.router.put(\"/admin-faqs-detail/:id\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageFaqsDetail\n  );\n\n  this.router.post(\"/add-faq\", //done\n    TokenVerification.adminAuthentication,\n    UserController.createNewFAQ\n  );\n\n\n  this.router.get(\"/admin-settings-google\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageGoogleSettings\n  )\n\n  this.router.get(\"/admin-settings-facebook\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageFacebookSettings\n  )\n\n  this.router.get(\"/admin-settings-paystack\", //done --- revisit this\n    TokenVerification.adminAuthentication,\n    UserController.managePaystackSettings\n  )\n\n\n  this.router.get(\"/admin-settings-email\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageEmailSettings\n  )\n\n\n  this.router.get(\"/admin-settings-bucket\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageS3BucketSettings\n  )\n\n  this.router.get(\"/admin-settings-instagram\",//done\n    TokenVerification.adminAuthentication,\n    UserController.manageInstagramSettings\n  );\n\n\n  this.router.get(\"/admin-settings-instagram\",//done\n    TokenVerification.adminAuthentication,\n    UserController.manageInstagramSettings\n  );\n\n  this.router.put(\"/admin-settings-detail/:id\",\n    TokenVerification.adminAuthentication,\n    UserController.manageSettingsDetail\n  );\n\n\n\n  \n  \n\n\n\n  \n\n  this.router.get(\"/admin-itineraries\",  //done\n    TokenVerification.adminAuthentication,\n    UserController.manageItineraries\n  )\n\n  this.router.get(\"/admin-users-plan\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageUsersPlan\n  );\n\n\n\n\n  this.router.put(\"/admin-itinerary-details/:id\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageItineraryDetail\n  );\n\n  this.router.put(\"/notification-update/:id\", //done\n    TokenVerification.adminAuthentication,\n     UserController.manageUserNotificationCounter\n  )\n\n   \n\n\n  \n\n\n  \n\n  // this.router.get(\"/admin-wallet\",\n  //   TokenVerification.adminAuthentication,\n  //   UserController.manageWalletHistory\n  // )\n\n  this.router.get(\"/admin-bookings\",\n    TokenVerification.adminAuthentication,\n    UserController.manageBookings\n  );\n\n  this.router.put(\"/admin-bookings-detail\",\n    TokenVerification.adminAuthentication,\n    UserController.manageBookingsDetail\n  );\n\n  this.router.post('/make-quotation',\n    TokenVerification.adminAuthentication,\n    UserController.makeQuotation\n    )\n\n  \n\n\n\n  this.router.post(\"/admin-manual-booking\",\n    TokenVerification.adminAuthentication,\n\n    UserController.manageManualBooking\n  );\n\n  \n\n  \n\n  this.router.get(\"/admin\",\n    TokenVerification.adminAuthentication,\n    UserController.adminDashboard\n  );\n\n  this.router.get(\"/admin-sales-today\",\n    TokenVerification.adminAuthentication,\n    UserController.adminDashboardTodaySales\n  )\n\n\n\n  this.router.get(\"/admin-sales-yesterday\",\n    TokenVerification.adminAuthentication,\n    UserController.adminDashboardYesterdaySales\n  )\n\n\n  this.router.get(\"/admin-sales-lastweek\",\n    TokenVerification.adminAuthentication,\n    UserController.adminDashboardWeeklySales\n  );\n\n\n  this.router.get(\"/admin-users-month-ago\",\n    TokenVerification.adminAuthentication,\n    UserController.adminDashboardMonthlySales\n  );\n\n\n  this.router.get('/payment-history',\n      TokenVerification.adminAuthentication, \n      UserController.paystackHistoryAdmin\n    );\n\n\n     this.router.get('/payment-payments',\n      TokenVerification.adminAuthentication, \n      UserController.paystackPaymentsAdmin\n    );\n\n     this.router.get('/payment-quotations',\n      TokenVerification.adminAuthentication, \n      UserController.paystackQuotationsAdmin\n    );\n\n\n\n     this.router.delete('/payment/:id/delete',\n      TokenVerification.adminAuthentication, \n      UserController.deletePayment\n    );\n\n\n     this.router.delete('/wallet/:id/delete',\n      TokenVerification.adminAuthentication, \n      UserController.deleteWallet\n    );\n\n     this.router.delete('/quotation/:id/delete',\n      TokenVerification.adminAuthentication, \n      UserController.deleteQuotation\n    );\n\n\n\n  this.router.put(\"/userplan-status-update/:id\",\n    TokenVerification.adminAuthentication,\n    UserController.updateUsersPlanStatusAdmin\n  );\n\n\n  this.router.put(\"/user-itinerary-status-update/:id\",\n    TokenVerification.adminAuthentication,\n    UserController.updateItineraryStatusAdmin\n  );//admin-itinerary-add\n\n\n  this.router.post(\"/admin-itinerary-add\",\n    TokenVerification.adminAuthentication,\n\n    UserSanitizer.checkIfUserDoesntExists,\n    UserController.createNewItinerary\n  );\n\n  this.router.post(\"/admin-plan-add\",  //add booking\n    TokenVerification.adminAuthentication,\n     //UserSanitizer.checkIfUserDoesntExists,\n    UserController.createNewPlanBooking\n  );\n\n\n\n\n\n  this.router.post(\"/add-cars\", //done\n    TokenVerification.adminAuthentication,\n    UserController.createNewCar\n  );\n\n\n  this.router.get(\"/admin-cars-mgt\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageCars\n  );\n\n  this.router.get(\"/get-cars-info\",\n    TokenVerification.adminAuthentication,\n    UserController.getCarsInfo\n  );\n\n\n  this.router.put(\"/admin-cars-detail/:id\",\n    TokenVerification.adminAuthentication,\n    UserController.manageCarsDetail\n  );\n\n\n\n\n\n  this.router.get(\"/admin-inspection\", //read\n    TokenVerification.adminAuthentication,\n    UserController.manageInspection\n  );\n\n  this.router.post(\"/add-inspection\", //create \n    TokenVerification.adminAuthentication,\n    UserController.createNewInspection\n  );\n\n\n  this.router.put(\"/admin-inspection-detail/:id\",// update \n    TokenVerification.adminAuthentication,\n    UserController.manageInspectionDetail\n  );\n\n  this.router.delete(\"/inspection/:id/delete\",//delete \n    TokenVerification.adminAuthentication,\n    UserController.deleteInspection\n  );\n\n\n\n\n\n  this.router.get(\"/admin-drive-test\",\n    UserController.manageDriveTest\n  )\n\n\n  this.router.put(\"/admin-drive-test-detail/:id\",\n    TokenVerification.adminAuthentication,\n    UserController.manageDriveTestDetail\n  )\n\n   this.router.post(\"/add-drive-test\", //create \n    TokenVerification.adminAuthentication,\n    UserController.createNewDriveTest\n  );\n\n\n   this.router.delete(\"/drive-test/:id/delete\",//delete \n    TokenVerification.adminAuthentication,\n    UserController.deleteDriveTest\n  );\n\n\n   \n    this.router.put(\"/update-testcenter/:id\",\n    TokenVerification.adminAuthentication,\n    UserController.manageUsersDriveTestCenterUpdate\n  )\n\n\n  \n\n  this.router.get(\"/admin-previledges\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.managePreviledges\n  );\n\n  this.router.post(\"/add-roles\", //create \n    TokenVerification.adminAuthentication,\n    UserController.createNewPreviledges\n  );//\n\n\n   this.router.put(\"/admin-previledges-update/:id\", //create \n    TokenVerification.adminAuthentication,\n    UserController.adminPreviledgesEdit\n  );\n\n\n   this.router.get('/get-admin-previledges/:id',\n      TokenVerification.adminAuthentication,\n    UserController.getUserPreviledges\n    );\n\n\n   this.router.get('/fetchuserinfo/:id',\n      TokenVerification.userAuthentication,\n      UserController.showUserInfo\n    );\n\n\n   this.router.put(\"/old_balance/:id\", //create \n    TokenVerification.userAuthentication,\n    UserController.setOldBalance\n  );\n\n\n\n\n\n  this.router.put(\"/admin-role-detail/:id\",// update done\n    TokenVerification.adminAuthentication,\n    UserController.managePreviledgesDetail\n  );\n\n  this.router.delete(\"/roles/:id/delete\",//delete done\n    TokenVerification.adminAuthentication,\n    UserController.deletePreviledges\n  );\n\n  this.router.get('/profile-admin-rights/update/:id/permission/:roles',\n      TokenVerification.userAuthentication,\n      UserController.showProfileRights\n    );//showProfileRights(request,response)\n\n\n\n  this.router.get(\"/get-trails\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.getTrails\n  );\n\n  this.router.post(\"/log-audit\", //create \n    TokenVerification.adminAuthentication,\n    UserController.createTrail\n  );//\n\n\n  \n this.router.get('/get-all-notification',\n   TokenVerification.adminAuthentication,\n   UserController.getAllNotification\n  );\n\n\n this.router.get('/get-all-cars-repair-request',\n   TokenVerification.adminAuthentication,\n   UserController.getAllRepairs\n  );\n\n\n this.router.put('/admin-mech-status/:id',\n   TokenVerification.adminAuthentication,\n   UserController.changeRepairStatus\n  );\n//drivers\n     this.router.get('/confirm-booking-request',\n      //TokenVerification.userAuthentication, \n      UserController.driverConfirmBooking\n    );\n\n\n     // Add a vehicle retrieval \n     this.router.post('/admin-new-car-revoke',\n      TokenVerification.adminAuthentication,\n      UserController.revokecar\n    );\n\n     this.router.put('/admin-new-car-revoke-status/:id',\n      TokenVerification.adminAuthentication,\n      UserController.revokecarstatus\n    );\n\n     this.router.get('/admin-get-revoke-details',\n      TokenVerification.adminAuthentication,\n      UserController.getrevokecars\n    );\n\n     this.router.put('/notification/:id',\n      TokenVerification.userAuthentication,\n      UserController.updateNotificationStatus\n      )\n\n\n\n    //update driver socket id\n    this.router.put(\"/driverLocationSocket/:id\", function(req, res, next){\n      var io = req.app.io;\n      if(!req.body){\n        res.status(400);\n        res.json({\n          \"error\":\"Bad Data\"\n        });\n      } else {\n        console.log(req.params.id)\n        DriverModel.updateOne({id:req.params.id},\n          {$set: {socketId:req.body.socketId}}, function(err, updateDetails) {\n            if(err){\n              res.send(err);\n            }else{\n              console.log(updateDetails )\n              res.send(updateDetails);\n            }\n        });\n      }\n    });\n\n    //get nearby driver\n    this.router.get(\"/driverLocation/:latitude/:longitude\", function (req, res, next) {\n      //DriverModel.ensureIndex({\"coordinate\": \"2dsphere\"});\n      DriverModel.find({\n        \"location\": {\n         \"$near\": {\n          \"$maxDistance\": 1000,\n          \"$geometry\": {\n           \"type\": \"Point\",\n           \"coordinates\": [parseFloat(req.params.latitude), parseFloat(request.params.longitude)]\n          }\n         }\n        }\n       }, function (err, location) {\n              if (err) {\n                res.send(err);\n              } else {\n                res.send(location);\n              }\n            });\n    });\n\n    //Get Single Driver and emit track by user to driver\n    this.router.get(\"/driverLocation/:id\", function (req, res, next) {\n      var io = req.app.io;\n      DriverModel.findOne({ driverId: req.params.id }, function (err, location) {\n        if (err) {\n          res.send(err);\n        }\n        res.send(location);\n        io.emit(\"trackDriver\", location);\n      });\n    });\n\n    //Update Location by driver to user\n    this.router.put(\"/driverLocation/:id\", function (req, res, next) {\n      var io = req.app.io;\n      var location = req.body;\n      var latitude = parseFloat(location.latitude);\n      var longitude = parseFloat(location.longitude);\n      if (!location) {\n        res.status(400);\n        res.json({\n          \"error\": \"Bad Data\"\n        });\n      } else {\n        DriverModel.update({ _id: req.params.id }, {\n          $set: {\n            socketId: location.socketId,\n            coordinate: {\n              \"type\": \"Point\",\n              coordinates: [\n                longitude,\n                latitude\n              ]\n            }\n          }\n        }, function (err, updateDetails) {\n          if (err) {\n            console.log(updateDetails);\n            res.send(err);\n          }\n          if (updateDetails) {\n\n            //Get updated location\n            db.driversLocation.findOne({ _id: mongojs.ObjectId(req.params.id) }, function (error, updatedLocation) {\n              if (error) {\n                res.send(error);\n              }\n              res.send(updatedLocation);\n              io.emit(\"action\", {\n                type: \"UPDATE_DRIVER_LOCATION\",\n                payload: updatedLocation\n              });\n            });\n          }\n        });\n      }\n    });\n\n\n    \n    return this.router;\n  }\n}\nexport default UserRoutes;\n"],"file":"user_routes.js"}