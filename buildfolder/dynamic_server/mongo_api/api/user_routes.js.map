{"version":3,"sources":["../../../../server/dynamic_server/mongo_api/api/user_routes.js"],"names":["corsOption","origin","methods","credentials","exposedHeaders","validate","require","controllerWallet","listCustomers","walletDeposit","walletTransfer","createCustomer","replaceCustomer","updateCustomer","UserRoutes","router","get","TokenVerification","userAuthentication","UserController","showProfile","post","UserSanitizer","validateSignUp","updateProfile","individualPlans","coperatePlans","addNewPlans","getAllUsersPlans","getAllUsersQuotations","getOnePlanById","patch","updateItem","deleteItem","put","debitWallet","updatePlanStatus","updateItinStatus","updateQuoteStatus","addDriveTestFromItinerary","getUserCars","saveUsersItinerary","getUsersItinerary","updateItineraryStatus","editViewUsersItinerary","updateUsersItinerary","route","getBalance","getTransactions","deposit","paystackPayMeMoney","paystackCallBack","paystackReceipt","paystackHistory","paystackPayments","createPaymentDetail","paystackQuotations","makeNotification","getUserNotification","transfer","withdrawal","req","res","render","adminAuthentication","checkIfUserExists","addUserByAdmin","manageUsers","manageUsersDetail","manageUsersDetailVerification","deleteUser","addAdminByAdmin","manageAdmins","manageAdminsDetail","manageAdminsDetailVerification","checkIfDriverExists","addDriverByAdmin","manageDrivers","manageDriversDetail","manageDriversDetailVerification","deleteDriver","managePartners","deletePartner","managePartnersDetail","managePartnersDetailVerification","checkIfPartnerExists","addPartnerByAdmin","manageProfile","manageProfileDetail","manageProfileDetailVerification","managePlanPackage","managePlanPackageCorporate","createNewPlan","managePlanPackageDetail","deletePlanPackage","manageSOS","manageSOSDetail","deleteSOS","manageTickets","manageTicketsDetail","deleteTicket","createNewTicket","manageFaqs","manageFaqsDetail","createNewFAQ","manageGoogleSettings","manageFacebookSettings","managePaystackSettings","manageEmailSettings","manageS3BucketSettings","manageInstagramSettings","manageSettingsDetail","manageItineraries","manageUsersPlan","manageItineraryDetail","manageUserNotificationCounter","manageBookings","manageBookingsDetail","makeQuotation","manageManualBooking","adminDashboard","adminDashboardTodaySales","adminDashboardYesterdaySales","adminDashboardWeeklySales","adminDashboardMonthlySales","paystackHistoryAdmin","paystackPaymentsAdmin","paystackQuotationsAdmin","deletePayment","deleteWallet","deleteQuotation","updateUsersPlanStatusAdmin","updateItineraryStatusAdmin","checkIfUserDoesntExists","createNewItinerary","createNewPlanBooking","createNewCar","manageCars","getCarsInfo","manageCarsDetail","manageInspection","createNewInspection","manageInspectionDetail","deleteInspection","manageDriveTest","manageDriveTestDetail","createNewDriveTest","deleteDriveTest","manageUsersDriveTestCenterUpdate","managePreviledges","createNewPreviledges","adminPreviledgesEdit","getUserPreviledges","showUserInfo","setOldBalance","managePreviledgesDetail","deletePreviledges","showProfileRights","driverConfirmBooking","next","io","app","body","status","json","console","log","params","id","DriverModel","updateOne","$set","socketId","err","updateDetails","send","find","parseFloat","latitude","request","longitude","location","findOne","driverId","emit","update","_id","coordinate","coordinates","db","driversLocation","mongojs","ObjectId","error","updatedLocation","type","payload"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","sourcesContent":["import UserController from '../controllers/user_controller';\nimport UserSanitizer from '../middlewares/user_sanitizer';\n\nimport TokenVerification from '../middlewares/token_validator';\nimport SubmitEventValidator from '../middlewares/post_sanitizer';\n\nimport DriverModel from \"../models/Driver.model\";\n\nimport cors from 'cors';\nlet corsOption = {\n        origin: true,\n        methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n        credentials: true,\n        exposedHeaders: ['x-auth-token'],\n        'Access-Control-Allow-Origin': '*'\n    };\n\n\n\n//for e wallet transactions\n\nconst validate = require('express-validation');\nconst controllerWallet = require('../controllers/ewallet.controller');\n//const { authorize, ADMIN, LOGGED_CUSTOMER } = require('../../middlewares/auth');\nconst {\n  listCustomers,\n  walletDeposit,\n  walletTransfer,\n  createCustomer,\n  replaceCustomer,\n  updateCustomer,\n} = require('../helpers/customer.validation');\n\nclass UserRoutes {\n  constructor(router) {\n    // super(router);\n    this.router = router;\n  }\n\n  attachRoutes() {\n    /*\n * Respond to GET requests to /account.\n * Upon request, render the 'account.html' web page in views/ directory.\n */\n    this.router.get('/profile/update/:id',\n      TokenVerification.userAuthentication,\n    \tUserController.showProfile\n    );//\n    this.router.post('/profile/update/:id',\n      TokenVerification.userAuthentication,\n    \tUserSanitizer.validateSignUp,\n    \tUserController.updateProfile\n    );\n\n    this.router.get(\n        '/individual/plans/view',\n        TokenVerification.userAuthentication,\n        UserController.individualPlans\n      );\n    this.router.get(\n        '/coperate/plans/view',\n        TokenVerification.userAuthentication,\n        UserController.coperatePlans\n      );\n    this.router.post(\n      '/plans/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.addNewPlans,\n    );\n    this.router.get(\n      '/plans/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.getAllUsersPlans,\n    );\n\n     this.router.get(\n      '/quotations/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.getAllUsersQuotations,\n    );\n\n    this.router.get(\n      '/plans/:id',\n      TokenVerification.userAuthentication,\n      UserController.getOnePlanById,\n    );\n\n    this.router.patch(\n      '/plans/:id',\n      TokenVerification.userAuthentication,\n      UserController.updateItem,\n    );\n\n    this.router.delete(\n      '/plans/:id',\n      TokenVerification.userAuthentication,\n      UserController.deleteItem,\n    );\n\n    this.router.put(\n      '/debit-wallet-transactions/:id/user',\n       TokenVerification.userAuthentication,\n       UserController.debitWallet,\n\n    );\n\n\n     \n\n     this.router.put(\n      '/plan-status/:id/update',\n       TokenVerification.userAuthentication,\n       UserController.updatePlanStatus,\n    );\n\n     this.router.put(\n      '/itin-status/:id/update',\n       TokenVerification.userAuthentication,\n       UserController.updateItinStatus,\n    );\n\n     this.router.put(\n      '/quote-status/:id/update',\n       TokenVerification.userAuthentication,\n      UserController.updateQuoteStatus,\n    );\n\n     this.router.post('/add-drive-test-for-user',\n         TokenVerification.userAuthentication,\n      UserController.addDriveTestFromItinerary,\n         \n      )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    this.router.get(\n      '/cars/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.getUserCars,\n    );\n\n\n    this.router.post(\n      '/itinerary/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.saveUsersItinerary,\n    );\n\n\n    this.router.get(\n      '/itinerary/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.getUsersItinerary,\n    );\n    \n    //update itineray status\n    this.router.put(\n      '/itinerary/:id/status',\n      TokenVerification.userAuthentication,\n      UserController.updateItineraryStatus,\n    );\n    \n\n\n\n\n\n    this.router.get(\n      '/itinerary/:id/user/edit',\n      TokenVerification.userAuthentication,\n      UserController.editViewUsersItinerary,\n    );\n\n    this.router.post(\n      '/itinerary/:id/user/edit',\n      TokenVerification.userAuthentication,\n      UserController.updateUsersItinerary,\n    );\n\n    this.router\n      .route('/balance/:id')\n      .get( TokenVerification.userAuthentication,  controllerWallet.getBalance);\n\n    this.router\n      .route('/transactions')\n      .get( TokenVerification.userAuthentication,  controllerWallet.getTransactions);\n\n    this.router\n      .route('/deposit')\n      .post( TokenVerification.userAuthentication, \n        validate(walletDeposit), controllerWallet.deposit);\n\n\n\n    this.router.post('/paystack/pay',//cors(corsOption), \n      TokenVerification.userAuthentication,\n      UserController.paystackPayMeMoney\n    );\n\n    this.router.get('/paystack/callback', \n      // TokenVerification.userAuthentication,\n      UserController.paystackCallBack\n    );\n\n    this.router.get('/receipt/:id',\n      // TokenVerification.userAuthentication, \n      UserController.paystackReceipt\n    );\n\n     this.router.get('/payment-history/:id',\n      TokenVerification.userAuthentication, \n      UserController.paystackHistory\n    );\n\n\n     this.router.get('/payment-payments/:id',\n      TokenVerification.userAuthentication, \n      UserController.paystackPayments\n    );\n\n     this.router.post('/makepayments',\n      TokenVerification.userAuthentication, \n      UserController.createPaymentDetail\n      )\n\n     this.router.get('/payment-quotations/:id',\n      TokenVerification.userAuthentication, \n      UserController.paystackQuotations\n    );\n\n     this.router.post('/notification',\n      TokenVerification.userAuthentication, \n       //UserSanitizer.checkIfUserDoesntExists,\n      UserController.makeNotification\n      );\n     this.router.get('/notification/:id',\n      TokenVerification.userAuthentication, \n      UserController.getUserNotification\n      );\n\n\n  // this.router.get(\"/drivers\",     //read done\n  //   TokenVerification.userAuthentication, \n  //   UserController.getDrivers\n  // );\n\n    \n    \n    this.router\n      .route('/transfer')\n      .post( TokenVerification.userAuthentication, validate(walletTransfer), controllerWallet.transfer);\n\n    this.router\n      .route('/withdrawal')\n      .post( TokenVerification.userAuthentication, validate(walletDeposit), controllerWallet.withdrawal);\n\n\n   this.router.get('/',(req, res) => {\n       res.render('index.pug');\n  });\n\n    \n  this.router.get('/error', (req, res)=>{\n      res.render('error.pug');\n  })\n\n \n  this.router.get('/testpaystack',(req, res) => {\n      res.render('index.pug');\n  });\n\n\n\n\n  //adminusers\n\n  //admin : users routes\n  this.router.post(\"/admin-add-user\", //create done\n    TokenVerification.adminAuthentication,\n    UserSanitizer.checkIfUserExists,\n    UserController.addUserByAdmin\n  );\n\n  this.router.get(\"/admin-users\", //read - done\n    TokenVerification.adminAuthentication,\n    UserController.manageUsers\n  );\n\n  this.router.put(\"/admin-users-detail/:id\", //update\n    TokenVerification.adminAuthentication,\n    UserController.manageUsersDetail\n  );\n\n  this.router.put(\"/admin-users-detail-verification/:id\", //update\n    TokenVerification.adminAuthentication,\n    UserController.manageUsersDetailVerification\n  );\n\n  this.router.delete(\"/users/:id/delete\", //delete - done\n    TokenVerification.adminAuthentication,\n    UserController.deleteUser\n  )//\n\n  \n\n  \n\n  //end of admin user routes\n\n  this.router.post(\"/add-admin\", //create done\n    TokenVerification.adminAuthentication,\n    UserSanitizer.checkIfUserExists,\n    UserController.addAdminByAdmin\n  );\n\n\n  this.router.get(\"/admin-admins\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.manageAdmins\n  );\n\n\n\n  this.router.put(\"/admin-admins-detail/:id\", //edit done\n    TokenVerification.adminAuthentication,\n    UserController.manageAdminsDetail\n  );\n\n  this.router.put(\"/admin-admins-detail-verification/:id\", //update\n    TokenVerification.adminAuthentication,\n    UserController.manageAdminsDetailVerification\n  );\n\n  this.router.delete(\"/users/:id/delete\", //delete - done\n    TokenVerification.adminAuthentication,\n    UserController.deleteUser\n  )//\n\n\n\n\n   this.router.post(\"/add-driver\", //create done\n    TokenVerification.adminAuthentication,\n    UserSanitizer.checkIfDriverExists,\n    UserController.addDriverByAdmin\n  );\n\n  this.router.get(\"/admin-drivers\",     //read done\n    TokenVerification.adminAuthentication,\n    UserController.manageDrivers\n  );\n\n  \n\n  this.router.put(\"/admin-drivers-detail/:id\", // update\n    TokenVerification.adminAuthentication,\n    UserController.manageDriversDetail\n  );\n\n  this.router.put(\"/admin-drivers-detail-verification/:id\", //update\n    TokenVerification.adminAuthentication,\n    UserController.manageDriversDetailVerification\n  );\n\n  this.router.delete(\"/drivers/:id/delete\", //delete done\n    TokenVerification.adminAuthentication,\n    UserController.deleteDriver\n  );\n\n\n\n\n\n  this.router.get(\"/admin-partners\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.managePartners\n  );\n\n  this.router.delete(\"/partners/:id/delete\",//delete done\n    TokenVerification.adminAuthentication,\n    UserController.deletePartner\n  )\n\n  this.router.put(\"/admin-partners-detail/:id\", //update done\n    TokenVerification.adminAuthentication,\n    UserController.managePartnersDetail\n  );\n\n  this.router.put(\"/admin-partners-detail-verification/:id\", //update\n    TokenVerification.adminAuthentication,\n    UserController.managePartnersDetailVerification\n  );\n\n  this.router.post(\"/add-partner\", //create done\n    TokenVerification.adminAuthentication,\n    UserSanitizer.checkIfPartnerExists,\n    UserController.addPartnerByAdmin\n  );\n\n  this.router.get(\"/admin-profile/:id\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.manageProfile\n  );\n\n  this.router.put(\"/admin-profile-detail/:id\", //update not completed\n    TokenVerification.adminAuthentication,\n    UserController.manageProfileDetail\n  )\n\n  this.router.put(\"/admin-profile-detail-verification/:id\", //update\n    TokenVerification.adminAuthentication,\n    UserController.manageProfileDetailVerification\n  );\n\n\n\n  this.router.get(\"/admin-plan-package\",  // read done\n    TokenVerification.adminAuthentication,\n    UserController.managePlanPackage\n  );\n\n  this.router.get(\"/admin-plan-package-corporate\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.managePlanPackageCorporate\n  );\n\n  this.router.post(\"/add-plan\", //create \n    TokenVerification.adminAuthentication,\n    UserController.createNewPlan\n  );\n\n\n  this.router.put(\"/admin-plan-package-detail/:id\",// update done\n    TokenVerification.adminAuthentication,\n    UserController.managePlanPackageDetail\n  );\n\n  this.router.delete(\"/plan-package/:id/delete/:delete_type\",//delete done\n    TokenVerification.adminAuthentication,\n    UserController.deletePlanPackage\n  );\n\n\n  this.router.get(\"/admin-sos\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.manageSOS\n  )\n\n  this.router.put(\"/admin-sos-detail/:id\", //update\n    TokenVerification.adminAuthentication,\n    UserController.manageSOSDetail\n  );\n\n  this.router.delete(\"/redflag-sos/:id/delete\", //delete done\n    TokenVerification.adminAuthentication,\n    UserController.deleteSOS\n  );\n\n  //admin cant create any sos\n\n\n\n  //tickets \n\n  this.router.get(\"/admin-tickets\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.manageTickets\n  )\n\n\n  this.router.put(\"/admin-ticket-detail/:id\", //update \n    TokenVerification.adminAuthentication,\n    UserController.manageTicketsDetail\n  );\n\n  this.router.delete(\"/tickets/:id/delete\", //delete done\n    TokenVerification.adminAuthentication,\n    UserController.deleteTicket\n  );\n\n  this.router.post(\"/add-ticket\",          //done for admin\n    TokenVerification.adminAuthentication,\n    UserController.createNewTicket\n  )\n\n  \n\n  this.router.get(\"/admin-faqs\",  //done\n    TokenVerification.adminAuthentication,\n    UserController.manageFaqs\n  )\n  \n  this.router.put(\"/admin-faqs-detail/:id\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageFaqsDetail\n  );\n\n  this.router.post(\"/add-faq\", //done\n    TokenVerification.adminAuthentication,\n    UserController.createNewFAQ\n  );\n\n\n  this.router.get(\"/admin-settings-google\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageGoogleSettings\n  )\n\n  this.router.get(\"/admin-settings-facebook\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageFacebookSettings\n  )\n\n  this.router.get(\"/admin-settings-paystack\", //done --- revisit this\n    TokenVerification.adminAuthentication,\n    UserController.managePaystackSettings\n  )\n\n\n  this.router.get(\"/admin-settings-email\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageEmailSettings\n  )\n\n\n  this.router.get(\"/admin-settings-bucket\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageS3BucketSettings\n  )\n\n  this.router.get(\"/admin-settings-instagram\",//done\n    TokenVerification.adminAuthentication,\n    UserController.manageInstagramSettings\n  );\n\n\n  this.router.get(\"/admin-settings-instagram\",//done\n    TokenVerification.adminAuthentication,\n    UserController.manageInstagramSettings\n  );\n\n  this.router.put(\"/admin-settings-detail/:id\",\n    TokenVerification.adminAuthentication,\n    UserController.manageSettingsDetail\n  );\n\n\n\n  \n  \n\n\n\n  \n\n  this.router.get(\"/admin-itineraries\",  //done\n    TokenVerification.adminAuthentication,\n    UserController.manageItineraries\n  )\n\n  this.router.get(\"/admin-users-plan\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageUsersPlan\n  );\n\n\n\n\n  this.router.put(\"/admin-itinerary-details/:id\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageItineraryDetail\n  );\n\n  this.router.put(\"/notification-update/:id\", //done\n    TokenVerification.adminAuthentication,\n     UserController.manageUserNotificationCounter\n  )\n\n   \n\n\n  \n\n\n  \n\n  // this.router.get(\"/admin-wallet\",\n  //   TokenVerification.adminAuthentication,\n  //   UserController.manageWalletHistory\n  // )\n\n  this.router.get(\"/admin-bookings\",\n    TokenVerification.adminAuthentication,\n    UserController.manageBookings\n  );\n\n  this.router.put(\"/admin-bookings-detail\",\n    TokenVerification.adminAuthentication,\n    UserController.manageBookingsDetail\n  );\n\n  this.router.post('/make-quotation',\n    TokenVerification.adminAuthentication,\n    UserController.makeQuotation\n    )\n\n  \n\n\n\n  this.router.post(\"/admin-manual-booking\",\n    TokenVerification.adminAuthentication,\n\n    UserController.manageManualBooking\n  );\n\n  \n\n  \n\n  this.router.get(\"/admin\",\n    TokenVerification.adminAuthentication,\n    UserController.adminDashboard\n  );\n\n  this.router.get(\"/admin-sales-today\",\n    TokenVerification.adminAuthentication,\n    UserController.adminDashboardTodaySales\n  )\n\n\n\n  this.router.get(\"/admin-sales-yesterday\",\n    TokenVerification.adminAuthentication,\n    UserController.adminDashboardYesterdaySales\n  )\n\n\n  this.router.get(\"/admin-sales-lastweek\",\n    TokenVerification.adminAuthentication,\n    UserController.adminDashboardWeeklySales\n  );\n\n\n  this.router.get(\"/admin-users-month-ago\",\n    TokenVerification.adminAuthentication,\n    UserController.adminDashboardMonthlySales\n  );\n\n\n  this.router.get('/payment-history',\n      TokenVerification.adminAuthentication, \n      UserController.paystackHistoryAdmin\n    );\n\n\n     this.router.get('/payment-payments',\n      TokenVerification.adminAuthentication, \n      UserController.paystackPaymentsAdmin\n    );\n\n     this.router.get('/payment-quotations',\n      TokenVerification.adminAuthentication, \n      UserController.paystackQuotationsAdmin\n    );\n\n\n\n     this.router.delete('/payment/:id/delete',\n      TokenVerification.adminAuthentication, \n      UserController.deletePayment\n    );\n\n\n     this.router.delete('/wallet/:id/delete',\n      TokenVerification.adminAuthentication, \n      UserController.deleteWallet\n    );\n\n     this.router.delete('/quotation/:id/delete',\n      TokenVerification.adminAuthentication, \n      UserController.deleteQuotation\n    );\n\n\n\n  this.router.put(\"/userplan-status-update/:id\",\n    TokenVerification.adminAuthentication,\n    UserController.updateUsersPlanStatusAdmin\n  );\n\n\n  this.router.put(\"/user-itinerary-status-update/:id\",\n    TokenVerification.adminAuthentication,\n    UserController.updateItineraryStatusAdmin\n  );//admin-itinerary-add\n\n\n  this.router.post(\"/admin-itinerary-add\",\n    TokenVerification.adminAuthentication,\n\n    UserSanitizer.checkIfUserDoesntExists,\n    UserController.createNewItinerary\n  );\n\n  this.router.post(\"/admin-plan-add\",  //add booking\n    TokenVerification.adminAuthentication,\n     UserSanitizer.checkIfUserDoesntExists,\n    UserController.createNewPlanBooking\n  );\n\n\n\n\n\n  this.router.post(\"/add-cars\", //done\n    TokenVerification.adminAuthentication,\n    UserController.createNewCar\n  );\n\n\n  this.router.get(\"/admin-cars-mgt\", //done\n    TokenVerification.adminAuthentication,\n    UserController.manageCars\n  );\n\n  this.router.get(\"/get-cars-info\",\n    TokenVerification.adminAuthentication,\n    UserController.getCarsInfo\n  );\n\n\n  this.router.put(\"/admin-cars-detail/:id\",\n    TokenVerification.adminAuthentication,\n    UserController.manageCarsDetail\n  );\n\n\n\n\n\n  this.router.get(\"/admin-inspection\", //read\n    TokenVerification.adminAuthentication,\n    UserController.manageInspection\n  );\n\n  this.router.post(\"/add-inspection\", //create \n    TokenVerification.adminAuthentication,\n    UserController.createNewInspection\n  );\n\n\n  this.router.put(\"/admin-inspection-detail/:id\",// update \n    TokenVerification.adminAuthentication,\n    UserController.manageInspectionDetail\n  );\n\n  this.router.delete(\"/inspection/:id/delete\",//delete \n    TokenVerification.adminAuthentication,\n    UserController.deleteInspection\n  );\n\n\n\n\n\n  this.router.get(\"/admin-drive-test\",\n    UserController.manageDriveTest\n  )\n\n\n  this.router.put(\"/admin-drive-test-detail/:id\",\n    TokenVerification.adminAuthentication,\n    UserController.manageDriveTestDetail\n  )\n\n   this.router.post(\"/add-drive-test\", //create \n    TokenVerification.adminAuthentication,\n    UserController.createNewDriveTest\n  );\n\n\n   this.router.delete(\"/drive-test/:id/delete\",//delete \n    TokenVerification.adminAuthentication,\n    UserController.deleteDriveTest\n  );\n\n\n   \n    this.router.put(\"/update-testcenter/:id\",\n    TokenVerification.adminAuthentication,\n    UserController.manageUsersDriveTestCenterUpdate\n  )\n\n\n  \n\n  this.router.get(\"/admin-previledges\", //read done\n    TokenVerification.adminAuthentication,\n    UserController.managePreviledges\n  );\n\n  this.router.post(\"/add-roles\", //create \n    TokenVerification.adminAuthentication,\n    UserController.createNewPreviledges\n  );\n\n\n   this.router.put(\"/admin-previledges-update/:id\", //create \n    TokenVerification.adminAuthentication,\n    UserController.adminPreviledgesEdit\n  );\n\n\n   this.router.get('/get-admin-previledges/:id',\n      TokenVerification.adminAuthentication,\n    UserController.getUserPreviledges\n    );\n\n\n   this.router.get('/fetchuserinfo/:id',\n      TokenVerification.userAuthentication,\n      UserController.showUserInfo\n    );\n\n\n   this.router.put(\"/old_balance/:id\", //create \n    TokenVerification.userAuthentication,\n    UserController.setOldBalance\n  );\n\n\n\n\n\n  this.router.put(\"/admin-role-detail/:id\",// update done\n    TokenVerification.adminAuthentication,\n    UserController.managePreviledgesDetail\n  );\n\n  this.router.delete(\"/roles/:id/delete\",//delete done\n    TokenVerification.adminAuthentication,\n    UserController.deletePreviledges\n  );\n\n  this.router.get('/profile-admin-rights/update/:id',\n      TokenVerification.userAuthentication,\n      UserController.showProfileRights\n    );//showProfileRights(request,response)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n     //drivers\n     this.router.get('/confirm-booking-request',\n      //TokenVerification.userAuthentication, \n      UserController.driverConfirmBooking\n    );\n\n\n\n    //update driver socket id\n    this.router.put(\"/driverLocationSocket/:id\", function(req, res, next){\n      var io = req.app.io;\n      if(!req.body){\n        res.status(400);\n        res.json({\n          \"error\":\"Bad Data\"\n        });\n      } else {\n        console.log(req.params.id)\n        DriverModel.updateOne({id:req.params.id},\n          {$set: {socketId:req.body.socketId}}, function(err, updateDetails) {\n            if(err){\n              res.send(err);\n            }else{\n              console.log(updateDetails )\n              res.send(updateDetails);\n            }\n        });\n      }\n    });\n\n    //get nearby driver\n    this.router.get(\"/driverLocation/:latitude/:longitude\", function (req, res, next) {\n      //DriverModel.ensureIndex({\"coordinate\": \"2dsphere\"});\n      DriverModel.find({\n        \"location\": {\n         \"$near\": {\n          \"$maxDistance\": 1000,\n          \"$geometry\": {\n           \"type\": \"Point\",\n           \"coordinates\": [parseFloat(req.params.latitude), parseFloat(request.params.longitude)]\n          }\n         }\n        }\n       }, function (err, location) {\n              if (err) {\n                res.send(err);\n              } else {\n                res.send(location);\n              }\n            });\n    });\n\n    //Get Single Driver and emit track by user to driver\n    this.router.get(\"/driverLocation/:id\", function (req, res, next) {\n      var io = req.app.io;\n      DriverModel.findOne({ driverId: req.params.id }, function (err, location) {\n        if (err) {\n          res.send(err);\n        }\n        res.send(location);\n        io.emit(\"trackDriver\", location);\n      });\n    });\n\n    //Update Location by driver to user\n    this.router.put(\"/driverLocation/:id\", function (req, res, next) {\n      var io = req.app.io;\n      var location = req.body;\n      var latitude = parseFloat(location.latitude);\n      var longitude = parseFloat(location.longitude);\n      if (!location) {\n        res.status(400);\n        res.json({\n          \"error\": \"Bad Data\"\n        });\n      } else {\n        DriverModel.update({ _id: req.params.id }, {\n          $set: {\n            socketId: location.socketId,\n            coordinate: {\n              \"type\": \"Point\",\n              coordinates: [\n                longitude,\n                latitude\n              ]\n            }\n          }\n        }, function (err, updateDetails) {\n          if (err) {\n            console.log(updateDetails);\n            res.send(err);\n          }\n          if (updateDetails) {\n\n            //Get updated location\n            db.driversLocation.findOne({ _id: mongojs.ObjectId(req.params.id) }, function (error, updatedLocation) {\n              if (error) {\n                res.send(error);\n              }\n              res.send(updatedLocation);\n              io.emit(\"action\", {\n                type: \"UPDATE_DRIVER_LOCATION\",\n                payload: updatedLocation\n              });\n            });\n          }\n        });\n      }\n    });\n\n\n    \n    return this.router;\n  }\n}\nexport default UserRoutes;\n"],"file":"user_routes.js"}