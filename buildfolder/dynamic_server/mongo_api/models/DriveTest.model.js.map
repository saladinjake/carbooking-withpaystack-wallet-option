{"version":3,"sources":["../../../../server/dynamic_server/mongo_api/models/DriveTest.model.js"],"names":["Promise","require","DriveTestSchema","mongoose","Schema","id","type","Number","status","String","test_center","description","required","username","email","time","createdDate","phone_number","car_id","created_at","Date","now","updated_at","collection","timestamps","createdAt","updatedAt","set","getters","virtuals","statics","addTest","user","callback","create","module","exports","model"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;AADA,IAAMA,OAAO,0BAAGC,OAAO,CAAC,UAAD,CAAV,CAAb;AAGA,IAAIC,eAAe,0BAAG,IAAIC,qBAASC,MAAb,CAAoB;AAClCC,EAAAA,EAAE,EAAE;AACFC,IAAAA,IAAI,EAAEC,MADJ;AAGF,eAAS;AAHP,GAD8B;AAMlCC,EAAAA,MAAM,EAAC;AACLF,IAAAA,IAAI,EAAEG,MADD;AAEL,YAAK,CACJ,SADI,EAEJ,WAFI;AAFA,GAN2B;AAalCC,EAAAA,WAAW,EAAE;AACXJ,IAAAA,IAAI,EAAEG;AADK,GAbqB;AAgBlCE,EAAAA,WAAW,EAAC;AACVL,IAAAA,IAAI,EAAEG,MADI;AAEVG,IAAAA,QAAQ,EAAC;AAFC,GAhBsB;AAqBlCC,EAAAA,QAAQ,EAAG;AACTP,IAAAA,IAAI,EAAEG;AADG,GArBuB;AAyBlCK,EAAAA,KAAK,EAAG;AACNR,IAAAA,IAAI,EAAEG;AADA,GAzB0B;AA8BlCM,EAAAA,IAAI,EAAE;AACJT,IAAAA,IAAI,EAAEG;AADF,GA9B4B;AAkClCO,EAAAA,WAAW,EAAC;AACVV,IAAAA,IAAI,EAACG;AADK,GAlCsB;AAsClCQ,EAAAA,YAAY,EAAG;AACbX,IAAAA,IAAI,EAAEG;AADO,GAtCmB;AA0ClCS,EAAAA,MAAM,EAAE;AACNZ,IAAAA,IAAI,EAACG;AADC,GA1C0B;AA8ClCU,EAAAA,UAAU,EAAG;AACXb,IAAAA,IAAI,EAAEc,IADK;AAEX,eAASA,IAAI,CAACC;AAFH,GA9CqB;AAkDlCC,EAAAA,UAAU,EAAE;AACVhB,IAAAA,IAAI,EAAEc,IADI;AAEV,eAASA,IAAI,CAACC;AAFJ;AAlDsB,CAApB,EAuDd;AACAE,EAAAA,UAAU,EAAE,uBADZ;AAEAC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,SAAS,EAAE,YAAb;AAA2BC,IAAAA,SAAS,EAAE;AAAtC;AAFZ,CAvDc,CAAH,CAAnB;;AA4DAxB,eAAe,CAACyB,GAAhB,CAAoB,QAApB,EAA8B;AAACC,EAAAA,OAAO,EAAE,IAAV;AAAgBC,EAAAA,QAAQ,EAAE;AAA1B,CAA9B;;AAKA3B,eAAe,CAAC4B,OAAhB,GAA0B;AAEb;AACDC,EAAAA,OAHc,mBAGNC,IAHM,EAGAC,QAHA,EAGW;AAAA;AAAA;AACvB,WAAO,KAAKC,MAAL,CAAYF,IAAZ,EAAkBC,QAAlB,CAAP;AACD;AALa,CAA1B;;AAUAE,MAAM,CAACC,OAAP,GAAiBjC,qBAASkC,KAAT,CAAe,gBAAf,EAAiCnC,eAAjC,CAAjB","sourcesContent":["'use strict';\r\nconst Promise = require('bluebird');\r\nimport mongoose from  'mongoose';\r\n\r\nlet DriveTestSchema = new mongoose.Schema({\r\n        id :{\r\n          type: Number,\r\n         \r\n          default: 0\r\n        },\r\n        status:{\r\n          type: String,\r\n          enum:[\r\n           'Pending',\r\n           'Completed'\r\n          ]\r\n        },\r\n        test_center: {\r\n          type: String\r\n        },\r\n        description:{\r\n          type: String,\r\n          required:true\r\n        },\r\n\r\n        username : {\r\n          type: String,\r\n          \r\n        },\r\n        email : {\r\n          type: String,\r\n        \r\n        },\r\n\r\n        time: {\r\n          type: String\r\n        },\r\n\r\n        createdDate:{\r\n          type:String\r\n        },\r\n        \r\n        phone_number : {\r\n          type: String\r\n        },\r\n\r\n        car_id: {\r\n          type:String,\r\n        },\r\n        \r\n        created_at : {\r\n          type: Date,\r\n          default: Date.now\r\n        },\r\n        updated_at :{\r\n          type: Date,\r\n          default: Date.now\r\n        },\r\n       \r\n      },{\r\n        collection: 'drivetest_collections',\r\n        timestamps: { createdAt: 'created_at', updatedAt: 'updated_at' }\r\n});\r\n\r\nDriveTestSchema.set('toJSON', {getters: true, virtuals: true});\r\n\r\n\r\n\r\n\r\nDriveTestSchema.statics = {\r\n             \r\n             // Add Intervention\r\n            addTest(user, callback)  {\r\n              return this.create(user, callback);\r\n            },\r\n\r\n     \r\n};\r\n\r\nmodule.exports = mongoose.model('DriveTestModel', DriveTestSchema);\r\n\r\n\r\n"],"file":"DriveTest.model.js"}