{"version":3,"sources":["../../../../server/dynamic_server/mongo_api/models/Wallet.model.js"],"names":["Promise","require","WalletSchema","mongoose","Schema","id","type","String","full_name","status","email","amount","Number","phone_number","reference","old_balance","createdDate","Date","userId","plan_id","quotation_id","collection","timestamps","createdAt","updatedAt","set","getters","virtuals","method","statics","addToWallet","data","callback","create","module","exports","model"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AADA,IAAMA,OAAO,2BAAGC,OAAO,CAAC,UAAD,CAAV,CAAb;AAEA,IAAMC,YAAY,2BAAG,IAAIC,qBAASC,MAAb,CAAoB;AACrCC,EAAAA,EAAE,EAAE;AACEC,IAAAA,IAAI,EAAEC,MADR;AAGE,eAAS;AAHX,GADiC;AAMrCC,EAAAA,SAAS,EAAE;AACPF,IAAAA,IAAI,EAAEC;AADC,GAN0B;AAUrCE,EAAAA,MAAM,EAAE;AACNH,IAAAA,IAAI,EAAEC,MADA;AAEN,YAAM,CACN,YADM,EAEN,QAFM,CAFA;AAMN,eAAS;AANH,GAV6B;AAmBrCG,EAAAA,KAAK,EAAE;AACHJ,IAAAA,IAAI,EAAEC;AADH,GAnB8B;AAsBrCI,EAAAA,MAAM,EAAE;AACJL,IAAAA,IAAI,EAAEM;AADF,GAtB6B;AAyBrCC,EAAAA,YAAY,EAAC;AACXP,IAAAA,IAAI,EAAEC;AADK,GAzBwB;AA4BrCO,EAAAA,SAAS,EAAE;AACPR,IAAAA,IAAI,EAAEC;AADC,GA5B0B;AAiCrCQ,EAAAA,WAAW,EAAE;AACVT,IAAAA,IAAI,EAACC;AADK,GAjCwB;AAqCrCS,EAAAA,WAAW,EAAC;AACRV,IAAAA,IAAI,EAAEW,IADE;AAER,eAAS,IAAIA,IAAJ;AAFD,GArCyB;AA0CrCC,EAAAA,MAAM,EAAC;AACHZ,IAAAA,IAAI,EAACC;AADF,GA1C8B;AA6CrCY,EAAAA,OAAO,EAAC;AACNb,IAAAA,IAAI,EAAEC,MADA;AAEN,eAAS;AAFH,GA7C6B;AAkDrCa,EAAAA,YAAY,EAAC;AACXd,IAAAA,IAAI,EAAEC,MADK;AAEX,eAAS;AAFE;AAlDwB,CAApB,EAsDnB;AACMc,EAAAA,UAAU,EAAE,oBADlB;AAEMC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,SAAS,EAAE,YAAb;AAA2BC,IAAAA,SAAS,EAAE;AAAtC;AAFlB,CAtDmB,CAAH,CAAlB;;AA6DAtB,YAAY,CAACuB,GAAb,CAAiB,QAAjB,EAA2B;AAACC,EAAAA,OAAO,EAAE,IAAV;AAAgBC,EAAAA,QAAQ,EAAE;AAA1B,CAA3B;AAGM;;;;;AAGAzB,YAAY,CAAC0B,MAAb,CAAoB,EAApB;AAIA;;;;;AAGC1B,YAAY,CAAC2B,OAAb,GAAuB;AAEjB;AACDC,EAAAA,WAHkB,uBAGJC,IAHI,EAGEC,QAHF,EAGa;AAAA;AAAA;AAC7B,WAAO,KAAKC,MAAL,CAAYF,IAAZ,EAAiBC,QAAjB,CAAP;AACD;AALiB,CAAvB;;AAWPE,MAAM,CAACC,OAAP,GAAiBhC,qBAASiC,KAAT,CAAe,OAAf,EAAwBlC,YAAxB,CAAjB","sourcesContent":["const Promise = require('bluebird');\nimport mongoose from  'mongoose';\nconst WalletSchema = new mongoose.Schema({\n    id :{\n          type: String,\n         \n          default: \"0\"\n        },\n    full_name: {\n        type: String,    \n    },\n\n    status: {\n      type: String,\n      enum: [\n      'Successful',\n      'Failed',\n      ],\n      default: 'Successful',\n    },\n    \n    email: {\n        type: String, \n    },\n    amount: {\n        type: Number, \n    },\n    phone_number:{\n      type: String\n    },\n    reference: {\n        type: String, \n       \n    },\n\n    old_balance: {\n       type:String\n    },\n\n    createdDate:{\n        type: Date,\n        default: new Date()\n    }, \n\n    userId:{\n        type:String\n    },\n    plan_id:{\n      type: String,\n      default: \"Not Set\"\n    },\n\n    quotation_id:{\n      type: String,\n      default: \"Not Set\"\n    },\n},{\n        collection: 'wallet_collections',\n        timestamps: { createdAt: 'created_at', updatedAt: 'updated_at' }\n});\n\n\n\nWalletSchema.set('toJSON', {getters: true, virtuals: true});\n\n      \n      /**\n       * Methods\n       */\n      WalletSchema.method({\n        \n      });\n\n      /**\n       * Statics\n       */\n       WalletSchema.statics = {\n            \n             // Add Intervention\n            addToWallet  (data, callback)  {\n              return this.create(data,callback);\n            },\n\n    };\n\n\n\nmodule.exports = mongoose.model('Donor', WalletSchema);"],"file":"Wallet.model.js"}