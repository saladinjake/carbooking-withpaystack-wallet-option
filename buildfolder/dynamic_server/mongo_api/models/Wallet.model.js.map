{"version":3,"sources":["../../../../server/dynamic_server/mongo_api/models/Wallet.model.js"],"names":["Promise","require","WalletSchema","mongoose","Schema","id","type","String","full_name","status","email","amount","Number","phone_number","reference","old_balance","createdDate","Date","userId","plan_id","quotation_id","collection","timestamps","createdAt","updatedAt","set","getters","virtuals","method","statics","addToWallet","data","callback","create","module","exports","model"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AADA,IAAMA,OAAO,2BAAGC,OAAO,CAAC,UAAD,CAAV,CAAb;;AAEA;;AACA;;AACA;AACA,IAAMC,YAAY,2BAAG,IAAIC,qBAASC,MAAb,CACnB;AACEC,EAAAA,EAAE,EAAE;AACFC,IAAAA,IAAI,EAAEC,MADJ;AAGF,eAAS;AAHP,GADN;AAMEC,EAAAA,SAAS,EAAE;AACTF,IAAAA,IAAI,EAAEC;AADG,GANb;AAUEE,EAAAA,MAAM,EAAE;AACNH,IAAAA,IAAI,EAAEC,MADA;AAEN,YAAM,CAAC,YAAD,EAAe,QAAf,CAFA;AAGN,eAAS;AAHH,GAVV;AAgBEG,EAAAA,KAAK,EAAE;AACLJ,IAAAA,IAAI,EAAEC;AADD,GAhBT;AAmBEI,EAAAA,MAAM,EAAE;AACNL,IAAAA,IAAI,EAAEM;AADA,GAnBV;AAsBEC,EAAAA,YAAY,EAAE;AACZP,IAAAA,IAAI,EAAEC;AADM,GAtBhB;AAyBEO,EAAAA,SAAS,EAAE;AACTR,IAAAA,IAAI,EAAEC;AADG,GAzBb;AA6BEQ,EAAAA,WAAW,EAAE;AACXT,IAAAA,IAAI,EAAEC;AADK,GA7Bf;AAiCES,EAAAA,WAAW,EAAE;AACXV,IAAAA,IAAI,EAAEW,IADK;AAEX,eAAS,IAAIA,IAAJ;AAFE,GAjCf;AAsCEC,EAAAA,MAAM,EAAE;AACNZ,IAAAA,IAAI,EAAEC;AADA,GAtCV;AAyCEY,EAAAA,OAAO,EAAE;AACPb,IAAAA,IAAI,EAAEC,MADC;AAEP,eAAS;AAFF,GAzCX;AA8CEa,EAAAA,YAAY,EAAE;AACZd,IAAAA,IAAI,EAAEC,MADM;AAEZ,eAAS;AAFG;AA9ChB,CADmB,EAoDnB;AACEc,EAAAA,UAAU,EAAE,oBADd;AAEEC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,SAAS,EAAE,YAAb;AAA2BC,IAAAA,SAAS,EAAE;AAAtC;AAFd,CApDmB,CAAH,CAAlB;;AA0DAtB,YAAY,CAACuB,GAAb,CAAiB,QAAjB,EAA2B;AAAEC,EAAAA,OAAO,EAAE,IAAX;AAAiBC,EAAAA,QAAQ,EAAE;AAA3B,CAA3B;AAEA;AACA;AACA;;;AACAzB,YAAY,CAAC0B,MAAb,CAAoB,EAApB;AAEA;AACA;AACA;;;AACA1B,YAAY,CAAC2B,OAAb,GAAuB;AACrB;AACAC,EAAAA,WAFqB,uBAETC,IAFS,EAEHC,QAFG,EAEO;AAAA;AAAA;AAC1B,WAAO,KAAKC,MAAL,CAAYF,IAAZ,EAAkBC,QAAlB,CAAP;AACD;AAJoB,CAAvB;;AAOAE,MAAM,CAACC,OAAP,GAAiBhC,qBAASiC,KAAT,CAAe,OAAf,EAAwBlC,YAAxB,CAAjB","sourcesContent":["const Promise = require('bluebird');\nimport mongoose from 'mongoose';\n/****************************************************************/\n/******* @author saladin jake (Victor juwa) ********************************/\n/******* @desc Express js || ****************/\nconst WalletSchema = new mongoose.Schema(\n  {\n    id: {\n      type: String,\n\n      default: '0',\n    },\n    full_name: {\n      type: String,\n    },\n\n    status: {\n      type: String,\n      enum: ['Successful', 'Failed'],\n      default: 'Successful',\n    },\n\n    email: {\n      type: String,\n    },\n    amount: {\n      type: Number,\n    },\n    phone_number: {\n      type: String,\n    },\n    reference: {\n      type: String,\n    },\n\n    old_balance: {\n      type: String,\n    },\n\n    createdDate: {\n      type: Date,\n      default: new Date(),\n    },\n\n    userId: {\n      type: String,\n    },\n    plan_id: {\n      type: String,\n      default: 'Not Set',\n    },\n\n    quotation_id: {\n      type: String,\n      default: 'Not Set',\n    },\n  },\n  {\n    collection: 'wallet_collections',\n    timestamps: { createdAt: 'created_at', updatedAt: 'updated_at' },\n  },\n);\n\nWalletSchema.set('toJSON', { getters: true, virtuals: true });\n\n/**\n * Methods\n */\nWalletSchema.method({});\n\n/**\n * Statics\n */\nWalletSchema.statics = {\n  // Add Intervention\n  addToWallet(data, callback) {\n    return this.create(data, callback);\n  },\n};\n\nmodule.exports = mongoose.model('Donor', WalletSchema);\n"],"file":"Wallet.model.js"}