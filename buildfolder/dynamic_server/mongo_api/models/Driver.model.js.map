{"version":3,"sources":["../../../../server/dynamic_server/mongo_api/models/Driver.model.js"],"names":["Promise","require","DriverSchema","mongoose","Schema","id","type","Number","firstname","String","lastname","identity_card","test_certificate","status","roles","isVerified","Boolean","is_active","avatar","car_assigned_name","Array","assigned_car_plate_number","assigned_driver_location","geometry","coordinates","index","location","socket_id","passwordResetToken","passwordResetExpires","Date","username","email","password","phone_number","is_admin","created_at","now","updated_at","googleProvider","token","select","facebookProvider","collection","timestamps","createdAt","updatedAt","set","getters","virtuals","method","statics","addUser","user","callback","create","get","findOne","exec","then","err","Error","reject","listUsers","skip","limit","find","sort","upsertFbUser","accessToken","refreshToken","profile","cb","that","newUser","fullName","displayName","emails","value","save","error","savedUser","console","log","upsertGoogleUser","module","exports","model"],"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","sourcesContent":["'use strict';\nconst Promise = require('bluebird');\nimport mongoose from 'mongoose';\n/****************************************************************/\n/******* @author saladin jake (Victor juwa) ********************************/\n/******* @desc Express js || ****************/\n//const  SetUpUserMigrations = () =>{\n/**\n * User Schema\n */\nlet DriverSchema = new mongoose.Schema(\n  {\n    id: {\n      type: Number,\n      default: 0,\n    },\n    firstname: {\n      type: String,\n    },\n    lastname: {\n      type: String,\n    },\n    identity_card: {\n      type: String,\n    },\n    test_certificate: {\n      type: String,\n    },\n\n    status: {\n      type: String,\n      enum: ['Active', 'Dormant', 'Disabled', 'Suspended'],\n      default: 'Active',\n    },\n\n    roles: {\n      type: String,\n\n      default: 'Individual Driver',\n    },\n\n    isVerified: {\n      type: Boolean,\n\n      default: false,\n    },\n    is_active: {\n      type: String,\n      default: true,\n    },\n    avatar: {\n      type: String,\n    },\n\n    car_assigned_name: {\n      type: Array,\n    },\n\n    assigned_car_plate_number: {\n      type: String,\n    },\n\n    assigned_driver_location: {\n      type: String,\n    },\n\n    geometry: {\n      coordinates: { type: [Number], index: '2dsphere' },\n    },\n\n    location: {\n      type: { type: String },\n      coordinates: [],\n    },\n\n    socket_id: {\n      type: String,\n    },\n\n    passwordResetToken: { type: String },\n    passwordResetExpires: { type: Date },\n    // othernames : {\n    //   type: String,\n    //   required: true\n    // },\n    username: {\n      type: String,\n    },\n    email: {\n      type: String,\n    },\n    password: {\n      type: String,\n    },\n    phone_number: {\n      type: String,\n\n      //match: [/^[1-9][0-9]{9}$/, 'The value of path {PATH} ({VALUE}) is not a valid mobile number.']\n    },\n    is_admin: Boolean,\n    created_at: {\n      type: Date,\n      default: Date.now,\n    },\n    updated_at: {\n      type: Date,\n      default: Date.now,\n    },\n\n    googleProvider: {\n      type: {\n        id: String,\n        token: String,\n      },\n      select: false,\n    },\n\n    facebookProvider: {\n      type: {\n        id: String,\n        token: String,\n      },\n      select: false,\n    },\n  },\n  {\n    collection: 'driver_collections',\n    timestamps: { createdAt: 'created_at', updatedAt: 'updated_at' },\n  },\n);\n\nDriverSchema.set('toJSON', { getters: true, virtuals: true });\n\nDriverSchema.index({ location: '2dsphere' });\n/**\n * Methods\n */\nDriverSchema.method({});\n\n/**\n * Statics\n */\nDriverSchema.statics = {\n  // Add Intervention\n  addUser(user, callback) {\n    return this.create(user, callback);\n  },\n\n  get(id) {\n    return this.findOne(id)\n      .exec()\n      .then(user => {\n        if (user) {\n          return user;\n        }\n        const err = new Error('No such user exists!');\n        return Promise.reject(err);\n      });\n  },\n\n  listUsers({ skip = 0, limit = 50 } = {}) {\n    return this.find()\n      .sort({ created_at: -1 })\n      .skip(+skip)\n      .limit(+limit)\n      .exec();\n  },\n\n  upsertFbUser(accessToken, refreshToken, profile, cb) {\n    var that = this;\n    return this.findOne(\n      {\n        'facebookProvider.id': profile.id,\n      },\n      function(err, user) {\n        // no user was found, lets create a new one\n        if (!user) {\n          var newUser = new that({\n            fullName: profile.displayName,\n            email: profile.emails[0].value,\n            facebookProvider: {\n              id: profile.id,\n              token: accessToken,\n            },\n          });\n\n          newUser.save(function(error, savedUser) {\n            if (error) {\n              console.log(error);\n            }\n            return cb(error, savedUser);\n          });\n        } else {\n          return cb(err, user);\n        }\n      },\n    );\n  },\n\n  upsertGoogleUser(accessToken, refreshToken, profile, cb) {\n    var that = this;\n    return this.findOne(\n      {\n        'googleProvider.id': profile.id,\n      },\n      function(err, user) {\n        // no user was found, lets create a new one\n        if (!user) {\n          var newUser = new that({\n            fullName: profile.displayName,\n            email: profile.emails[0].value,\n            googleProvider: {\n              id: profile.id,\n              token: accessToken,\n            },\n          });\n\n          newUser.save(function(error, savedUser) {\n            if (error) {\n              console.log(error);\n            }\n            return cb(error, savedUser);\n          });\n        } else {\n          return cb(err, user);\n        }\n      },\n    );\n  },\n};\n\nmodule.exports = mongoose.model('DriverModel', DriverSchema);\n"],"file":"Driver.model.js"}