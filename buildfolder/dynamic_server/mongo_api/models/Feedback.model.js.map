{"version":3,"sources":["../../../../server/dynamic_server/mongo_api/models/Feedback.model.js"],"names":["FeedbackSchema","mongoose","Schema","id","type","Number","user_id","String","username","email","phone_number","category","location","_user","Types","ObjectId","ref","comment","images","Array","ticket_id","subject","createdDate","response","assigned_to","status","created_at","Date","now","updated_at","collection","timestamps","createdAt","updatedAt","statics","get","findOne","exec","then","user","err","Error","Promise","reject","getAllInterventions","callback","limit","find","getInterventionById","addIntervention","intervention","create","updateInterventionLocation","options","query","_id","update","findOneAndUpdate","updateInterventionComment","updateInterventionStatus","removeIntervention","remove","module","exports","model"],"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","sourcesContent":["import mongoose from 'mongoose';\n\n//const  SetUpInterventionMigrations = () =>{\n/****************************************************************/\n/******* @author saladin jake (Victor juwa) ********************************/\n/******* @desc Express js || ****************/\nlet FeedbackSchema = new mongoose.Schema(\n  {\n    id: {\n      type: Number,\n    },\n    user_id: {\n      type: String,\n    },\n    username: {\n      type: String,\n    },\n    email: {\n      type: String,\n    },\n    phone_number: {\n      type: String,\n    },\n    category: {\n      type: String,\n\n      enum: ['General Enquiries', 'Technical Support', 'Feedback'],\n      default: 'General Enquiries',\n    },\n\n    location: {\n      type: String,\n    },\n    _user: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'UserModel',\n    },\n    comment: {\n      type: String,\n      //required: true\n    },\n    images: {\n      type: Array,\n      //required: true\n    },\n\n    ticket_id: {\n      type: String,\n    },\n\n    subject: {\n      type: String,\n    },\n\n    createdDate: {\n      type: String,\n    },\n\n    response: {\n      type: String,\n    },\n    assigned_to: {\n      type: String,\n    },\n    // videos : {\n    //   type: Array,\n    //   required: true\n    // },\n    status: String,\n    created_at: {\n      type: Date,\n      default: Date.now,\n    },\n    updated_at: {\n      type: Date,\n      default: Date.now,\n    },\n  },\n  {\n    collection: 'intervention_collections',\n    timestamps: { createdAt: 'created_at', updatedAt: 'updated_at' },\n  },\n);\n\n/**\n * Methods\n */\n// InterventionSchema.method({\n\n// });\n\n/**\n * Statics\n */\nFeedbackSchema.statics = {\n  /**\n   * Get user\n   * @param {ObjectId} id - The objectId of user.\n   * @returns {Promise<User, APIError>}\n   */\n  get(id) {\n    return this.findOne(id)\n      .exec()\n      .then(user => {\n        if (user) {\n          return user;\n        }\n        const err = new Error('No such user exists!');\n        return Promise.reject(err);\n      });\n  },\n\n  //Not In Use but just here for example purposes becouse am using mongoose promise\n\n  // in order to use this you have to comment the code  mongoose.Promise = Promise; in db.js\n  // Get Interventions\n  getAllInterventions(callback, limit) {\n    return this.find(callback).limit(limit);\n  },\n\n  // Get Intervention\n  getInterventionById(id, callback) {\n    return this.findOne(id, callback);\n  },\n\n  // Add Intervention\n  addIntervention(intervention, callback) {\n    return this.create(intervention, callback);\n  },\n\n  // Update Intervention\n  updateInterventionLocation(id, intervention, options, callback) {\n    var query = { _id: id };\n    var update = {\n      location: intervention.location,\n    };\n    return this.findOneAndUpdate(query, update, options, callback);\n  },\n\n  updateInterventionComment(id, intervention, options, callback) {\n    var query = { _id: id };\n    var update = {\n      comment: intervention.comment,\n    };\n    return this.findOneAndUpdate(query, update, options, callback);\n  },\n\n  updateInterventionStatus(id, intervention, options, callback) {\n    var query = { _id: id };\n    var update = {\n      status: intervention.status,\n    };\n    return this.findOneAndUpdate(query, update, options, callback);\n  },\n\n  // Delete Intervention\n  removeIntervention(id, callback) {\n    var query = { _id: id };\n    return this.remove(query, callback);\n  },\n};\n\n// if(mongoose.models && mongoose.models.InterventionModel){\n//   return mongoose.models.InterventionModel;\n// }else{\n//   return  mongoose.model('InterventionModel', InterventionSchema);\n// }\n\n//}\n\n// const InterventionModel = SetUpInterventionMigrations();\n// export default InterventionModel;\n\nmodule.exports = mongoose.model('FeedbackModel', FeedbackSchema);\n"],"file":"Feedback.model.js"}