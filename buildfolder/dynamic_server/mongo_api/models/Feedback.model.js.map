{"version":3,"sources":["../../../../server/dynamic_server/mongo_api/models/Feedback.model.js"],"names":["FeedbackSchema","mongoose","Schema","id","type","Number","user_id","String","username","email","phone_number","category","location","_user","Types","ObjectId","ref","comment","images","Array","ticket_id","subject","createdDate","response","assigned_to","status","created_at","Date","now","updated_at","collection","timestamps","createdAt","updatedAt","statics","get","findOne","exec","then","user","err","Error","Promise","reject","getAllInterventions","callback","limit","find","getInterventionById","addIntervention","intervention","create","updateInterventionLocation","options","query","_id","update","findOneAndUpdate","updateInterventionComment","updateInterventionStatus","removeIntervention","remove","module","exports","model"],"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","sourcesContent":["import mongoose from  'mongoose';\n\n//const  SetUpInterventionMigrations = () =>{\n\nlet FeedbackSchema = new mongoose.Schema({\n        id :{\n         type: Number,\n          \n        },\n        user_id  : {\n          type: String,\n         \n        },\n        username:{\n          type:String,\n        },\n        email:{\n          type:String,\n        },\n        phone_number:{\n          type:String,\n        },\n        category:{\n          type:String,\n\n        enum: [\n               'General Enquiries', \n               'Technical Support', \n               'Feedback', \n        ], \n        default:'General Enquiries'\n          \n        },\n        \n        location  : {\n          type: String,\n          \n        },\n        _user: {\n           type: mongoose.Schema.Types.ObjectId, \n           ref: 'UserModel' , \n          \n         },\n        comment : {\n          type: String,\n          //required: true\n        },\n        images: {\n          type: Array,\n          //required: true\n        },\n\n        ticket_id:{\n          type:String\n        },\n\n        subject:{\n          type:String\n        },\n\n        createdDate:{\n          type: String,\n        },\n\n        response:{\n          type: String,\n        },\n         assigned_to: {\n          type: String,\n         },\n        // videos : {\n        //   type: Array,\n        //   required: true\n        // },\n        status  : String,\n        created_at : {\n          type: Date,\n          default: Date.now\n        },\n        updated_at :{\n          type: Date,\n          default: Date.now\n        }\n        \n      },{\n        collection: 'intervention_collections',\n        timestamps: { createdAt: 'created_at', updatedAt: 'updated_at' }\n      });\n\n\n    /**\n     * Methods\n     */\n    // InterventionSchema.method({\n      \n\n    // });\n\n    /**\n     * Statics\n     */\n    FeedbackSchema.statics = {\n        /**\n         * Get user\n         * @param {ObjectId} id - The objectId of user.\n         * @returns {Promise<User, APIError>}\n         */\n        get(id) {\n          return this.findOne(id)\n            .exec()\n            .then((user) => {\n              if (user) {\n                return user;\n              }\n              const err = new Error('No such user exists!');\n              return Promise.reject(err);\n            });\n        },\n\n      \n         //Not In Use but just here for example purposes becouse am using mongoose promise \n\n        // in order to use this you have to comment the code  mongoose.Promise = Promise; in db.js\n        // Get Interventions\n        getAllInterventions  (callback, limit)  {\n          return this.find(callback).limit(limit);\n        },\n\n        // Get Intervention\n        getInterventionById  (id, callback)  {\n          return this.findOne(id, callback);\n        },\n\n        // Add Intervention\n        addIntervention  (intervention, callback)  {\n          return this.create(intervention, callback);\n        },\n\n        // Update Intervention\n        updateInterventionLocation  (id, intervention, options, callback) {\n          var query = {_id: id};\n          var update = {\n            location: intervention.location,\n          }\n          return this.findOneAndUpdate(query, update, options, callback);\n        },\n\n\n        updateInterventionComment (id, intervention, options, callback) {\n          var query = {_id: id};\n          var update = {\n            comment: intervention.comment,\n          }\n          return this.findOneAndUpdate(query, update, options, callback);\n        },\n\n\n        updateInterventionStatus(id, intervention, options, callback) {\n          var query = {_id: id};\n          var update = {\n            status: intervention.status,\n          }\n          return this.findOneAndUpdate(query, update, options, callback);\n        },\n\n        // Delete Intervention\n        removeIntervention (id, callback)  {\n          var query = {_id: id};\n          return this.remove(query, callback);\n        },\n    };\n\n    // if(mongoose.models && mongoose.models.InterventionModel){\n    //   return mongoose.models.InterventionModel;\n    // }else{\n    //   return  mongoose.model('InterventionModel', InterventionSchema);\n    // }\n\n//}\n\n// const InterventionModel = SetUpInterventionMigrations();\n// export default InterventionModel;\n \n \n\nmodule.exports = mongoose.model('FeedbackModel', FeedbackSchema);\n\n\n\n\n\n"],"file":"Feedback.model.js"}