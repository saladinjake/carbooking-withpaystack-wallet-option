{"version":3,"sources":["../../../../server/dynamic_server/mongo_api/models/Quote.model.js"],"names":["Promise","require","QuoteSchema","mongoose","Schema","id","type","String","full_name","status","plan_id","quotation_id","email","amount","Number","has_updated","reference","createdDateOfQuotation","Date","createdDate","userId","collection","timestamps","createdAt","updatedAt","set","getters","virtuals","method","statics","addToWallet","data","callback","create","module","exports","model"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AADA,IAAMA,OAAO,0BAAGC,OAAO,CAAC,UAAD,CAAV,CAAb;AAEA,IAAMC,WAAW,0BAAG,IAAIC,qBAASC,MAAb,CAAoB;AACpCC,EAAAA,EAAE,EAAE;AACEC,IAAAA,IAAI,EAAEC,MADR;AAGE,eAAS;AAHX,GADgC;AAMpCC,EAAAA,SAAS,EAAE;AACPF,IAAAA,IAAI,EAAEC;AADC,GANyB;AAUpCE,EAAAA,MAAM,EAAE;AACNH,IAAAA,IAAI,EAAEC,MADA;AAEN,YAAM,CACN,YADM,EAEN,QAFM,EAGN,QAHM,EAIN,MAJM,CAFA;AAQN,eAAS;AARH,GAV4B;AAoBpCG,EAAAA,OAAO,EAAC;AACNJ,IAAAA,IAAI,EAACC,MADC;AAEN,eAAS;AAFH,GApB4B;AAwBpCI,EAAAA,YAAY,EAAC;AACZL,IAAAA,IAAI,EAACC,MADO;AAEX,eAAS;AAFE,GAxBuB;AA4BpCK,EAAAA,KAAK,EAAE;AACHN,IAAAA,IAAI,EAAEC;AADH,GA5B6B;AA+BpCM,EAAAA,MAAM,EAAE;AACJP,IAAAA,IAAI,EAAEQ;AADF,GA/B4B;AAkCpCC,EAAAA,WAAW,EAAC;AACVT,IAAAA,IAAI,EAACC,MADK;AAEV,eAAS;AAFC,GAlCwB;AAsCpCS,EAAAA,SAAS,EAAE;AACPV,IAAAA,IAAI,EAAEC;AADC,GAtCyB;AA0CpCU,EAAAA,sBAAsB,EAAC;AACrBX,IAAAA,IAAI,EAACY;AADgB,GA1Ca;AA8CpCC,EAAAA,WAAW,EAAC;AACRb,IAAAA,IAAI,EAAEY,IADE;AAER,eAAS,IAAIA,IAAJ;AAFD,GA9CwB;AAmDpCE,EAAAA,MAAM,EAAC;AACHd,IAAAA,IAAI,EAACC;AADF;AAnD6B,CAApB,EAsDlB;AACMc,EAAAA,UAAU,EAAE,iBADlB;AAEMC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,SAAS,EAAE,YAAb;AAA2BC,IAAAA,SAAS,EAAE;AAAtC;AAFlB,CAtDkB,CAAH,CAAjB;;AA6DAtB,WAAW,CAACuB,GAAZ,CAAgB,QAAhB,EAA0B;AAACC,EAAAA,OAAO,EAAE,IAAV;AAAgBC,EAAAA,QAAQ,EAAE;AAA1B,CAA1B;AAGM;;;;;AAGAzB,WAAW,CAAC0B,MAAZ,CAAmB,EAAnB;AAIA;;;;;AAGC1B,WAAW,CAAC2B,OAAZ,GAAsB;AAEhB;AACDC,EAAAA,WAHiB,uBAGHC,IAHG,EAGGC,QAHH,EAGc;AAAA;AAAA;AAC7B,WAAO,KAAKC,MAAL,CAAYF,IAAZ,EAAiBC,QAAjB,CAAP;AACD;AALgB,CAAtB;;AAWPE,MAAM,CAACC,OAAP,GAAiBhC,qBAASiC,KAAT,CAAe,YAAf,EAA6BlC,WAA7B,CAAjB","sourcesContent":["const Promise = require('bluebird');\r\nimport mongoose from  'mongoose';\r\nconst QuoteSchema = new mongoose.Schema({\r\n    id :{\r\n          type: String,\r\n         \r\n          default: \"0\"\r\n        },\r\n    full_name: {\r\n        type: String,    \r\n    },\r\n\r\n    status: {\r\n      type: String,\r\n      enum: [\r\n      'Successful',\r\n      'Failed',\r\n      'Unpaid',\r\n      'Paid'\r\n      ],\r\n      default: 'Unpaid',\r\n    },\r\n    plan_id:{\r\n      type:String,\r\n      default: 'No plan assigned yet'\r\n    },\r\n    quotation_id:{\r\n     type:String,\r\n      default: 'No quotation assigned yet'\r\n    },\r\n    email: {\r\n        type: String, \r\n    },\r\n    amount: {\r\n        type: Number, \r\n    },\r\n    has_updated:{\r\n      type:String,\r\n      default: 'No',\r\n    },\r\n    reference: {\r\n        type: String, \r\n       \r\n    },\r\n    createdDateOfQuotation:{\r\n      type:Date,\r\n    },\r\n\r\n    createdDate:{\r\n        type: Date,\r\n        default: new Date()\r\n    }, \r\n\r\n    userId:{\r\n        type:String\r\n    }\r\n},{\r\n        collection: 'pay_collections',\r\n        timestamps: { createdAt: 'created_at', updatedAt: 'updated_at' }\r\n});\r\n\r\n\r\n\r\nQuoteSchema.set('toJSON', {getters: true, virtuals: true});\r\n\r\n      \r\n      /**\r\n       * Methods\r\n       */\r\n      QuoteSchema.method({\r\n        \r\n      });\r\n\r\n      /**\r\n       * Statics\r\n       */\r\n       QuoteSchema.statics = {\r\n            \r\n             // Add Intervention\r\n            addToWallet  (data, callback)  {\r\n              return this.create(data,callback);\r\n            },\r\n\r\n    };\r\n\r\n\r\n\r\nmodule.exports = mongoose.model('QuoteModel', QuoteSchema);"],"file":"Quote.model.js"}