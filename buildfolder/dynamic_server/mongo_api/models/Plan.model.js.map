{"version":3,"sources":["../../../../server/dynamic_server/mongo_api/models/Plan.model.js"],"names":["Promise","require","PlanSchema","mongoose","Schema","id","type","Number","category","String","description","created_at","Date","now","updated_at","collection","timestamps","createdAt","updatedAt","set","getters","virtuals","statics","addPlanCategory","user","callback","create","get","findOne","exec","then","err","Error","reject","listPlan","skip","limit","find","sort","module","exports","model"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;AADA,IAAMA,OAAO,0BAAGC,OAAO,CAAC,UAAD,CAAV,CAAb;AAGA,IAAIC,UAAU,0BAAG,IAAIC,qBAASC,MAAb,CAAoB;AAC7BC,EAAAA,EAAE,EAAE;AACFC,IAAAA,IAAI,EAAEC,MADJ;AAGF,eAAS;AAHP,GADyB;AAM7BC,EAAAA,QAAQ,EAAC;AACPF,IAAAA,IAAI,EAAEG;AADC,GANoB;AAW7BC,EAAAA,WAAW,EAAC;AACVJ,IAAAA,IAAI,EAAEG;AADI,GAXiB;AAgB7BE,EAAAA,UAAU,EAAG;AACXL,IAAAA,IAAI,EAAEM,IADK;AAEX,eAASA,IAAI,CAACC;AAFH,GAhBgB;AAoB7BC,EAAAA,UAAU,EAAE;AACVR,IAAAA,IAAI,EAAEM,IADI;AAEV,eAASA,IAAI,CAACC;AAFJ;AApBiB,CAApB,EAyBT;AACAE,EAAAA,UAAU,EAAE,kBADZ;AAEAC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,SAAS,EAAE,YAAb;AAA2BC,IAAAA,SAAS,EAAE;AAAtC;AAFZ,CAzBS,CAAH,CAAd;;AA8BAhB,UAAU,CAACiB,GAAX,CAAe,QAAf,EAAyB;AAACC,EAAAA,OAAO,EAAE,IAAV;AAAgBC,EAAAA,QAAQ,EAAE;AAA1B,CAAzB;AAGM;;;;;AAGNnB,UAAU,CAACoB,OAAX,GAAqB;AACR;AACDC,EAAAA,eAFS,2BAEOC,IAFP,EAEaC,QAFb,EAEwB;AAAA;AAAA;AAC/B,WAAO,KAAKC,MAAL,CAAYF,IAAZ,EAAkBC,QAAlB,CAAP;AACD,GAJQ;AAMTE,EAAAA,GANS,eAMLtB,EANK,EAMD;AAAA;AAAA;AACN,WAAO,KAAKuB,OAAL,CAAavB,EAAb,EACJwB,IADI,GAEJC,IAFI,CAEC,UAACN,IAAD,EAAU;AAAA;AAAA;;AACd,UAAIA,IAAJ,EAAU;AAAA;AAAA;AACR,eAAOA,IAAP;AACD,OAFD;AAAA;AAAA;;AAGA,UAAMO,GAAG,0BAAG,IAAIC,KAAJ,CAAU,+BAAV,CAAH,CAAT;AAJc;AAKd,aAAOhC,OAAO,CAACiC,MAAR,CAAeF,GAAf,CAAP;AACD,KARI,CAAP;AASD,GAhBQ;AAmBTG,EAAAA,QAnBS,sBAmB+B;AAAA,6GAAJ,EAAI;AAAA,yBAA7BC,IAA6B;AAAA,QAA7BA,IAA6B,oDAAtB,CAAsB;AAAA,0BAAnBC,KAAmB;AAAA,QAAnBA,KAAmB,qDAAX,EAAW;;AAAA;AAAA;AACtC,WAAO,KAAKC,IAAL,GACJC,IADI,CACC;AAAE3B,MAAAA,UAAU,EAAE,CAAC;AAAf,KADD,EAEJwB,IAFI,CAEC,CAACA,IAFF,EAGJC,KAHI,CAGE,CAACA,KAHH,EAIJP,IAJI,EAAP;AAKD;AAzBQ,CAArB;;AAgCAU,MAAM,CAACC,OAAP,GAAiBrC,qBAASsC,KAAT,CAAe,WAAf,EAA4BvC,UAA5B,CAAjB","sourcesContent":["'use strict';\nconst Promise = require('bluebird');\nimport mongoose from  'mongoose';\n\nlet PlanSchema = new mongoose.Schema({\n        id :{\n          type: Number,\n         \n          default: 0\n        },\n        category:{\n          type: String,\n          \n        },\n        \n        description:{\n          type: String,\n          \n        },\n        \n        created_at : {\n          type: Date,\n          default: Date.now\n        },\n        updated_at :{\n          type: Date,\n          default: Date.now\n        },\n       \n      },{\n        collection: 'plan_collections',\n        timestamps: { createdAt: 'created_at', updatedAt: 'updated_at' }\n});\n\nPlanSchema.set('toJSON', {getters: true, virtuals: true});\n\n      \n      /**\n       * Statics\n       */\nPlanSchema.statics = {\n             // Add Intervention\n            addPlanCategory(user, callback)  {\n              return this.create(user, callback);\n            },\n\n            get(id) {\n              return this.findOne(id)\n                .exec()\n                .then((user) => {\n                  if (user) {\n                    return user;\n                  }\n                  const err = new Error('No such plan category exists!');\n                  return Promise.reject(err);\n                });\n            },\n\n            \n            listPlan({ skip = 0, limit = 50 } = {}) {\n              return this.find()\n                .sort({ created_at: -1 })\n                .skip(+skip)\n                .limit(+limit)\n                .exec();\n            },\n\n           \n      }\n\n     \n\nmodule.exports = mongoose.model('PlanModel', PlanSchema);\n\n\n"],"file":"Plan.model.js"}