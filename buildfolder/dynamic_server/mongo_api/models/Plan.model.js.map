{"version":3,"sources":["../../../../server/dynamic_server/mongo_api/models/Plan.model.js"],"names":["Promise","require","PlanSchema","mongoose","Schema","id","type","Number","category","String","description","created_at","Date","now","updated_at","collection","timestamps","createdAt","updatedAt","set","getters","virtuals","statics","addPlanCategory","user","callback","create","get","findOne","exec","then","err","Error","reject","listPlan","skip","limit","find","sort","module","exports","model"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;AADA,IAAMA,OAAO,0BAAGC,OAAO,CAAC,UAAD,CAAV,CAAb;;AAEA;;AACA;;AACA;AACA,IAAIC,UAAU,0BAAG,IAAIC,qBAASC,MAAb,CACf;AACEC,EAAAA,EAAE,EAAE;AACFC,IAAAA,IAAI,EAAEC,MADJ;AAGF,eAAS;AAHP,GADN;AAMEC,EAAAA,QAAQ,EAAE;AACRF,IAAAA,IAAI,EAAEG;AADE,GANZ;AAUEC,EAAAA,WAAW,EAAE;AACXJ,IAAAA,IAAI,EAAEG;AADK,GAVf;AAcEE,EAAAA,UAAU,EAAE;AACVL,IAAAA,IAAI,EAAEM,IADI;AAEV,eAASA,IAAI,CAACC;AAFJ,GAdd;AAkBEC,EAAAA,UAAU,EAAE;AACVR,IAAAA,IAAI,EAAEM,IADI;AAEV,eAASA,IAAI,CAACC;AAFJ;AAlBd,CADe,EAwBf;AACEE,EAAAA,UAAU,EAAE,kBADd;AAEEC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,SAAS,EAAE,YAAb;AAA2BC,IAAAA,SAAS,EAAE;AAAtC;AAFd,CAxBe,CAAH,CAAd;;AA8BAhB,UAAU,CAACiB,GAAX,CAAe,QAAf,EAAyB;AAAEC,EAAAA,OAAO,EAAE,IAAX;AAAiBC,EAAAA,QAAQ,EAAE;AAA3B,CAAzB;AAEA;AACA;AACA;;;AACAnB,UAAU,CAACoB,OAAX,GAAqB;AACnB;AACAC,EAAAA,eAFmB,2BAEHC,IAFG,EAEGC,QAFH,EAEa;AAAA;AAAA;AAC9B,WAAO,KAAKC,MAAL,CAAYF,IAAZ,EAAkBC,QAAlB,CAAP;AACD,GAJkB;AAMnBE,EAAAA,GANmB,eAMftB,EANe,EAMX;AAAA;AAAA;AACN,WAAO,KAAKuB,OAAL,CAAavB,EAAb,EACJwB,IADI,GAEJC,IAFI,CAEC,UAAAN,IAAI,EAAI;AAAA;AAAA;;AACZ,UAAIA,IAAJ,EAAU;AAAA;AAAA;AACR,eAAOA,IAAP;AACD,OAFD;AAAA;AAAA;;AAGA,UAAMO,GAAG,0BAAG,IAAIC,KAAJ,CAAU,+BAAV,CAAH,CAAT;AAJY;AAKZ,aAAOhC,OAAO,CAACiC,MAAR,CAAeF,GAAf,CAAP;AACD,KARI,CAAP;AASD,GAhBkB;AAkBnBG,EAAAA,QAlBmB,sBAkBqB;AAAA,6GAAJ,EAAI;AAAA,yBAA7BC,IAA6B;AAAA,QAA7BA,IAA6B,oDAAtB,CAAsB;AAAA,0BAAnBC,KAAmB;AAAA,QAAnBA,KAAmB,qDAAX,EAAW;;AAAA;AAAA;AACtC,WAAO,KAAKC,IAAL,GACJC,IADI,CACC;AAAE3B,MAAAA,UAAU,EAAE,CAAC;AAAf,KADD,EAEJwB,IAFI,CAEC,CAACA,IAFF,EAGJC,KAHI,CAGE,CAACA,KAHH,EAIJP,IAJI,EAAP;AAKD;AAxBkB,CAArB;;AA2BAU,MAAM,CAACC,OAAP,GAAiBrC,qBAASsC,KAAT,CAAe,WAAf,EAA4BvC,UAA5B,CAAjB","sourcesContent":["'use strict';\nconst Promise = require('bluebird');\nimport mongoose from 'mongoose';\n/****************************************************************/\n/******* @author saladin jake (Victor juwa) ********************************/\n/******* @desc Express js || ****************/\nlet PlanSchema = new mongoose.Schema(\n  {\n    id: {\n      type: Number,\n\n      default: 0,\n    },\n    category: {\n      type: String,\n    },\n\n    description: {\n      type: String,\n    },\n\n    created_at: {\n      type: Date,\n      default: Date.now,\n    },\n    updated_at: {\n      type: Date,\n      default: Date.now,\n    },\n  },\n  {\n    collection: 'plan_collections',\n    timestamps: { createdAt: 'created_at', updatedAt: 'updated_at' },\n  },\n);\n\nPlanSchema.set('toJSON', { getters: true, virtuals: true });\n\n/**\n * Statics\n */\nPlanSchema.statics = {\n  // Add Intervention\n  addPlanCategory(user, callback) {\n    return this.create(user, callback);\n  },\n\n  get(id) {\n    return this.findOne(id)\n      .exec()\n      .then(user => {\n        if (user) {\n          return user;\n        }\n        const err = new Error('No such plan category exists!');\n        return Promise.reject(err);\n      });\n  },\n\n  listPlan({ skip = 0, limit = 50 } = {}) {\n    return this.find()\n      .sort({ created_at: -1 })\n      .skip(+skip)\n      .limit(+limit)\n      .exec();\n  },\n};\n\nmodule.exports = mongoose.model('PlanModel', PlanSchema);\n"],"file":"Plan.model.js"}