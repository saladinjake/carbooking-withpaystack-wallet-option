{"version":3,"sources":["../../../../server/dynamic_server/mongo_api/models/CoperatePlan.model.js"],"names":["Promise","require","CoperatePlanSchema","mongoose","Schema","id","type","Number","plan_name","String","car_max","status","plan_categories","description","required","price","collection","timestamps","createdAt","updatedAt","set","getters","virtuals","statics","addCoperatePlan","user","callback","create","get","findOne","exec","then","plan","err","Error","reject","listPlan","skip","limit","find","sort","created_at","module","exports","model"],"mappings":"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","sourcesContent":["'use strict';\nconst Promise = require('bluebird');\nimport mongoose from  'mongoose';\n\nlet CoperatePlanSchema = new mongoose.Schema({\n       id :{\n          type: Number,\n         \n          default: 0\n        },\n\n        plan_name:{\n          type: String,\n          default:'Coperate'\n        },\n\n        car_max:{\n          type:String,\n          default:\"unlimited\"\n\n        },\n\n        status:{\n        type:String,\n        enum:[\n         \"Active\",\n         \"Dormant\",\n         \"Disabled\",\n         \"Suspended\"\n        ],\n        default: \"Active\"\n      },\n\n        plan_categories:{\n          type: String,\n          //enum:['Saver', 'Richly', 'Premium','weekend'],\n          default: 'Corporate Lite'\n        },\n\n        \n        description:{\n          type: String,\n          required:true\n        },\n\n\n        price:{\n          type: String,\n          required:true\n        },\n\n       \n      },{\n        collection: 'coperateplan_collections',\n        timestamps: { createdAt: 'created_at', updatedAt: 'updated_at' }\n});\n\nCoperatePlanSchema.set('toJSON', {getters: true, virtuals: true});\n\n\nCoperatePlanSchema.statics = {\n             // Add Intervention\n            addCoperatePlan(user, callback)  {\n              return this.create(user, callback);\n            },\n\n            get(id) {\n              return this.findOne(id)\n                .exec()\n                .then((plan) => {\n                  if (plan) {\n                    return plan;\n                  }\n                  const err = new Error('No such plan exists!');\n                  return Promise.reject(err);\n                });\n            },\n\n            \n            listPlan({ skip = 0, limit = 50 } = {}) {\n              return this.find()\n                .sort({ created_at: -1 })\n                .skip(+skip)\n                .limit(+limit)\n                .exec();\n            },\n\n       \n      }\n     \n\nmodule.exports = mongoose.model('CoperatePlanModel', CoperatePlanSchema);\n\n\n"],"file":"CoperatePlan.model.js"}