{"version":3,"sources":["../../../../server/dynamic_server/mongo_api/models/Quotation.model.js"],"names":["Promise","require","QuotationsSchema","mongoose","Schema","id","type","String","full_name","status","plan_id","quotation_id","email","amount","Number","reference","createdDate","Date","phone_number","userId","collection","timestamps","createdAt","updatedAt","set","getters","virtuals","method","statics","addToWallet","data","callback","create","module","exports","model"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AADA,IAAMA,OAAO,0BAAGC,OAAO,CAAC,UAAD,CAAV,CAAb;;AAEA;;AACA;;AACA;AACA,IAAMC,gBAAgB,0BAAG,IAAIC,qBAASC,MAAb,CACvB;AACEC,EAAAA,EAAE,EAAE;AACFC,IAAAA,IAAI,EAAEC,MADJ;AAGF,eAAS;AAHP,GADN;AAMEC,EAAAA,SAAS,EAAE;AACTF,IAAAA,IAAI,EAAEC;AADG,GANb;AAUEE,EAAAA,MAAM,EAAE;AACNH,IAAAA,IAAI,EAAEC,MADA;AAEN,YAAM,CAAC,YAAD,EAAe,QAAf,EAAyB,QAAzB,EAAmC,MAAnC,CAFA;AAGN,eAAS;AAHH,GAVV;AAeEG,EAAAA,OAAO,EAAE;AACPJ,IAAAA,IAAI,EAAEC,MADC;AAEP,eAAS;AAFF,GAfX;AAmBEI,EAAAA,YAAY,EAAE;AACZL,IAAAA,IAAI,EAAEC,MADM;AAEZ,eAAS;AAFG,GAnBhB;AAuBEK,EAAAA,KAAK,EAAE;AACLN,IAAAA,IAAI,EAAEC;AADD,GAvBT;AA0BEM,EAAAA,MAAM,EAAE;AACNP,IAAAA,IAAI,EAAEQ;AADA,GA1BV;AA6BEC,EAAAA,SAAS,EAAE;AACTT,IAAAA,IAAI,EAAEC;AADG,GA7Bb;AAiCES,EAAAA,WAAW,EAAE;AACXV,IAAAA,IAAI,EAAEW,IADK;AAEX,eAAS,IAAIA,IAAJ;AAFE,GAjCf;AAsCEC,EAAAA,YAAY,EAAE;AACZZ,IAAAA,IAAI,EAAEC;AADM,GAtChB;AA0CEY,EAAAA,MAAM,EAAE;AACNb,IAAAA,IAAI,EAAEC;AADA;AA1CV,CADuB,EA+CvB;AACEa,EAAAA,UAAU,EAAE,uBADd;AAEEC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,SAAS,EAAE,YAAb;AAA2BC,IAAAA,SAAS,EAAE;AAAtC;AAFd,CA/CuB,CAAH,CAAtB;;AAqDArB,gBAAgB,CAACsB,GAAjB,CAAqB,QAArB,EAA+B;AAAEC,EAAAA,OAAO,EAAE,IAAX;AAAiBC,EAAAA,QAAQ,EAAE;AAA3B,CAA/B;AAEA;AACA;AACA;;;AACAxB,gBAAgB,CAACyB,MAAjB,CAAwB,EAAxB;AAEA;AACA;AACA;;;AACAzB,gBAAgB,CAAC0B,OAAjB,GAA2B;AACzB;AACAC,EAAAA,WAFyB,uBAEbC,IAFa,EAEPC,QAFO,EAEG;AAAA;AAAA;AAC1B,WAAO,KAAKC,MAAL,CAAYF,IAAZ,EAAkBC,QAAlB,CAAP;AACD;AAJwB,CAA3B;;AAOAE,MAAM,CAACC,OAAP,GAAiB/B,qBAASgC,KAAT,CAAe,iBAAf,EAAkCjC,gBAAlC,CAAjB","sourcesContent":["const Promise = require('bluebird');\nimport mongoose from 'mongoose';\n/****************************************************************/\n/******* @author saladin jake (Victor juwa) ********************************/\n/******* @desc Express js || ****************/\nconst QuotationsSchema = new mongoose.Schema(\n  {\n    id: {\n      type: String,\n\n      default: '0',\n    },\n    full_name: {\n      type: String,\n    },\n\n    status: {\n      type: String,\n      enum: ['Successful', 'Failed', 'Unpaid', 'Paid'],\n      default: 'Successful',\n    },\n    plan_id: {\n      type: String,\n      default: 'No plan assigned yet',\n    },\n    quotation_id: {\n      type: String,\n      default: 'No quotation assigned yet',\n    },\n    email: {\n      type: String,\n    },\n    amount: {\n      type: Number,\n    },\n    reference: {\n      type: String,\n    },\n\n    createdDate: {\n      type: Date,\n      default: new Date(),\n    },\n\n    phone_number: {\n      type: String,\n    },\n\n    userId: {\n      type: String,\n    },\n  },\n  {\n    collection: 'abiquotes_collections',\n    timestamps: { createdAt: 'created_at', updatedAt: 'updated_at' },\n  },\n);\n\nQuotationsSchema.set('toJSON', { getters: true, virtuals: true });\n\n/**\n * Methods\n */\nQuotationsSchema.method({});\n\n/**\n * Statics\n */\nQuotationsSchema.statics = {\n  // Add Intervention\n  addToWallet(data, callback) {\n    return this.create(data, callback);\n  },\n};\n\nmodule.exports = mongoose.model('QuotationsModel', QuotationsSchema);\n"],"file":"Quotation.model.js"}