{"version":3,"sources":["../../../../server/dynamic_server/mongo_api/models/SOS.model.js"],"names":["SOSSchema","mongoose","Schema","id","type","Number","user_id","String","username","email","phone_number","plate_number","location","_user","Types","ObjectId","ref","address","media","Array","status","created_at","Date","now","updated_at","collection","timestamps","createdAt","updatedAt","statics","get","findOne","exec","then","user","err","Error","Promise","reject","getAllRedflags","callback","limit","find","getRedflagById","addRedflag","intervention","create","updateRedflagLocation","options","query","_id","update","findOneAndUpdate","updateRedflagComment","comment","updateRedflagStatus","removeRedflag","remove","module","exports","model"],"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","sourcesContent":["import mongoose from  'mongoose';\n\n// const  SetUpRedFlagsMigrations = () =>{\n      // import UserSchema from './User.model.js'\nlet SOSSchema = new mongoose.Schema({\n        id :{\n         type: Number,\n          \n        },\n        user_id  : {\n          type: String,\n         \n        },\n\n        username:{\n          type:String,\n        },\n        email:{\n          type:String,\n        },\n        phone_number:{\n          type:String,\n        },\n\n        plate_number:{\n          type:String\n        },\n        \n        location  : {\n          type: String,\n         \n        },\n        _user: {\n           type: mongoose.Schema.Types.ObjectId, \n           ref: 'UserModel' , \n          \n         },\n        address : {\n          type: String,\n          \n        },\n        media: {\n          type: Array,\n        },\n        status  : String,\n        created_at : {\n          type: Date,\n          default: Date.now\n        },\n        updated_at :{\n          type: Date,\n          default: Date.now\n        }\n        \n      },{\n        collection: 'soss_collections',\n        timestamps: { createdAt: 'created_at', updatedAt: 'updated_at' }\n      });\n       \n\n\n\n      /**\n       * Add your\n       * - pre-save hooks\n       * - validations\n       * - virtuals\n       */\n\n      /**\n       * Methods\n       */\n      \n\n      /**\n       * Statics\n       */\n      SOSSchema.statics = {\n          /**\n           * Get user\n           * @param {ObjectId} id - The objectId of user.\n           * @returns {Promise<User, APIError>}\n           */\n          get(id) {\n            return this.findOne(id)\n              .exec()\n              .then((user) => {\n                if (user) {\n                  return user;\n                }\n                const err = new Error('No such user exists!');\n                return Promise.reject(err);\n              });\n          },\n\n        \n           //Not In Use but just here for example purposes becouse am using mongoose promise \n\n          // in order to use this you have to comment the code  mongoose.Promise = Promise; in db.js\n          // Get Interventions\n          getAllRedflags  (callback, limit)  {\n            return this.find(callback).limit(limit);\n          },\n\n          // Get Intervention\n          getRedflagById  (id, callback)  {\n            return this.findOne(id, callback);\n          },\n\n          // Add Intervention\n          addRedflag  (intervention, callback)  {\n            return this.create(intervention, callback);\n          },\n\n          // Update Intervention\n          updateRedflagLocation  (id, intervention, options, callback) {\n            var query = {_id: id};\n            var update = {\n              location: intervention.location,\n            }\n            return this.findOneAndUpdate(query, update, options, callback);\n          },\n\n\n          updateRedflagComment (id, intervention, options, callback) {\n            var query = {_id: id};\n            var update = {\n              comment: intervention.comment,\n            }\n            return this.findOneAndUpdate(query, update, options, callback);\n          },\n\n\n          updateRedflagStatus(id, intervention, options, callback) {\n            var query = {_id: id};\n            var update = {\n              status: intervention.status,\n            }\n            return this.findOneAndUpdate(query, update, options, callback);\n          },\n\n          // Delete Intervention\n          removeRedflag (id, callback)  {\n            var query = {_id: id};\n            return this.remove(query, callback);\n          },\n      };\n\n \n\nmodule.exports = mongoose.model('SOSModel',SOSSchema);"],"file":"SOS.model.js"}