{"version":3,"sources":["../../../../server/dynamic_server/mongo_api/models/gatewayTransaction.model.js"],"names":["mongoose","require","crypto","moment","autoIncrement","uuidv4","gatewayTransactionSchema","Schema","transactionId","type","String","required","status","paymentDate","Date","amount","Number","authorizationCode","timestamps","method","transform","transformed","fields","forEach","field","module","exports","model"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,QAAQ,2BAAGC,OAAO,CAAC,UAAD,CAAV,CAAd;AACA,IAAMC,MAAM,2BAAGD,OAAO,CAAC,QAAD,CAAV,CAAZ;AACA,IAAME,MAAM,2BAAGF,OAAO,CAAC,iBAAD,CAAV,CAAZ;AACA,IAAMG,aAAa,2BAAGH,OAAO,CAAC,mCAAD,CAAV,CAAnB;AACA,IAAMI,MAAM,2BAAGJ,OAAO,CAAC,SAAD,CAAV,CAAZ;AAGA;;;;;AAIA,IAAMK,wBAAwB,2BAAG,IAAIN,QAAQ,CAACO,MAAb,CAAoB;AACnDC,EAAAA,aAAa,EAAE;AACbC,IAAAA,IAAI,EAAEC,MADO;AAEbC,IAAAA,QAAQ,EAAE;AAFG,GADoC;AAKnDC,EAAAA,MAAM,EAAE;AACNH,IAAAA,IAAI,EAAEC,MADA;AAENC,IAAAA,QAAQ,EAAE;AAFJ,GAL2C;AASnDE,EAAAA,WAAW,EAAE;AACXJ,IAAAA,IAAI,EAAEK,IADK;AAEXH,IAAAA,QAAQ,EAAE;AAFC,GATsC;AAanDI,EAAAA,MAAM,EAAE;AACNN,IAAAA,IAAI,EAAEO,MADA;AAEN,eAAS,CAFH;AAGNL,IAAAA,QAAQ,EAAE;AAHJ,GAb2C;AAkBnDM,EAAAA,iBAAiB,EAAE;AACjBR,IAAAA,IAAI,EAAEO,MADW;AAEjBL,IAAAA,QAAQ,EAAE;AAFO;AAlBgC,CAApB,EAsB9B;AACDO,EAAAA,UAAU,EAAE;AADX,CAtB8B,CAAH,CAA9B;AA0BA;;;;;AAGAZ,wBAAwB,CAACa,MAAzB,CAAgC;AAC9BC,EAAAA,SAD8B,uBAClB;AAAA;;AAAA;AACV,QAAMC,WAAW,2BAAG,EAAH,CAAjB;AACA,QAAMC,MAAM,2BAAG,CAAC,eAAD,EAAkB,QAAlB,EAA4B,aAA5B,EAA2C,QAA3C,EAAqD,mBAArD,CAAH,CAAZ;AAFU;AAIVA,IAAAA,MAAM,CAACC,OAAP,CAAe,UAACC,KAAD,EAAW;AAAA;AAAA;AACxBH,MAAAA,WAAW,CAACG,KAAD,CAAX,GAAqB,KAAI,CAACA,KAAD,CAAzB;AACD,KAFD;AAJU;AAQV,WAAOH,WAAP;AACD;AAV6B,CAAhC;;AAiBAI,MAAM,CAACC,OAAP,GAAiB1B,QAAQ,CAAC2B,KAAT,CAAe,oBAAf,EAAqCrB,wBAArC,CAAjB","sourcesContent":["const mongoose = require('mongoose');\nconst crypto = require('crypto');\nconst moment = require('moment-timezone');\nconst autoIncrement = require('../services/mongooseAutoIncrement');\nconst uuidv4 = require('uuid/v4');\n\n\n/**\n * Gateway Transaction Schema\n * @private\n */\nconst gatewayTransactionSchema = new mongoose.Schema({\n  transactionId: {\n    type: String,\n    required: true\n  },\n  status: {\n    type: String,\n    required: true\n  },\n  paymentDate: {\n    type: Date,\n    required: true\n  },\n  amount: {\n    type: Number,\n    default: 0,\n    required: true,\n  },\n  authorizationCode: {\n    type: Number,\n    required: true,\n  },\n}, {\n  timestamps: true,\n});\n\n/**\n * Methods\n */\ngatewayTransactionSchema.method({\n  transform() {\n    const transformed = {};\n    const fields = ['transactionId', 'status', 'paymentDate', 'amount', 'authorizationCode'];\n\n    fields.forEach((field) => {\n      transformed[field] = this[field];\n    });\n\n    return transformed;\n  },\n});\n\n\n\n\n\nmodule.exports = mongoose.model('GatewayTransaction', gatewayTransactionSchema);"],"file":"gatewayTransaction.model.js"}