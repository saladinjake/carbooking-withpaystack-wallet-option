{"version":3,"sources":["../../../../server/dynamic_server/mongo_api/models/PaystackSettings.model.js"],"names":["Promise","require","PaystackSettingSchema","mongoose","Schema","id","type","Number","api_mode","String","test_secret_key","test_public_key","live_secret_key","live_public_key","settings_type","collection","timestamps","createdAt","updatedAt","set","getters","virtuals","statics","addSettings","user","callback","create","module","exports","model"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;AADA,IAAMA,OAAO,2BAAGC,OAAO,CAAC,UAAD,CAAV,CAAb;AAGA,IAAIC,qBAAqB,2BAAG,IAAIC,qBAASC,MAAb,CAAoB;AACxCC,EAAAA,EAAE,EAAE;AACFC,IAAAA,IAAI,EAAEC,MADJ;AAGF,eAAS;AAHP,GADoC;AAMvCC,EAAAA,QAAQ,EAAC;AACRF,IAAAA,IAAI,EAAEG,MADE;AAER,eAAQ;AAFA,GAN8B;AAUxCC,EAAAA,eAAe,EAAC;AACdJ,IAAAA,IAAI,EAACG;AADS,GAVwB;AAaxCE,EAAAA,eAAe,EAAC;AACdL,IAAAA,IAAI,EAACG,MADS;AAEd,eAAQ;AAFM,GAbwB;AAiBxCG,EAAAA,eAAe,EAAC;AACdN,IAAAA,IAAI,EAACG,MADS;AAEd,eAAQ;AAFM,GAjBwB;AAqBxCI,EAAAA,eAAe,EAAC;AACdP,IAAAA,IAAI,EAACG,MADS;AAEd,eAAQ;AAFM,GArBwB;AAyBxCK,EAAAA,aAAa,EAAC;AACXR,IAAAA,IAAI,EAAEG,MADK;AAEX,eAAQ;AAFG;AAzB0B,CAApB,EA+BpB;AACAM,EAAAA,UAAU,EAAE,+BADZ;AAEAC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,SAAS,EAAE,YAAb;AAA2BC,IAAAA,SAAS,EAAE;AAAtC;AAFZ,CA/BoB,CAAH,CAAzB;;AAoCAhB,qBAAqB,CAACiB,GAAtB,CAA0B,QAA1B,EAAoC;AAACC,EAAAA,OAAO,EAAE,IAAV;AAAgBC,EAAAA,QAAQ,EAAE;AAA1B,CAApC;;AAEAnB,qBAAqB,CAACoB,OAAtB,GAAgC;AAEnB;AACDC,EAAAA,WAHoB,uBAGRC,IAHQ,EAGFC,QAHE,EAGS;AAAA;AAAA;AAC3B,WAAO,KAAKC,MAAL,CAAYF,IAAZ,EAAkBC,QAAlB,CAAP;AACD;AALmB,CAAhC;;AAUAE,MAAM,CAACC,OAAP,GAAiBzB,qBAAS0B,KAAT,CAAe,sBAAf,EAAuC3B,qBAAvC,CAAjB","sourcesContent":["'use strict';\r\nconst Promise = require('bluebird');\r\nimport mongoose from  'mongoose';\r\n\r\nlet PaystackSettingSchema = new mongoose.Schema({\r\n        id :{\r\n          type: Number,\r\n         \r\n          default: 0\r\n        },\r\n         api_mode:{\r\n          type: String,\r\n          default:\"test\"\r\n        },\r\n        test_secret_key:{\r\n          type:String\r\n        },\r\n        test_public_key:{\r\n          type:String,\r\n          default:\"NO KEY SET YET\"\r\n        },\r\n        live_secret_key:{\r\n          type:String,\r\n          default:\"NO KEY SET YET\"\r\n        },\r\n        live_public_key:{\r\n          type:String,\r\n          default:\"NO KEY SET YET\"\r\n        },\r\n        settings_type:{\r\n           type: String,\r\n           default:\"paystack\"\r\n        }\r\n        \r\n        \r\n      },{\r\n        collection: 'paystacksettingVC_collections',\r\n        timestamps: { createdAt: 'created_at', updatedAt: 'updated_at' }\r\n});\r\n\r\nPaystackSettingSchema.set('toJSON', {getters: true, virtuals: true});\r\n\r\nPaystackSettingSchema.statics = {\r\n             \r\n             // Add Intervention\r\n            addSettings(user, callback)  {\r\n              return this.create(user, callback);\r\n            },\r\n\r\n     \r\n};\r\n\r\nmodule.exports = mongoose.model('PaystackSettingModel', PaystackSettingSchema);\r\n\r\n\r\n"],"file":"PaystackSettings.model.js"}