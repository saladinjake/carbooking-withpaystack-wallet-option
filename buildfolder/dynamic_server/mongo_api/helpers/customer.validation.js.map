{"version":3,"sources":["../../../../server/dynamic_server/mongo_api/helpers/customer.validation.js"],"names":["Joi","require","Customer","module","exports","walletTransfer","body","amount","number","positive","precision","min","max","required","destinationAccountNumber","walletDeposit","card","string","creditCard","listCustomers","query","page","perPage","name","email","createCustomer","password","replaceCustomer","params","updateCustomer"],"mappings":"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","sourcesContent":["const Joi = require('joi');\nconst Customer = require('../models/User.model');\n/****************************************************************/\n/******* @author saladin jake (Victor juwa) ********************************/\n/******* @desc Express js || ****************/\nmodule.exports = {\n  // POST /v1/ewallet/transfer\n  walletTransfer: {\n    body: {\n      amount: Joi.number()\n        .positive()\n        .precision(2)\n        .min(10)\n        .max(50000)\n        .required(),\n      destinationAccountNumber: Joi.number().required(),\n    },\n  },\n\n  // POST /v1/ewallet/deposit\n  walletDeposit: {\n    body: {\n      amount: Joi.number()\n        .positive()\n        .precision(2)\n        .min(10)\n        .max(50000)\n        .required(),\n      card: Joi.string()\n        .creditCard()\n        .required(),\n    },\n  },\n\n  // GET /v1/customers\n  listCustomers: {\n    query: {\n      page: Joi.number().min(1),\n      perPage: Joi.number()\n        .min(1)\n        .max(100),\n      name: Joi.string(),\n      email: Joi.string(),\n      //role: Joi.string().valid(Customer.roles),\n    },\n  },\n\n  // POST /v1/customers\n  createCustomer: {\n    body: {\n      email: Joi.string()\n        .email()\n        .required(),\n      password: Joi.string()\n        .min(6)\n        .max(128)\n        .required(),\n      name: Joi.string().max(128),\n      //role: Joi.string().valid(Customer.roles),\n    },\n  },\n\n  // PUT /v1/customers/:customerId\n  replaceCustomer: {\n    body: {\n      email: Joi.string()\n        .email()\n        .required(),\n      password: Joi.string()\n        .min(6)\n        .max(128)\n        .required(),\n      name: Joi.string().max(128),\n      // role: Joi.string().valid(Customer.roles),\n    },\n    params: {\n      // customerId: Joi.string().regex(/^[a-fA-F0-9]{24}$/).required(),\n    },\n  },\n\n  // PATCH /v1/customers/:customerId\n  updateCustomer: {\n    body: {\n      email: Joi.string().email(),\n      password: Joi.string()\n        .min(6)\n        .max(128),\n      name: Joi.string().max(128),\n      // role: Joi.string().valid(Customer.roles),\n    },\n    params: {\n      // customerId: Joi.string().regex(/^[a-fA-F0-9]{24}$/).required(),\n    },\n  },\n};\n"],"file":"customer.validation.js"}