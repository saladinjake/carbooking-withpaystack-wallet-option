{"version":3,"sources":["../../../../server/dynamic_server/mongo_api/helpers/customer.validation.js"],"names":["Joi","require","Customer","module","exports","walletTransfer","body","amount","number","positive","precision","min","max","required","destinationAccountNumber","walletDeposit","card","string","creditCard","listCustomers","query","page","perPage","name","email","createCustomer","password","replaceCustomer","params","updateCustomer"],"mappings":"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","sourcesContent":["const Joi = require('joi');\nconst Customer = require('../models/User.model');\n\nmodule.exports = {\n\n  // POST /v1/ewallet/transfer\n  walletTransfer: {\n    body: {\n      amount: Joi.number().positive().precision(2).min(10).max(50000).required(),\n      destinationAccountNumber: Joi.number().required()\n    },\n  },\n\n  // POST /v1/ewallet/deposit\n  walletDeposit: {\n    body: {\n      amount: Joi.number().positive().precision(2).min(10).max(50000).required(),\n      card: Joi.string().creditCard().required()\n    },\n  },\n\n  // GET /v1/customers\n  listCustomers: {\n    query: {\n      page: Joi.number().min(1),\n      perPage: Joi.number().min(1).max(100),\n      name: Joi.string(),\n      email: Joi.string(),\n      //role: Joi.string().valid(Customer.roles),\n    },\n  },\n\n  // POST /v1/customers\n  createCustomer: {\n    body: {\n      email: Joi.string().email().required(),\n      password: Joi.string().min(6).max(128).required(),\n      name: Joi.string().max(128),\n      //role: Joi.string().valid(Customer.roles),\n    },\n  },\n\n  // PUT /v1/customers/:customerId\n  replaceCustomer: {\n    body: {\n      email: Joi.string().email().required(),\n      password: Joi.string().min(6).max(128).required(),\n      name: Joi.string().max(128),\n      // role: Joi.string().valid(Customer.roles),\n    },\n    params: {\n      // customerId: Joi.string().regex(/^[a-fA-F0-9]{24}$/).required(),\n    },\n  },\n\n  // PATCH /v1/customers/:customerId\n  updateCustomer: {\n    body: {\n      email: Joi.string().email(),\n      password: Joi.string().min(6).max(128),\n      name: Joi.string().max(128),\n      // role: Joi.string().valid(Customer.roles),\n    },\n    params: {\n      // customerId: Joi.string().regex(/^[a-fA-F0-9]{24}$/).required(),\n    },\n  },\n};\n"],"file":"customer.validation.js"}