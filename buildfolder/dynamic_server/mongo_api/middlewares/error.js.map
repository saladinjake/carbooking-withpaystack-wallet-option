{"version":3,"sources":["../../../../server/dynamic_server/mongo_api/middlewares/error.js"],"names":["httpStatus","require","expressValidation","APIError","env","handler","err","req","res","next","response","code","status","message","errors","stack","json","end","exports","converter","convertedError","ValidationError","notFound","NOT_FOUND"],"mappings":"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","sourcesContent":["const httpStatus = require('http-status');\nconst expressValidation = require('express-validation');\nconst APIError = require('../utils/APIError');\nconst { env } = require('../config/vars');\n\n/**\n * Error handler. Send stacktrace only during development\n * @public\n */\nconst handler = (err, req, res, next) => {\n  const response = {\n    code: err.status,\n    message: err.message || httpStatus[err.status],\n    errors: err.errors,\n    stack: err.stack,\n  };\n\n  if (env !== 'development') {\n    delete response.stack;\n  }\n\n  res.status(err.status);\n  res.json(response);\n  res.end();\n};\nexports.handler = handler;\n\n/**\n * If error is not an instanceOf APIError, convert it.\n * @public\n */\nexports.converter = (err, req, res, next) => {\n  let convertedError = err;\n\n  if (err instanceof expressValidation.ValidationError) {\n    convertedError = new APIError({\n      message: 'Erro de Validação',\n      errors: err.errors,\n      status: err.status,\n      stack: err.stack,\n    });\n  } else if (!(err instanceof APIError)) {\n    convertedError = new APIError({\n      message: err.message,\n      status: err.status,\n      stack: err.stack,\n    });\n  }\n\n  return handler(convertedError, req, res);\n};\n\n/**\n * Catch 404 and forward to error handler\n * @public\n */\nexports.notFound = (req, res, next) => {\n  const err = new APIError({\n    message: 'Not found',\n    status: httpStatus.NOT_FOUND,\n  });\n  return handler(err, req, res);\n};\n"],"file":"error.js"}