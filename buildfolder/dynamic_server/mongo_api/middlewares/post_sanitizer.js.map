{"version":3,"sources":["../../../../server/dynamic_server/mongo_api/middlewares/post_sanitizer.js"],"names":["locationRegex","validIdRegex","SubmitEventValidator","request","response","next","body","location","images","subject","comment","reportType","length","ErrorHandler","sendError","imageToSubmit","test","status","params","id","console","log"],"mappingsaAAa,2BAAG,sDAAH,CAAnB;AACA,IAAMC,YAAY,2BAAG,YAAH,CAAlB;;IACqBC,oB;;;;;;;WACnB,wBAAsBC,OAAtB,EAA+BC,QAA/B,EAAyCC,IAAzC,EAA+C;AAAA;;AAC7C,yCAA2DF,OAAO,CAACG,IAAnE;AAAA,UAAQC,QAAR,QAAQA,QAAR;AAAA,UAAkBC,MAAlB,QAAkBA,MAAlB;AAAA,UAA0BC,OAA1B,QAA0BA,OAA1B;AAAA,UAAmCC,OAAnC,QAAmCA,OAAnC;AAAA,UAA4CC,UAA5C,QAA4CA,UAA5C;;AAD6C;;AAG7C,UAAI,EAAE,2BAAAA,UAAU,gCAAIA,UAAU,CAACC,MAAf,CAAZ,CAAJ,EAAwC;AAAA;AAAA;AACtC,eAAOC,4BAAaC,SAAb,CAAuBV,QAAvB,EAAiC,2BAAjC,CAAP;AACD,OAFD;AAAA;AAAA,OAH6C,CAO7C;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAIW,aAAa,2BAAG,UAAH,CAAjB;AAb6C;;AAc7C,UAAI,CAACP,MAAL,EAAa;AAAA;AAAA;AACXO,QAAAA,aAAa,GAAG,kBAAhB,CADW,CAEX;AACD,OAHD;AAAA;AAAA;;AAd6C;;AAoB7C,UAAI,CAACN,OAAL,EAAc;AAAA;AAAA;AACZ,eAAOI,4BAAaC,SAAb,CAAuBV,QAAvB,EAAiC,wBAAjC,CAAP;AACD,OAFD;AAAA;AAAA;;AApB6C;;AAyB7C,UAAI,CAACM,OAAL,EAAc;AAAA;AAAA;AACZ,eAAOG,4BAAaC,SAAb,CAAuBV,QAAvB,EAAiC,wBAAjC,CAAP;AACD,OAFD;AAAA;AAAA;;AAzB6C;;AA6B7C,UAAI,OAAOM,OAAP,KAAmB,QAAvB,EAAiC;AAAA;AAAA;AAC/B,eAAOG,4BAAaC,SAAb,CAAuBV,QAAvB,EAAiC,wCAAjC,CAAP;AACD,OAFD;AAAA;AAAA;;AA7B6C;AAgC7C,aAAOC,IAAI,EAAX;AACD;;;WAED,0BAAwBF,OAAxB,EAAiCC,QAAjC,EAA2CC,IAA3C,EAAiD;AAAA;;AAC/C,2CAAqBF,OAAO,CAACG,IAA7B;AAAA,UAAQC,QAAR,SAAQA,QAAR;;AAD+C;;AAE/C,UAAI,EAAE,2BAAAA,QAAQ,gCAAIA,QAAQ,CAACK,MAAb,CAAV,CAAJ,EAAoC;AAAA;AAAA;AAClC,eAAOC,4BAAaC,SAAb,CAAuBV,QAAvB,EAAiC,2BAAjC,CAAP;AACD,OAFD;AAAA;AAAA;;AAF+C;;AAK/C,UAAI,kCAAOG,QAAP,KAAoB,QAApB,gCAAgC,CAACP,aAAa,CAACgB,IAAd,CAAmBT,QAAnB,CAAjC,CAAJ,EAAmE;AAAA;AAAA;AACjE,eAAOM,4BAAaC,SAAb,CAAuBV,QAAvB,EAAiC,gDAAjC,CAAP;AACD,OAFD;AAAA;AAAA;;AAL+C;AAQ/C,aAAOC,IAAI,EAAX;AACD;;;WAED,wBAAsBF,OAAtB,EAA+BC,QAA/B,EAAyCC,IAAzC,EAA+C;AAAA;;AAC7C,2CAAmBF,OAAO,CAACG,IAA3B;AAAA,UAAQW,MAAR,SAAQA,MAAR;;AAD6C;;AAE7C,UAAI,EAAE,4BAAAA,MAAM,iCAAIA,MAAM,CAACL,MAAX,CAAR,CAAJ,EAAgC;AAAA;AAAA;AAC9B,eAAOC,4BAAaC,SAAb,CAAuBV,QAAvB,EAAiC,oBAAjC,CAAP;AACD,OAFD;AAAA;AAAA;;AAF6C;;AAK7C,UACE,mCAAOa,MAAP,KAAkB,QAAlB,KACC,4BAAAA,MAAM,KAAK,qBAAX,iCAAoCA,MAAM,KAAK,UAA/C,iCAA6DA,MAAM,KAAK,UAAxE,CAFH,EAGE;AAAA;AAAA;AACA,eAAOJ,4BAAaC,SAAb,CACLV,QADK,EAEL,8FAFK,CAAP;AAID,OARD;AAAA;AAAA;;AAL6C;AAc7C,aAAOC,IAAI,EAAX;AACD;;;WAED,yBAAuBF,OAAvB,EAAgCC,QAAhC,EAA0CC,IAA1C,EAAgD;AAAA;;AAC9C,2CAAoBF,OAAO,CAACG,IAA5B;AAAA,UAAQI,OAAR,SAAQA,OAAR;;AAD8C;;AAE9C,UAAI,CAACA,OAAL,EAAc;AAAA;AAAA;AACZ,eAAOG,4BAAaC,SAAb,CAAuBV,QAAvB,EAAiC,wBAAjC,CAAP;AACD,OAFD;AAAA;AAAA;;AAF8C;;AAM9C,UAAI,OAAOM,OAAP,KAAmB,QAAvB,EAAiC;AAAA;AAAA;AAC/B,eAAOG,4BAAaC,SAAb,CAAuBV,QAAvB,EAAiC,wCAAjC,CAAP;AACD,OAFD;AAAA;AAAA;;AAN8C;AAS9C,aAAOC,IAAI,EAAX;AACD;;;WAED,oBAAkBF,OAAlB,EAA2BC,QAA3B,EAAqCC,IAArC,EAA2C;AAAA;AAAA;;AACzC,UAAI,CAACJ,YAAY,CAACe,IAAb,CAAkBb,OAAO,CAACe,MAAR,CAAeC,EAAjC,CAAL,EAA2C;AAAA;AAAA;AACzCC,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AADyC;AAEzC,eAAOR,4BAAaC,SAAb,CAAuBV,QAAvB,EAAiC,8BAAjC,CAAP;AACD,OAHD;AAAA;AAAA;;AADyC;AAKzC,aAAOC,IAAI,EAAX;AACD","sourcesContent":["/* eslint-disable no-use-before-define */\n/* eslint-disable camelcase */\n/* eslint-disable no-plusplus */\n/* eslint-disable no-mixed-operators */\nimport { ErrorHandler } from '../helpers/error_handler';\n/****************************************************************/\n/******* @author saladin jake (Victor juwa) ********************************/\n/******* @desc Express js || ****************/\nconst locationRegex = /^([-+]?\\d{1,2}([.]\\d+)?),\\s*([-+]?\\d{1,3}([.]\\d+)?)$/;\nconst validIdRegex = /^[1-9]{1,}/;\nexport default class SubmitEventValidator {\n  static validateSubmit(request, response, next) {\n    const { location, images, subject, comment, reportType } = request.body;\n\n    if (!(reportType && reportType.length)) {\n      return ErrorHandler.sendError(response, 'Category must be a string');\n    }\n\n    // if (!(location && location.length)) {\n    //   return ErrorHandler.sendError(response, 'Location must be a string');\n    // }\n    // if (typeof location !== 'string' || !locationRegex.test(location)) {\n    //   return ErrorHandler.sendError(response, 'location does not match a Lat Long coordinates');\n    // }\n    var imageToSubmit = 'no image';\n    if (!images) {\n      imageToSubmit = 'no image preview';\n      //return ErrorHandler.sendError(response, 'Please enter an image url');\n    }\n\n    \n    if (!subject) {\n      return ErrorHandler.sendError(response, 'Please enter a subject');\n    }\n    \n\n    if (!comment) {\n      return ErrorHandler.sendError(response, 'Please enter a comment');\n    }\n\n    if (typeof comment !== 'string') {\n      return ErrorHandler.sendError(response, 'comment must be a string of characters');\n    }\n    return next();\n  }\n\n  static validateLocation(request, response, next) {\n    const { location } = request.body;\n    if (!(location && location.length)) {\n      return ErrorHandler.sendError(response, 'Location must be a string');\n    }\n    if (typeof location !== 'string' || !locationRegex.test(location)) {\n      return ErrorHandler.sendError(response, 'location does not match a Lat Long coordinates');\n    }\n    return next();\n  }\n\n  static validateStatus(request, response, next) {\n    const { status } = request.body;\n    if (!(status && status.length)) {\n      return ErrorHandler.sendError(response, 'Status is required');\n    }\n    if (\n      typeof status !== 'string' ||\n      (status !== 'under investigation' && status !== 'resolved' && status !== 'rejected')\n    ) {\n      return ErrorHandler.sendError(\n        response,\n        'Invalid status, status must be a string containing under investigation, resolved or rejected',\n      );\n    }\n    return next();\n  }\n\n  static validateComment(request, response, next) {\n    const { comment } = request.body;\n    if (!comment) {\n      return ErrorHandler.sendError(response, 'Please enter a comment');\n    }\n\n    if (typeof comment !== 'string') {\n      return ErrorHandler.sendError(response, 'comment must be a string of characters');\n    }\n    return next();\n  }\n\n  static validateId(request, response, next) {\n    if (!validIdRegex.test(request.params.id)) {\n      console.log('error validating id');\n      return ErrorHandler.sendError(response, 'The given id is not a number');\n    }\n    return next();\n  }\n}\n"],"file":"post_sanitizer.js"}