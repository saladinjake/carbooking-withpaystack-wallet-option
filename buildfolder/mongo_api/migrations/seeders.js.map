{"version":3,"sources":["../../../server/mongo_api/migrations/seeders.js"],"names":["MongooseDatabase","getInstance","db","Seeders","inspection","driveTest","setTimeout","InspectionModel","addInspection","err","collection","console","log","DriveTestModel","addTest","earnings","EarningsModel","addEarnings","role","RolesAndPreviledgesModel","addRole","paystack","google","facebook","instagram","sendgrid","aws","PayStackSettingsModel","addSettings","FacebookSettingsModel","GoogleSettingsModel","InstagramSettingsModel","AWSSettingsModel","SendgridSettingsModel","dataUsers","UserModel","addUser","DriversModel","PartnerModel","cars","CarModel","addCars","Plan","PlanModel","addPlanCategory","indivPlan","IndividualPlanModel","addIndividualPlan","copPlan","CoperatePlanModel","addCoperatePlan","UsersPlanModel","addPlanToUser","itinerary","ItineraryModel","addItinerary","dataInterventions","id","findOne","exec","then","user","NewIntervention","SOSModel","_user","_id","save","savedIntervention","e","dataFaqs","FAQModel","addFaq","data","NotificationModel","addNotification","MechModel","addMech","WalletModel","addToWallet","QuoteModel","PaymentsModel","dataRedflags","NewFeedbackModel","FeedbackModel","savedRedflag","deleteMany","table","forEach","mongoose","connection","createCollection","coll"],"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","sourcesContent":["import mongoose from 'mongoose';\nimport UserModel from '../models/User.model';\nimport PartnerModel from '../models/Partners.model';\nimport DriversModel from '../models/Driver.model';\nimport SOSModel from '../models/SOS.model';\nimport FeedbackModel from '../models/Feedback.model';\nimport CarModel from '../models/Cars.model';\nimport PlanModel from '../models/Plan.model';\nimport IndividualPlanModel from '../models/IndividualPlan.model';\nimport CoperatePlanModel from '../models/CoperatePlan.model';\nimport UsersPlanModel from '../models/UserPlan.model';\nimport ItineraryModel from '../models/Itinerary.model';\nimport FAQModel from '../models/FAQ.model';\nimport NotificationModel from '../models/Notification.model';\nimport MechModel from '../models/Repairs.model';\nimport PayStackSettingsModel from '../models/PaystackSettings.model';\nimport FacebookSettingsModel from '../models/FacebookSettings.model';\nimport GoogleSettingsModel from '../models/GmailSettings.model';\nimport InstagramSettingsModel from '../models/InstagramSettings.model';\nimport AWSSettingsModel from '../models/AWS3BucketSettings.model';\nimport SendgridSettingsModel from '../models/SendgridEmailSettings.model';\nimport WalletModel from '../models/Wallet.model';\nimport PaymentsModel from '../models/Payments.model';\nimport QuotationsModel from '../models/Quotation.model';\nimport QuoteModel from '../models/Quote.model';\n\nimport EarningsModel from '../models/EarningsModel';\n\nimport InspectionModel from '../models/Inspection.model';\nimport DriveTestModel from '../models/DriveTest.model';\n\nimport RolesAndPreviledgesModel from '../models/RolesAndPreviledges.model';\nimport db from '../models/db';\n\nconst MongooseDatabase = db.getInstance() || new db();\n\nclass Seeders {\n  seedInspectionAndDriveTest(inspection, driveTest) {\n    setTimeout(() => {\n      InspectionModel.addInspection(inspection, (err, collection) => {\n        if (err) {\n          console.log('could not create inspection settings');\n        }\n        console.log(collection + 'inspection has been added');\n      });\n\n      DriveTestModel.addTest(driveTest, (err, collection) => {\n        if (err) {\n          console.log('could not add drive test seed settings');\n        }\n        console.log(collection + 'drive test has been added');\n      });\n    }, 24000);\n  }\n\n  seedEarnings(earnings) {\n    setTimeout(() => {\n      EarningsModel.addEarnings(earnings, (err, collection) => {\n        if (err) {\n          console.log('could not create earnings');\n          console.log(err);\n        }\n        console.log(collection + 'earning has been added');\n      });\n    }, 24000);\n  }\n\n  seedRole(role) {\n    setTimeout(() => {\n      RolesAndPreviledgesModel.addRole(role, (err, collection) => {\n        if (err) {\n          console.log('could not create roles');\n          console.log(err);\n        }\n        console.log(collection + 'roles has been added');\n      });\n    }, 22000);\n  }\n\n  seed3rdPartySettings(paystack, google, facebook, instagram, sendgrid, aws) {\n    setTimeout(() => {\n      PayStackSettingsModel.addSettings(paystack, (err, collection) => {\n        if (err) {\n          console.log('could not create paystack settings');\n        }\n        console.log(collection + 'paystack settings has been added');\n      });\n\n      FacebookSettingsModel.addSettings(facebook, (err, collection) => {\n        if (err) {\n          console.log('could not facebook settings');\n        }\n        console.log(collection + 'facebook has been added');\n      });\n\n      GoogleSettingsModel.addSettings(google, (err, collection) => {\n        if (err) {\n          console.log('could not google');\n        }\n        console.log(collection + 'google has been added');\n      });\n\n      InstagramSettingsModel.addSettings(instagram, (err, collection) => {\n        if (err) {\n          console.log('could not create instagram');\n        }\n        console.log(collection + 'instagram settings has been added');\n      });\n\n      AWSSettingsModel.addSettings(aws, (err, collection) => {\n        if (err) {\n          console.log('could not create aws settings');\n        }\n        console.log(collection + 'has been added');\n      });\n\n      SendgridSettingsModel.addSettings(sendgrid, (err, collection) => {\n        if (err) {\n          console.log('could not create send grid settings');\n        }\n        console.log(collection + 'send grid has been added');\n      });\n    }, 17000);\n  }\n\n  seedUsers(dataUsers) {\n    setTimeout(() => {\n      UserModel.addUser(dataUsers, (err, collection) => {\n        if (err) {\n          console.log('could not create user');\n        }\n        console.log(collection + 'has been added');\n      });\n    }, 3000);\n  }\n\n  seedDrivers(dataUsers) {\n    setTimeout(() => {\n      DriversModel.addUser(dataUsers, (err, collection) => {\n        if (err) {\n          console.log('could not create driver');\n        }\n        console.log(collection + 'driver has been added');\n      });\n    }, 15000);\n  }\n\n  seedPartners(dataUsers) {\n    setTimeout(() => {\n      PartnerModel.addUser(dataUsers, (err, collection) => {\n        if (err) {\n          console.log('could not create partner');\n        }\n        console.log(collection + 'partner has been added');\n      });\n    }, 19000);\n  }\n\n  seedCars(cars) {\n    setTimeout(() => {\n      CarModel.addCars(cars, (err, collection) => {\n        if (err) {\n          console.log(err);\n          console.log('could not create car');\n        }\n        console.log(collection + ' for cars has been added');\n      });\n    }, 11000);\n  }\n\n  seedPlanCategory(Plan) {\n    setTimeout(() => {\n      PlanModel.addPlanCategory(Plan, (err, collection) => {\n        if (err) {\n          console.log('could not create  plan category');\n        }\n        console.log(collection + ' for plans category has been added');\n      });\n    }, 17000);\n  }\n\n  seedIndividualPlans(indivPlan) {\n    setTimeout(() => {\n      IndividualPlanModel.addIndividualPlan(indivPlan, (err, collection) => {\n        if (err) {\n          console.log('could not create individual plan');\n        }\n        console.log(collection + ' for individual plans has been added');\n      });\n    }, 15000);\n  }\n\n  seedCoperatePlans(copPlan) {\n    setTimeout(() => {\n      CoperatePlanModel.addCoperatePlan(copPlan, (err, collection) => {\n        if (err) {\n          console.log('could not create coperate plan');\n        }\n        console.log(collection + ' for coperate plans has been added');\n      });\n    }, 19000);\n  }\n\n  seedUsersPlan(copPlan) {\n    setTimeout(() => {\n      UsersPlanModel.addPlanToUser(copPlan, (err, collection) => {\n        if (err) {\n          console.log('could not create user  plan');\n        }\n        console.log(collection + ' for **** user plans has been added');\n      });\n    }, 13000);\n  }\n\n  seedItinerary(itinerary) {\n    setTimeout(() => {\n      ItineraryModel.addItinerary(itinerary, (err, collection) => {\n        if (err) {\n          console.log('could not create user  itinerary');\n        }\n        console.log(collection + ' for **** user itinerary has been added');\n      });\n    }, 4000);\n  }\n\n  seedSOSRequestByUser(dataInterventions, id) {\n    // perform seeding\n    setTimeout(() => {\n      UserModel.findOne({ id: id })\n        .exec()\n        .then(user => {\n          console.log(user + 'to porpulate by redflag');\n\n          const NewIntervention = new SOSModel({ ...dataInterventions, _user: user._id });\n          NewIntervention.save()\n            .then(savedIntervention => console.log(savedIntervention + 'has been added'))\n            .catch(e => console.log(e));\n        })\n        .catch(e => console.log('could not find user data for his redflag/sos'));\n    }, 12000);\n  }\n\n  seedFaqs(dataFaqs) {\n    setTimeout(() => {\n      FAQModel.addFaq(dataFaqs, (err, collection) => {\n        if (err) {\n          console.log('could not create dataFaqs');\n        }\n        console.log(collection + ' dataFaqs has been added');\n      });\n    }, 18000);\n  }\n\n  seedNotification(data) {\n    setTimeout(() => {\n      NotificationModel.addNotification(data, (err, collection) => {\n        if (err) {\n          console.log('could not create data for addMech');\n        }\n        console.log(collection + ' addMech has been added');\n      });\n    }, 20000);\n  }\n\n  seedMechanicRequest(data) {\n    setTimeout(() => {\n      MechModel.addMech(data, (err, collection) => {\n        if (err) {\n          console.log('could not create data for notification');\n        }\n        console.log(collection + ' dnotification has been added');\n      });\n    }, 20000);\n  }\n\n  seedWalletHistory(data) {\n    setTimeout(() => {\n      WalletModel.addToWallet(data, (err, collection) => {\n        if (err) {\n          console.log('could not add topwallet for user');\n        }\n        console.log(collection + 'top wallet transaction has been added');\n      });\n    }, 24000);\n  }\n\n  seedQuotationHistory(data) {\n    setTimeout(() => {\n      QuoteModel.addToWallet(data, (err, collection) => {\n        if (err) {\n          console.log('could not add quotation for user');\n        }\n        console.log(collection + ' quotation transaction has been added');\n      });\n    }, 40000);\n  }\n\n  seedPaymentHistory(data) {\n    setTimeout(() => {\n      PaymentsModel.addToWallet(data, (err, collection) => {\n        if (err) {\n          console.log('could not add payments for user');\n        }\n        console.log(collection + ' payment transaction has been added');\n      });\n    }, 18000);\n  }\n\n  seedFeedbackByUser(dataRedflags, id) {\n    // perform seeding\n    //Awesome saladin.. Awesome!!!\n    setTimeout(() => {\n      UserModel.findOne({ id: id })\n        .exec()\n        .then(user => {\n          console.log(user + 'to porpulate by intervention');\n\n          const NewFeedbackModel = new FeedbackModel({ ...dataRedflags, _user: user._id });\n          NewFeedbackModel.save()\n            .then(savedRedflag => console.log(savedRedflag + 'has been added'))\n            .catch(e => console.log(e));\n        })\n        .catch(e => console.log('could not find user data for his redflag'));\n    }, 21000);\n  }\n\n  tearDown() {\n    UserModel.deleteMany()\n      .exec()\n      .then(table => console.log('table deleted: ' + table))\n      .catch(e => throw e);\n\n    SOSModel.deleteMany()\n      .exec()\n      .then(table => console.log('table deleted: ' + table))\n      .catch(e => throw e);\n\n    SOSModel.deleteMany()\n      .exec()\n      .then(table => console.log('table deleted: ' + table))\n      .catch(e => throw e);\n\n    CarModel.deleteMany()\n      .exec()\n      .then(table => console.log('table deleted: ' + table))\n      .catch(e => throw e);\n\n    PlanModel.deleteMany()\n      .exec()\n      .then(table => console.log('table deleted: ' + table))\n      .catch(e => throw e);\n\n    IndividualPlanModel.deleteMany()\n      .exec()\n      .then(table => console.log('table deleted: ' + table))\n      .catch(e => throw e);\n\n    CoperatePlanModel.deleteMany()\n      .exec()\n      .then(table => console.log('table deleted: ' + table))\n      .catch(e => throw e);\n\n    UsersPlanModel.deleteMany()\n      .exec()\n      .then(table => console.log('table deleted: ' + table))\n      .catch(e => throw e);\n\n    // for(let collection in mongoose.connection.collections){\n    //   mongoose.connection.collections[collection].drop( (err,coll) =>{\n    //      if(err){\n    //        console.log(\"error droping\")\n    //      }\n    //      console.log(coll +\" has been dropped\")\n    //   })\n    // }\n  }\n\n  buildUp() {\n    [\n      //all collections to create\n\n      'users',\n      'plan',\n      'cars',\n    ].forEach(table => {\n      mongoose.connection.createCollection(table, (err, coll) => {\n        if (err) {\n          console.log('error creating');\n        }\n        console.log(coll + ' has been created');\n      });\n    });\n  }\n}\nexport default Seeders;\n"],"file":"seeders.js"}