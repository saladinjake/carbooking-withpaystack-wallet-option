{"version":3,"sources":["../../../server/mongo_api/models/db.js"],"names":["require","config","debug","Promise","bluebird","mongoose","instance","DbQuery","that","dbLink","pool","connect","keepAlive","useNewUrlParser","useUnifiedTopology","useFindAndModify","useCreateIndex","set","collectionName","method","query","doc","util","inspect","connection","process","env","NODE_ENV"],"mappingskBC,MAAlB;;AAIA,IAAMC,KAAK,2BAAGF,OAAO,CAAC,OAAD,CAAP,CAAiB,gBAAjB,CAAH,CAAX;AACA;;AACA;;AACA;;AACA;;AAEA;;;AAEA;AACAG,OAAO,GAAGC,oBAAV,C,CAAoB;;;AAEpBC,qBAASF,OAAT,GAAmBA,OAAnB;AACA,IAAIG,QAAQ,2BAAG,IAAH,CAAZ;;IACMC,O;AACJ,qBAAc;AAAA;AAAA;AACZ,QAAMC,IAAI,2BAAG,IAAH,CAAV;AADY;AAEZ,SAAKC,MAAL;AAFY;AAIZ,SAAKC,IAAL,GAAYL,qBAASM,OAAT,CAAiBH,IAAI,CAACG,OAAL,EAAjB,EAAiC;AAC3CC,MAAAA,SAAS,EAAE,CADgC;AAE3C;AACAC,MAAAA,eAAe,EAAE,IAH0B;AAI3CC,MAAAA,kBAAkB,EAAE,IAJuB;AAK3CC,MAAAA,gBAAgB,EAAE,KALyB;AAM3CC,MAAAA,cAAc,EAAE;AAN2B,KAAjC,CAAZ,CAJY,CAaZ;;AAbY;;AAcZ,QAAIf,oCAAJ,EAAqB;AAAA;AAAA;;AACnBI,2BAASY,GAAT,CAAa,OAAb,EAAsB,UAACC,cAAD,EAAiBC,MAAjB,EAAyBC,KAAzB,EAAgCC,GAAhC,EAAwC;AAAA;AAAA;AAC5DnB,QAAAA,KAAK,WAAIgB,cAAJ,cAAsBC,MAAtB,GAAgCG,iBAAKC,OAAL,CAAaH,KAAb,EAAoB,KAApB,EAA2B,EAA3B,CAAhC,EAAgEC,GAAhE,CAAL;AACD,OAFD;AAGD,KAJD;AAAA;AAAA;AAKD;;;;WAED,oCAA2B;AAAA;AAAA;AACzB;AACA,aAAOhB,qBAASmB,UAAhB;AACD;;;;AAQD;;AACF;;AACA;;AACA;AAGE,uBAAU;AAAA;;AACR,0CAAqBC,OAAO,CAACC,GAA7B;AAAA,UAAQC,QAAR,QAAQA,QAAR;;AADQ;;AAGR,UAAIA,QAAQ,KAAK,aAAjB,EAAgC;AAAA;AAAA;AAC9B;AACA,aAAKlB,MAAL,GAAc,8CAAd,CAF8B,CAEgC;AAC/D,OAHD,MAGO;AAAA;AAAA;;AAAA,YAAIkB,QAAQ,KAAK,MAAjB,EAAyB;AAAA;AAAA;AAC9B,eAAKlB,MAAL,GAAc,8CAAd,CAD8B,CACgC;AAC/D,SAFM,MAEA;AAAA;AAAA;AACL,eAAKA,MAAL,GAAc,8CAAd,CADK,CACyD;AAC/D;AAAA;;AAVO;AAYR,aAAO,KAAKA,MAAZ;AACD;;;WAzBD,uBAAqB;AAAA;AAAA;;AACnB,UAAI,CAACH,QAAL,EAAe;AAAA;AAAA;AACbA,QAAAA,QAAQ,GAAG,IAAIC,OAAJ,EAAX;AACD,OAFD;AAAA;AAAA;;AADmB;AAInB,aAAOD,QAAP;AACD;;;;;eAuBYC,O","sourcesContent":["require('dotenv').config();\nimport mongoose from 'mongoose';\nimport config from '../config/mongo_config';\nimport bluebird from 'bluebird';\nconst debug = require('debug')('ireport:server');\n/****************************************************************/\n/******* @author saladin jake (Victor juwa) ********************************/\n/******* @desc Express js || ****************/\n/****************************************************************/\n\n/* SINGLETON */\nimport util from 'util';\n// make bluebird default Promise\nPromise = bluebird; // eslint-disable-line no-global-assign\n\nmongoose.Promise = Promise;\nlet instance = null;\nclass DbQuery {\n  constructor() {\n    const that = this;\n    this.dbLink;\n\n    this.pool = mongoose.connect(that.connect(), {\n      keepAlive: 1,\n      // useMongoClient: true,\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useFindAndModify: false,\n      useCreateIndex: true,\n    });\n\n    // print mongoose logs in dev env\n    if (config.debugger) {\n      mongoose.set('debug', (collectionName, method, query, doc) => {\n        debug(`${collectionName}.${method}`, util.inspect(query, false, 20), doc);\n      });\n    }\n  }\n\n  getEstablishedConnection() {\n    // return this.pool;\n    return mongoose.connection;\n  }\n\n  static getInstance() {\n    if (!instance) {\n      instance = new DbQuery();\n    }\n    return instance;\n  }\n  /****************************************************************/\n/******* @author saladin jake (Victor juwa) ********************************/\n/******* @desc Express js || cors Configurations ****************/\n/****************************************************************/\n\n\n  connect() {\n    const { NODE_ENV } = process.env;\n\n    if (NODE_ENV === 'development') {\n      //'mongodb://localhost:27017/taxi_service_final'\n      this.dbLink = 'mongodb://localhost:27017/taxi_service_final'; //'mongodb+srv://platform:@Platform123.@commutetest-f3rhn.mongodb.net/commute_taxi_service' //process.env.MONGODB_MLAB_URL || process.env.MONGO_DATABASE_URL   //process.env.MONGODB_URI || 'mongodb://localhost:27017/taxi_service_final';//config.development.database;\n    } else if (NODE_ENV === 'test') {\n      this.dbLink = 'mongodb://localhost:27017/taxi_service_final'; //'mongodb+srv://platform:@Platform123.@commutetest-f3rhn.mongodb.net/commute_taxi_service' //process.env.MONGODB_MLAB_URL || process.env.MONGO_DATABASE_URL  //process.env.MONGODB_URI || 'mongodb://localhost:27017/taxi_service_final'; //config.test.database;\n    } else {\n      this.dbLink = 'mongodb://localhost:27017/taxi_service_final'; //'mongodb+srv://platform:@Platform123.@commutetest-f3rhn.mongodb.net/commute_taxi_service'  //process.env.MONGODB_MLAB_URL || process.env.MONGO_DATABASE_URL //process.env.MONGODB_URI || 'mongodb://localhost:27017/taxi_service_final';  //config.production.database;\n    }\n\n    return this.dbLink;\n  }\n}\n\nexport default DbQuery;\n"],"file":"db.js"}