{"version":3,"sources":["../../../server/mongo_api/models/Partners.model.js"],"names":["Promise","require","PartnerSchema","mongoose","Schema","businessName","type","String","firstName","lastName","address","bankAccount","bankAccountName","bankAccountNumber","status","email","password","phoneNumber","phone","passwordResetToken","passwordResetExpires","Date","avatar","totalCars","Number","userName","roles","isVerified","Boolean","collection","timestamps","createdAt","updatedAt","set","getters","virtuals","method","statics","addUser","user","callback","create","get","id","findOne","exec","then","err","Error","reject","listUsers","skip","limit","find","sort","created_at","upsertFbUser","accessToken","refreshToken","profile","cb","that","newUser","fullName","displayName","emails","value","facebookProvider","token","save","error","savedUser","console","log","upsertGoogleUser","googleProvider","module","exports","model"],"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","sourcesContent":["'use strict';\nconst Promise = require('bluebird');\nimport mongoose from 'mongoose';\n/****************************************************************/\n/******* @author saladin jake (Victor juwa) ********************************/\n/******* @desc Express js || ****************/\n//Partner has many cars\n/**\n * Partner Schema\n */\n\nlet PartnerSchema = new mongoose.Schema(\n  {\n    businessName: {\n      type: String,\n    },\n    firstName: {\n      type: String,\n    },\n    lastName: {\n      type: String,\n    },\n    address: {\n      type: String,\n    },\n    bankAccount: { type: String },\n    bankAccountName: { type: String },\n    bankAccountNumber: { type: String },\n    status: {\n      type: String,\n      enum: ['Active', 'Dormant', 'Disabled', 'Suspended'],\n      default: 'Active',\n    },\n    email: {\n      type: String,\n    },\n    password: {\n      type: String,\n    },\n    phoneNumber: {\n      type: String,\n    },\n    phone: {\n      type: String,\n    },\n    passwordResetToken: { type: String },\n    passwordResetExpires: { type: Date },\n    avatar: {\n      type: String,\n    },\n    totalCars: {\n      type: Number,\n      default: 0,\n    },\n\n    userName: {\n      type: String,\n    },\n\n    roles: {\n      type: String,\n      enum: ['Individual Partner', 'Organizational Partner'],\n      default: 'Individual Partner',\n    },\n    isVerified: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  {\n    collection: 'partner_collections',\n    timestamps: {\n      createdAt: 'createdAt',\n      updatedAt: 'updatedAt',\n    },\n  },\n);\n\nPartnerSchema.set('toJSON', { getters: true, virtuals: true });\n\n/**\n * Methods\n */\nPartnerSchema.method({});\n\n/**\n * Statics\n */\nPartnerSchema.statics = {\n  // Add Intervention\n  addUser(user, callback) {\n    return this.create(user, callback);\n  },\n\n  get(id) {\n    return this.findOne(id)\n      .exec()\n      .then(user => {\n        if (user) {\n          return user;\n        }\n        const err = new Error('No such user exists!');\n        return Promise.reject(err);\n      });\n  },\n\n  listUsers({ skip = 0, limit = 50 } = {}) {\n    return this.find()\n      .sort({ created_at: -1 })\n      .skip(+skip)\n      .limit(+limit)\n      .exec();\n  },\n\n  upsertFbUser(accessToken, refreshToken, profile, cb) {\n    var that = this;\n    return this.findOne(\n      {\n        'facebookProvider.id': profile.id,\n      },\n      function(err, user) {\n        // no user was found, lets create a new one\n        if (!user) {\n          var newUser = new that({\n            fullName: profile.displayName,\n            email: profile.emails[0].value,\n            facebookProvider: {\n              id: profile.id,\n              token: accessToken,\n            },\n          });\n\n          newUser.save(function(error, savedUser) {\n            if (error) {\n              console.log(error);\n            }\n            return cb(error, savedUser);\n          });\n        } else {\n          return cb(err, user);\n        }\n      },\n    );\n  },\n\n  upsertGoogleUser(accessToken, refreshToken, profile, cb) {\n    var that = this;\n    return this.findOne(\n      {\n        'googleProvider.id': profile.id,\n      },\n      function(err, user) {\n        // no user was found, lets create a new one\n        if (!user) {\n          var newUser = new that({\n            fullName: profile.displayName,\n            email: profile.emails[0].value,\n            googleProvider: {\n              id: profile.id,\n              token: accessToken,\n            },\n          });\n\n          newUser.save(function(error, savedUser) {\n            if (error) {\n              console.log(error);\n            }\n            return cb(error, savedUser);\n          });\n        } else {\n          return cb(err, user);\n        }\n      },\n    );\n  },\n};\n\nmodule.exports = mongoose.model('PartnerModel', PartnerSchema);\n"],"file":"Partners.model.js"}