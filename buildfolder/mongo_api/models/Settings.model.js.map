{"version":3,"sources":["../../../server/mongo_api/models/Settings.model.js"],"names":["Promise","require","SettingSchema","mongoose","Schema","id","type","Number","ssl_mode","Boolean","required","general_email","String","smtp_username","smtp_password","offline_message","status","logo","slogan","footer_content","created_at","Date","now","updated_at","collection","timestamps","createdAt","updatedAt","set","getters","virtuals","module","exports","model"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;AADA,IAAMA,OAAO,2BAAGC,OAAO,CAAC,UAAD,CAAV,CAAb;;AAEA;;AACA;;AACA;AACA,IAAIC,aAAa,2BAAG,IAAIC,qBAASC,MAAb,CAClB;AACEC,EAAAA,EAAE,EAAE;AACFC,IAAAA,IAAI,EAAEC,MADJ;AAGF,eAAS;AAHP,GADN;AAMEC,EAAAA,QAAQ,EAAE;AACRF,IAAAA,IAAI,EAAEG,OADE;AAERC,IAAAA,QAAQ,EAAE;AAFF,GANZ;AAUEC,EAAAA,aAAa,EAAE;AACbL,IAAAA,IAAI,EAAEM,MADO;AAEbF,IAAAA,QAAQ,EAAE;AAFG,GAVjB;AAcEG,EAAAA,aAAa,EAAE;AACbP,IAAAA,IAAI,EAAEM,MADO;AAEbF,IAAAA,QAAQ,EAAE;AAFG,GAdjB;AAkBEI,EAAAA,aAAa,EAAE;AACbR,IAAAA,IAAI,EAAEM,MADO;AAEbF,IAAAA,QAAQ,EAAE;AAFG,GAlBjB;AAuBEK,EAAAA,eAAe,EAAE;AACfT,IAAAA,IAAI,EAAEC;AADS,GAvBnB;AA0BES,EAAAA,MAAM,EAAE;AAAEV,IAAAA,IAAI,EAAEM,MAAR;AAAgB,YAAM,CAAC,SAAD,EAAY,QAAZ;AAAtB,GA1BV;AA2BEK,EAAAA,IAAI,EAAE;AAAEX,IAAAA,IAAI,EAAEM;AAAR,GA3BR;AA4BEM,EAAAA,MAAM,EAAE;AAAEZ,IAAAA,IAAI,EAAEM;AAAR,GA5BV;AA6BEO,EAAAA,cAAc,EAAE;AAAEb,IAAAA,IAAI,EAAEM;AAAR,GA7BlB;AA8BEQ,EAAAA,UAAU,EAAE;AACVd,IAAAA,IAAI,EAAEe,IADI;AAEV,eAASA,IAAI,CAACC;AAFJ,GA9Bd;AAkCEC,EAAAA,UAAU,EAAE;AACVjB,IAAAA,IAAI,EAAEe,IADI;AAEV,eAASA,IAAI,CAACC;AAFJ;AAlCd,CADkB,EAwClB;AACEE,EAAAA,UAAU,EAAE,qBADd;AAEEC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,SAAS,EAAE,YAAb;AAA2BC,IAAAA,SAAS,EAAE;AAAtC;AAFd,CAxCkB,CAAH,CAAjB;;AA8CAzB,aAAa,CAAC0B,GAAd,CAAkB,QAAlB,EAA4B;AAAEC,EAAAA,OAAO,EAAE,IAAX;AAAiBC,EAAAA,QAAQ,EAAE;AAA3B,CAA5B;;AAEAC,MAAM,CAACC,OAAP,GAAiB7B,qBAAS8B,KAAT,CAAe,cAAf,EAA+B/B,aAA/B,CAAjB","sourcesContent":["'use strict';\nconst Promise = require('bluebird');\nimport mongoose from 'mongoose';\n/****************************************************************/\n/******* @author saladin jake (Victor juwa) ********************************/\n/******* @desc Express js || ****************/\nlet SettingSchema = new mongoose.Schema(\n  {\n    id: {\n      type: Number,\n\n      default: 0,\n    },\n    ssl_mode: {\n      type: Boolean,\n      required: true,\n    },\n    general_email: {\n      type: String,\n      required: true,\n    },\n    smtp_username: {\n      type: String,\n      required: true,\n    },\n    smtp_password: {\n      type: String,\n      required: true,\n    },\n\n    offline_message: {\n      type: Number,\n    },\n    status: { type: String, enum: ['offline', 'online'] },\n    logo: { type: String },\n    slogan: { type: String },\n    footer_content: { type: String },\n    created_at: {\n      type: Date,\n      default: Date.now,\n    },\n    updated_at: {\n      type: Date,\n      default: Date.now,\n    },\n  },\n  {\n    collection: 'setting_collections',\n    timestamps: { createdAt: 'created_at', updatedAt: 'updated_at' },\n  },\n);\n\nSettingSchema.set('toJSON', { getters: true, virtuals: true });\n\nmodule.exports = mongoose.model('SettingModel', SettingSchema);\n"],"file":"Settings.model.js"}