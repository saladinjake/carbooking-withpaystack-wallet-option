{"version":3,"sources":["../../../server/mongo_api/models/DriveTest.model.js"],"names":["Promise","require","DriveTestSchema","mongoose","Schema","id","type","Number","status","String","test_center","description","required","username","email","time","createdDate","phone_number","car_id","created_at","Date","now","updated_at","collection","timestamps","createdAt","updatedAt","set","getters","virtuals","statics","addTest","user","callback","create","module","exports","model"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;AADA,IAAMA,OAAO,2BAAGC,OAAO,CAAC,UAAD,CAAV,CAAb;;AAEA;;AACA;;AACA;AACA,IAAIC,eAAe,2BAAG,IAAIC,qBAASC,MAAb,CACpB;AACEC,EAAAA,EAAE,EAAE;AACFC,IAAAA,IAAI,EAAEC,MADJ;AAGF,eAAS;AAHP,GADN;AAMEC,EAAAA,MAAM,EAAE;AACNF,IAAAA,IAAI,EAAEG,MADA;AAEN,YAAM,CAAC,SAAD,EAAY,WAAZ;AAFA,GANV;AAUEC,EAAAA,WAAW,EAAE;AACXJ,IAAAA,IAAI,EAAEG;AADK,GAVf;AAaEE,EAAAA,WAAW,EAAE;AACXL,IAAAA,IAAI,EAAEG,MADK;AAEXG,IAAAA,QAAQ,EAAE;AAFC,GAbf;AAkBEC,EAAAA,QAAQ,EAAE;AACRP,IAAAA,IAAI,EAAEG;AADE,GAlBZ;AAqBEK,EAAAA,KAAK,EAAE;AACLR,IAAAA,IAAI,EAAEG;AADD,GArBT;AAyBEM,EAAAA,IAAI,EAAE;AACJT,IAAAA,IAAI,EAAEG;AADF,GAzBR;AA6BEO,EAAAA,WAAW,EAAE;AACXV,IAAAA,IAAI,EAAEG;AADK,GA7Bf;AAiCEQ,EAAAA,YAAY,EAAE;AACZX,IAAAA,IAAI,EAAEG;AADM,GAjChB;AAqCES,EAAAA,MAAM,EAAE;AACNZ,IAAAA,IAAI,EAAEG;AADA,GArCV;AAyCEU,EAAAA,UAAU,EAAE;AACVb,IAAAA,IAAI,EAAEc,IADI;AAEV,eAASA,IAAI,CAACC;AAFJ,GAzCd;AA6CEC,EAAAA,UAAU,EAAE;AACVhB,IAAAA,IAAI,EAAEc,IADI;AAEV,eAASA,IAAI,CAACC;AAFJ;AA7Cd,CADoB,EAmDpB;AACEE,EAAAA,UAAU,EAAE,uBADd;AAEEC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,SAAS,EAAE,YAAb;AAA2BC,IAAAA,SAAS,EAAE;AAAtC;AAFd,CAnDoB,CAAH,CAAnB;;AAyDAxB,eAAe,CAACyB,GAAhB,CAAoB,QAApB,EAA8B;AAAEC,EAAAA,OAAO,EAAE,IAAX;AAAiBC,EAAAA,QAAQ,EAAE;AAA3B,CAA9B;;AAEA3B,eAAe,CAAC4B,OAAhB,GAA0B;AACxB;AACAC,EAAAA,OAFwB,mBAEhBC,IAFgB,EAEVC,QAFU,EAEA;AAAA;AAAA;AACtB,WAAO,KAAKC,MAAL,CAAYF,IAAZ,EAAkBC,QAAlB,CAAP;AACD;AAJuB,CAA1B;;AAOAE,MAAM,CAACC,OAAP,GAAiBjC,qBAASkC,KAAT,CAAe,gBAAf,EAAiCnC,eAAjC,CAAjB","sourcesContent":["'use strict';\nconst Promise = require('bluebird');\nimport mongoose from 'mongoose';\n/****************************************************************/\n/******* @author saladin jake (Victor juwa) ********************************/\n/******* @desc Express js || ****************/\nlet DriveTestSchema = new mongoose.Schema(\n  {\n    id: {\n      type: Number,\n\n      default: 0,\n    },\n    status: {\n      type: String,\n      enum: ['Pending', 'Completed'],\n    },\n    test_center: {\n      type: String,\n    },\n    description: {\n      type: String,\n      required: true,\n    },\n\n    username: {\n      type: String,\n    },\n    email: {\n      type: String,\n    },\n\n    time: {\n      type: String,\n    },\n\n    createdDate: {\n      type: String,\n    },\n\n    phone_number: {\n      type: String,\n    },\n\n    car_id: {\n      type: String,\n    },\n\n    created_at: {\n      type: Date,\n      default: Date.now,\n    },\n    updated_at: {\n      type: Date,\n      default: Date.now,\n    },\n  },\n  {\n    collection: 'drivetest_collections',\n    timestamps: { createdAt: 'created_at', updatedAt: 'updated_at' },\n  },\n);\n\nDriveTestSchema.set('toJSON', { getters: true, virtuals: true });\n\nDriveTestSchema.statics = {\n  // Add Intervention\n  addTest(user, callback) {\n    return this.create(user, callback);\n  },\n};\n\nmodule.exports = mongoose.model('DriveTestModel', DriveTestSchema);\n"],"file":"DriveTest.model.js"}