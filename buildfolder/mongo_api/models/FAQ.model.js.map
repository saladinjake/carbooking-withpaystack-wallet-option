{"version":3,"sources":["../../../server/mongo_api/models/FAQ.model.js"],"names":["Promise","require","FAQSchema","mongoose","Schema","id","type","Number","question","String","answer","status","created_at","Date","now","updated_at","collection","timestamps","createdAt","updatedAt","set","getters","virtuals","statics","addFaq","faq","callback","create","get","findOne","exec","then","plan","err","Error","reject","listPlan","skip","limit","find","sort","module","exports","model"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;AADA,IAAMA,OAAO,2BAAGC,OAAO,CAAC,UAAD,CAAV,CAAb;;AAEA;;AACA;;AACA;AACA,IAAIC,SAAS,2BAAG,IAAIC,qBAASC,MAAb,CACd;AACEC,EAAAA,EAAE,EAAE;AACFC,IAAAA,IAAI,EAAEC,MADJ;AAEF,eAAS;AAFP,GADN;AAKEC,EAAAA,QAAQ,EAAE;AACRF,IAAAA,IAAI,EAAEG;AADE,GALZ;AAQEC,EAAAA,MAAM,EAAE;AACNJ,IAAAA,IAAI,EAAEG;AADA,GARV;AAYEE,EAAAA,MAAM,EAAE;AACNL,IAAAA,IAAI,EAAEG,MADA;AAEN,YAAM,CAAC,QAAD,EAAW,UAAX,CAFA;AAGN,eAAS;AAHH,GAZV;AAkBEG,EAAAA,UAAU,EAAE;AACVN,IAAAA,IAAI,EAAEO,IADI;AAEV,eAASA,IAAI,CAACC;AAFJ,GAlBd;AAsBEC,EAAAA,UAAU,EAAE;AACVT,IAAAA,IAAI,EAAEO,IADI;AAEV,eAASA,IAAI,CAACC;AAFJ;AAtBd,CADc,EA4Bd;AACEE,EAAAA,UAAU,EAAE,iBADd;AAEEC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,SAAS,EAAE,YAAb;AAA2BC,IAAAA,SAAS,EAAE;AAAtC;AAFd,CA5Bc,CAAH,CAAb;;AAkCAjB,SAAS,CAACkB,GAAV,CAAc,QAAd,EAAwB;AAAEC,EAAAA,OAAO,EAAE,IAAX;AAAiBC,EAAAA,QAAQ,EAAE;AAA3B,CAAxB;;AACApB,SAAS,CAACqB,OAAV,GAAoB;AAClB;AACAC,EAAAA,MAFkB,kBAEXC,GAFW,EAENC,QAFM,EAEI;AAAA;AAAA;AACpB,WAAO,KAAKC,MAAL,CAAYF,GAAZ,EAAiBC,QAAjB,CAAP;AACD,GAJiB;AAMlBE,EAAAA,GANkB,eAMdvB,EANc,EAMV;AAAA;AAAA;AACN,WAAO,KAAKwB,OAAL,CAAaxB,EAAb,EACJyB,IADI,GAEJC,IAFI,CAEC,UAAAC,IAAI,EAAI;AAAA;AAAA;;AACZ,UAAIA,IAAJ,EAAU;AAAA;AAAA;AACR,eAAOA,IAAP;AACD,OAFD;AAAA;AAAA;;AAGA,UAAMC,GAAG,2BAAG,IAAIC,KAAJ,CAAU,2BAAV,CAAH,CAAT;AAJY;AAKZ,aAAOlC,OAAO,CAACmC,MAAR,CAAeF,GAAf,CAAP;AACD,KARI,CAAP;AASD,GAhBiB;AAkBlBG,EAAAA,QAlBkB,sBAkBsB;AAAA,8GAAJ,EAAI;AAAA,yBAA7BC,IAA6B;AAAA,QAA7BA,IAA6B,qDAAtB,CAAsB;AAAA,0BAAnBC,KAAmB;AAAA,QAAnBA,KAAmB,sDAAX,EAAW;;AAAA;AAAA;AACtC,WAAO,KAAKC,IAAL,GACJC,IADI,CACC;AAAE5B,MAAAA,UAAU,EAAE,CAAC;AAAf,KADD,EAEJyB,IAFI,CAEC,CAACA,IAFF,EAGJC,KAHI,CAGE,CAACA,KAHH,EAIJR,IAJI,EAAP;AAKD;AAxBiB,CAApB;;AA2BAW,MAAM,CAACC,OAAP,GAAiBvC,qBAASwC,KAAT,CAAe,UAAf,EAA2BzC,SAA3B,CAAjB","sourcesContent":["'use strict';\nconst Promise = require('bluebird');\nimport mongoose from 'mongoose';\n/****************************************************************/\n/******* @author saladin jake (Victor juwa) ********************************/\n/******* @desc Express js || ****************/\nlet FAQSchema = new mongoose.Schema(\n  {\n    id: {\n      type: Number,\n      default: 0,\n    },\n    question: {\n      type: String,\n    },\n    answer: {\n      type: String,\n    },\n\n    status: {\n      type: String,\n      enum: ['Active', 'Disabled'],\n      default: 'Active',\n    },\n\n    created_at: {\n      type: Date,\n      default: Date.now,\n    },\n    updated_at: {\n      type: Date,\n      default: Date.now,\n    },\n  },\n  {\n    collection: 'faq_collections',\n    timestamps: { createdAt: 'created_at', updatedAt: 'updated_at' },\n  },\n);\n\nFAQSchema.set('toJSON', { getters: true, virtuals: true });\nFAQSchema.statics = {\n  // Add Intervention\n  addFaq(faq, callback) {\n    return this.create(faq, callback);\n  },\n\n  get(id) {\n    return this.findOne(id)\n      .exec()\n      .then(plan => {\n        if (plan) {\n          return plan;\n        }\n        const err = new Error('No such itinerary exists!');\n        return Promise.reject(err);\n      });\n  },\n\n  listPlan({ skip = 0, limit = 50 } = {}) {\n    return this.find()\n      .sort({ created_at: -1 })\n      .skip(+skip)\n      .limit(+limit)\n      .exec();\n  },\n};\n\nmodule.exports = mongoose.model('FAQModel', FAQSchema);\n"],"file":"FAQ.model.js"}