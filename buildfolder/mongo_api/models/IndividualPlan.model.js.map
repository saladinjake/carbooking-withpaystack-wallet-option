{"version":3,"sources":["../../../server/mongo_api/models/IndividualPlan.model.js"],"names":["Promise","require","IndividualPlanSchema","mongoose","Schema","id","type","Number","car_max","status","String","plan_name","plan_categories","description","required","price","created_at","Date","now","updated_at","collection","timestamps","createdAt","updatedAt","set","getters","virtuals","statics","addIndividualPlan","user","callback","create","get","findOne","exec","then","plan","err","Error","reject","listPlan","skip","limit","find","sort","module","exports","model"],"mappings":"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","sourcesContent":["'use strict';\nconst Promise = require('bluebird');\nimport mongoose from 'mongoose';\n/****************************************************************/\n/******* @author saladin jake (Victor juwa) ********************************/\n/******* @desc Express js || ****************/\nlet IndividualPlanSchema = new mongoose.Schema(\n  {\n    id: {\n      type: Number,\n\n      default: 0,\n    },\n\n    car_max: {\n      type: Number,\n      default: 3,\n    },\n\n    status: {\n      type: String,\n      enum: ['Active', 'Dormant', 'Disabled', 'Suspended'],\n      default: 'Active',\n    },\n\n    plan_name: {\n      type: String,\n      default: 'Individual',\n    },\n\n    plan_categories: {\n      type: String,\n      //enum:['Saver', 'Richly', 'Premium'],\n      default: 'Saver',\n    },\n\n    description: {\n      type: String,\n      required: true,\n    },\n\n    price: {\n      type: String,\n      required: true,\n    },\n\n    created_at: {\n      type: Date,\n      default: Date.now,\n    },\n    updated_at: {\n      type: Date,\n      default: Date.now,\n    },\n  },\n  {\n    collection: 'individualplan_collections',\n    timestamps: { createdAt: 'created_at', updatedAt: 'updated_at' },\n  },\n);\n\nIndividualPlanSchema.set('toJSON', { getters: true, virtuals: true });\n\nIndividualPlanSchema.statics = {\n  // Add Intervention\n  addIndividualPlan(user, callback) {\n    return this.create(user, callback);\n  },\n\n  get(id) {\n    return this.findOne(id)\n      .exec()\n      .then(plan => {\n        if (plan) {\n          return plan;\n        }\n        const err = new Error('No such plan exists!');\n        return Promise.reject(err);\n      });\n  },\n\n  listPlan({ skip = 0, limit = 50 } = {}) {\n    return this.find()\n      .sort({ created_at: -1 })\n      .skip(+skip)\n      .limit(+limit)\n      .exec();\n  },\n};\n\nmodule.exports = mongoose.model('IndividualPlanModel', IndividualPlanSchema);\n"],"file":"IndividualPlan.model.js"}