{"version":3,"sources":["../../../server/mongo_api/models/CoperatePlan.model.js"],"names":["Promise","require","CoperatePlanSchema","mongoose","Schema","id","type","Number","plan_name","String","car_max","status","plan_categories","description","required","price","collection","timestamps","createdAt","updatedAt","set","getters","virtuals","statics","addCoperatePlan","user","callback","create","get","findOne","exec","then","plan","err","Error","reject","listPlan","skip","limit","find","sort","created_at","module","exports","model"],"mappings":"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","sourcesContent":["'use strict';\nconst Promise = require('bluebird');\nimport mongoose from 'mongoose';\n/****************************************************************/\n/******* @author saladin jake (Victor juwa) ********************************/\n/******* @desc Express js || ****************/\nlet CoperatePlanSchema = new mongoose.Schema(\n  {\n    id: {\n      type: Number,\n\n      default: 0,\n    },\n\n    plan_name: {\n      type: String,\n      default: 'Coperate',\n    },\n\n    car_max: {\n      type: String,\n      default: 'unlimited',\n    },\n\n    status: {\n      type: String,\n      enum: ['Active', 'Dormant', 'Disabled', 'Suspended'],\n      default: 'Active',\n    },\n\n    plan_categories: {\n      type: String,\n      //enum:['Saver', 'Richly', 'Premium','weekend'],\n      default: 'Corporate Lite',\n    },\n\n    description: {\n      type: String,\n      required: true,\n    },\n\n    price: {\n      type: String,\n      required: true,\n    },\n  },\n  {\n    collection: 'coperateplan_collections',\n    timestamps: { createdAt: 'created_at', updatedAt: 'updated_at' },\n  },\n);\n\nCoperatePlanSchema.set('toJSON', { getters: true, virtuals: true });\n\nCoperatePlanSchema.statics = {\n  // Add Intervention\n  addCoperatePlan(user, callback) {\n    return this.create(user, callback);\n  },\n\n  get(id) {\n    return this.findOne(id)\n      .exec()\n      .then(plan => {\n        if (plan) {\n          return plan;\n        }\n        const err = new Error('No such plan exists!');\n        return Promise.reject(err);\n      });\n  },\n\n  listPlan({ skip = 0, limit = 50 } = {}) {\n    return this.find()\n      .sort({ created_at: -1 })\n      .skip(+skip)\n      .limit(+limit)\n      .exec();\n  },\n};\n\nmodule.exports = mongoose.model('CoperatePlanModel', CoperatePlanSchema);\n"],"file":"CoperatePlan.model.js"}