{"version":3,"sources":["../../../server/mongo_api/utils/APIError.js"],"names":["httpStatus","require","ExtendableError","message","errors","status","isPublic","stack","name","constructor","isOperational","Error","APIError","INTERNAL_SERVER_ERROR","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,UAAU,2BAAGC,OAAO,CAAC,aAAD,CAAV,CAAhB;AACA;;AACA;;AACA;;AACA;AACA;AACA;;IACMC,e;;;;;AACJ,iCAA0D;AAAA;;AAAA,QAA5CC,OAA4C,QAA5CA,OAA4C;AAAA,QAAnCC,MAAmC,QAAnCA,MAAmC;AAAA,QAA3BC,MAA2B,QAA3BA,MAA2B;AAAA,QAAnBC,QAAmB,QAAnBA,QAAmB;AAAA,QAATC,KAAS,QAATA,KAAS;AAAA;AAAA;AAAA;AACxD,8BAAMJ,OAAN;AADwD;AAExD,UAAKK,IAAL,GAAY,MAAKC,WAAL,CAAiBD,IAA7B;AAFwD;AAGxD,UAAKL,OAAL,GAAeA,OAAf;AAHwD;AAIxD,UAAKC,MAAL,GAAcA,MAAd;AAJwD;AAKxD,UAAKC,MAAL,GAAcA,MAAd;AALwD;AAMxD,UAAKC,QAAL,GAAgBA,QAAhB;AANwD;AAOxD,UAAKI,aAAL,GAAqB,IAArB,CAPwD,CAO7B;;AAP6B;AAQxD,UAAKH,KAAL,GAAaA,KAAb,CARwD,CASxD;;AATwD;AAUzD;;;kDAX2BI,K;AAc9B;AACA;AACA;AACA;;;IACMC,Q;;;;;AACJ;AACF;AACA;AACA;AACA;AACA;AACE,2BAMG;AAAA,QALDT,OAKC,SALDA,OAKC;AAAA,QAJDC,MAIC,SAJDA,MAIC;AAAA,QAHDG,KAGC,SAHDA,KAGC;AAAA,6BAFDF,MAEC;AAAA,QAFDA,MAEC,wDAFQL,UAAU,CAACa,qBAEnB;AAAA,+BADDP,QACC;AAAA,QADDA,QACC,0DADU,KACV;AAAA;AAAA;AAAA;AAAA,8BACK;AACJH,MAAAA,OAAO,EAAPA,OADI;AAEJC,MAAAA,MAAM,EAANA,MAFI;AAGJC,MAAAA,MAAM,EAANA,MAHI;AAIJC,MAAAA,QAAQ,EAARA,QAJI;AAKJC,MAAAA,KAAK,EAALA;AALI,KADL;AAQF;;;EArBoBL,e;;;AAwBvBY,MAAM,CAACC,OAAP,GAAiBH,QAAjB","sourcesContent":["const httpStatus = require('http-status');\n/****************************************************************/\n/******* @author saladin jake (Victor juwa) ********************************/\n/******* @desc Express js || ****************/\n/**\n * @extends Error\n */\nclass ExtendableError extends Error {\n  constructor({ message, errors, status, isPublic, stack }) {\n    super(message);\n    this.name = this.constructor.name;\n    this.message = message;\n    this.errors = errors;\n    this.status = status;\n    this.isPublic = isPublic;\n    this.isOperational = true; // This is required since bluebird 4 doesn't append it anymore.\n    this.stack = stack;\n    // Error.captureStackTrace(this, this.constructor.name);\n  }\n}\n\n/**\n * Class representing an API error.\n * @extends ExtendableError\n */\nclass APIError extends ExtendableError {\n  /**\n   * Creates an API error.\n   * @param {string} message - Error message.\n   * @param {number} status - HTTP status code of error.\n   * @param {boolean} isPublic - Whether the message should be visible to customer or not.\n   */\n  constructor({\n    message,\n    errors,\n    stack,\n    status = httpStatus.INTERNAL_SERVER_ERROR,\n    isPublic = false,\n  }) {\n    super({\n      message,\n      errors,\n      status,\n      isPublic,\n      stack,\n    });\n  }\n}\n\nmodule.exports = APIError;\n"],"file":"APIError.js"}