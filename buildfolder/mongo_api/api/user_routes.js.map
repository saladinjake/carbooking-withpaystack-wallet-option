{"version":3,"sources":["../../../server/mongo_api/api/user_routes.js"],"names":["corsOption","origin","methods","credentials","exposedHeaders","controllerWallet","require","UserRoutes","router","get","req","res","next","MailConfig","ViewOption","gmailTransport","hbs","HelperOptions","from","to","subject","template","context","name","email","address","sendMail","error","info","console","log","json","smtpTransport","verify","success","output","message","end","UserController","testEmail","post","userExists","TokenVerification","userAuthentication","walletUpgradeViaMobile","deleteItinerary","setPlanIdForUser","getPlanIdForUser","showProfile","UserSanitizer","validateSignUp","updateProfile","getCarsInfo","individualPlans","coperatePlans","addNewPlans","getAllUsersPlans","getAllUsersQuotations","getOnePlanById","patch","updateItem","deleteItem","put","debitWallet","updatePlanStatus","updateItinStatus","updateQuoteStatus","addDriveTestFromItinerary","getUserCars","saveUsersItinerary","getUsersItinerary","updateItineraryStatus","updateDriverRatings","editViewUsersItinerary","updateUsersItinerary","route","getBalance","paystackPayMeMoney","paystackCallBack","paystackReceipt","paystackHistory","paystackPayments","createPaymentDetail","paystackQuotations","makeNotification","getUserNotification","render","adminAuthentication","checkIfUserExists","addUserByAdmin","manageUsers","manageUsersDetail","manageUsersDetailVerification","deleteUser","addAdminByAdmin","manageAdmins","manageAdminsDetail","manageAdminsDetailVerification","checkIfDriverExists","addDriverByAdmin","manageDrivers","manageDriversDetail","manageDriversDetailVerification","deleteDriver","managePartners","deletePartner","managePartnersDetail","managePartnersDetailVerification","checkIfPartnerExists","addPartnerByAdmin","managePartnersEarnings","deletePartnersEarnings","managePartnersEarningsDetail","addPartnersEarningsByAdmin","manageProfile","manageProfileDetail","manageProfileDetailVerification","managePlanPackage","managePlanPackageCorporate","createNewPlan","managePlanPackageDetail","deletePlanPackage","manageSOS","manageSOSDetail","deleteSOS","manageTickets","manageTicketsDetail","deleteTicket","createNewTicket","manageFaqs","manageFaqsDetail","createNewFAQ","manageGoogleSettings","manageFacebookSettings","managePaystackSettings","manageEmailSettings","manageS3BucketSettings","manageInstagramSettings","manageSettingsDetail","manageItineraries","manageUsersPlan","manageItineraryDetail","manageUserNotificationCounter","manageBookings","manageBookingsDetail","makeQuotation","manageManualBooking","adminDashboard","adminDashboardTodaySales","adminDashboardYesterdaySales","adminDashboardWeeklySales","adminDashboardMonthlySales","paystackHistoryAdmin","paystackPaymentsAdmin","paystackQuotationsAdmin","deletePayment","deleteWallet","deleteQuotation","updateUsersPlanStatusAdmin","updateItineraryStatusAdmin","checkIfUserDoesntExists","createNewItinerary","createNewPlanBooking","createNewCar","manageCars","manageCarsDetail","manageInspection","createNewInspection","manageInspectionDetail","deleteInspection","manageDriveTest","manageDriveTestDetail","createNewDriveTest","deleteDriveTest","manageUsersDriveTestCenterUpdate","managePreviledges","createNewPreviledges","adminPreviledgesEdit","getUserPreviledges","showUserInfo","setOldBalance","managePreviledgesDetail","deletePreviledges","showProfileRights","getTrails","createTrail","getAllNotification","getAllRepairs","changeRepairStatus","driverConfirmBooking","revokecar","revokecarstatus","getrevokecars","updateNotificationStatus","io","app","body","status","params","id","DriverModel","updateOne","$set","socketId","err","updateDetails","send","find","location","$near","$maxDistance","$geometry","type","coordinates","parseFloat","latitude","request","longitude","findOne","driverId","emit","update","_id","coordinate","db","driversLocation","mongojs","ObjectId","updatedLocation","payload"],"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","sourcesContent":["import UserController from '../controllers/user_controller';\nimport UserSanitizer from '../middlewares/user_sanitizer';\n/****************************************************************/\n/******* @author saladin jake (Victor juwa) ********************************/\n/******* @desc Express js || ****************/\nimport TokenVerification from '../middlewares/token_validator';\nimport SubmitEventValidator from '../middlewares/post_sanitizer';\n\nimport DriverModel from '../models/Driver.model';\n\nimport cors from 'cors';\nlet corsOption = {\n  origin: true,\n  methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n  credentials: true,\n  exposedHeaders: ['x-auth-token'],\n  'Access-Control-Allow-Origin': '*',\n};\n\n//for e wallet transactions\n\n// const validate = require('express-validation');\nconst controllerWallet = require('../controllers/ewallet.controller');\n// //const { authorize, ADMIN, LOGGED_CUSTOMER } = require('../../middlewares/auth');\n// const {\n//   listCustomers,\n//   walletDeposit,\n//   walletTransfer,\n//   createCustomer,\n//   replaceCustomer,\n//   updateCustomer,\n// } = require('../helpers/customer.validation');\n\nclass UserRoutes {\n  constructor(router) {\n    // super(router);\n    this.router = router;\n  }\n\n  attachRoutes() {\n    /*\n     * Respond to GET requests to /account.\n     * Upon request, render the 'account.html' web page in views/ directory.\n     */\n\n    this.router.get('/email/template', (req, res, next) => {\n      MailConfig.ViewOption(gmailTransport, hbs);\n      let HelperOptions = {\n        from: '\"COMMUTE TAXI SERVICE\" <juwavictor@gmail.com>',\n        to: 'juwavictor@gmail.com',\n        subject: 'Hellow world!',\n        template: 'test',\n        context: {\n          name: 'COMMUTE TAXI',\n          email: 'juwavictor@gmail.com',\n          address: '3A DOTUN CLOSE, IKEJA LAGOS',\n        },\n      };\n      gmailTransport.sendMail(HelperOptions, (error, info) => {\n        if (error) {\n          console.log(error);\n          res.json(error);\n        }\n        console.log('email is send');\n        console.log(info);\n        res.json(info);\n      });\n    });\n\n    this.router.get('/email/smtp/template', (req, res, next) => {\n      MailConfig.ViewOption(smtpTransport, hbs);\n      let HelperOptions = {\n        from: '\"COMMUTE TAXI SERVICE\" <tester@softclo.com>',\n        to: 'tariqul.islam.rony@gmail.com',\n        subject: 'Hellow world!',\n        template: 'test',\n        context: {\n          name: 'tariqul_islam',\n          email: 'tester@softclo.com',\n          address: '30 a my street',\n        },\n      };\n      smtpTransport.verify((error, success) => {\n        if (error) {\n          res.json({ output: 'error', message: error });\n          res.end();\n        } else {\n          smtpTransport.sendMail(HelperOptions, (error, info) => {\n            if (error) {\n              res.json({ output: 'error', message: error });\n            }\n            res.json({ output: 'success', message: info });\n            res.end();\n          });\n        }\n      });\n    });\n\n    this.router.get('/test-email', UserController.testEmail);\n\n    this.router.post(\n      '/userexists',\n      // TokenVerification.userAuthentication,\n      UserController.userExists,\n    );\n\n    this.router.post(\n      '/transaction/upgrade-amount',\n      TokenVerification.userAuthentication,\n      UserController.walletUpgradeViaMobile,\n    );\n\n    this.router.delete(\n      '/itinerary/delete/:id',\n      TokenVerification.userAuthentication,\n      UserController.deleteItinerary,\n    );\n\n    this.router.post(\n      '/payplan-get/',\n      TokenVerification.userAuthentication,\n      UserController.setPlanIdForUser,\n    );\n\n    this.router.get(\n      '/payplan-set/:id',\n      TokenVerification.userAuthentication,\n      UserController.getPlanIdForUser,\n    );\n\n    //  this.router.get('/userexists',\n    //  UserController.userExists\n    //  )\n\n    this.router.get(\n      '/profile/update/:id',\n      TokenVerification.userAuthentication,\n      UserController.showProfile,\n    ); //\n    this.router.post(\n      '/profile/update/:id',\n      TokenVerification.userAuthentication,\n      UserSanitizer.validateSignUp,\n      UserController.updateProfile,\n    );\n\n    this.router.get(\n      '/get-cars-info-user',\n      TokenVerification.userAuthentication,\n      UserController.getCarsInfo,\n    );\n\n    this.router.get(\n      '/individual/plans/view',\n      TokenVerification.userAuthentication,\n      UserController.individualPlans,\n    );\n    this.router.get(\n      '/coperate/plans/view',\n      TokenVerification.userAuthentication,\n      UserController.coperatePlans,\n    );\n    this.router.post(\n      '/plans/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.addNewPlans,\n    );\n    this.router.get(\n      '/plans/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.getAllUsersPlans,\n    );\n\n    this.router.get(\n      '/quotations/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.getAllUsersQuotations,\n    );\n\n    this.router.get(\n      '/plans/:id',\n      TokenVerification.userAuthentication,\n      UserController.getOnePlanById,\n    );\n\n    this.router.patch(\n      '/plans/:id',\n      TokenVerification.userAuthentication,\n      UserController.updateItem,\n    );\n\n    this.router.delete(\n      '/plans/:id',\n      TokenVerification.userAuthentication,\n      UserController.deleteItem,\n    );\n\n    this.router.put(\n      '/debit-wallet-transactions/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.debitWallet,\n    );\n\n    this.router.put(\n      '/plan-status/:id/update',\n      TokenVerification.userAuthentication,\n      UserController.updatePlanStatus,\n    );\n\n    this.router.put(\n      '/itin-status/:id/update',\n      TokenVerification.userAuthentication,\n      UserController.updateItinStatus,\n    );\n\n    this.router.put(\n      '/quote-status/:id/update',\n      TokenVerification.userAuthentication,\n      UserController.updateQuoteStatus,\n    );\n\n    this.router.post(\n      '/add-drive-test-for-user',\n      TokenVerification.userAuthentication,\n      UserController.addDriveTestFromItinerary,\n    );\n\n    this.router.get(\n      '/cars/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.getUserCars,\n    );\n\n    this.router.post(\n      '/itinerary/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.saveUsersItinerary,\n    );\n\n    this.router.get(\n      '/itinerary/:id/user',\n      TokenVerification.userAuthentication,\n      UserController.getUsersItinerary,\n    );\n\n    //update itineray status\n    this.router.put(\n      '/itinerary/:id/status',\n      TokenVerification.userAuthentication,\n      UserController.updateItineraryStatus,\n    );\n\n    this.router.put(\n      '/user/:id/ratings',\n      TokenVerification.userAuthentication,\n      UserController.updateDriverRatings,\n    );\n\n    this.router.get(\n      '/itinerary/:id/user/edit',\n      TokenVerification.userAuthentication,\n      UserController.editViewUsersItinerary,\n    );\n\n    this.router.post(\n      '/itinerary/:id/user/edit',\n      TokenVerification.userAuthentication,\n      UserController.updateUsersItinerary,\n    );\n\n    this.router\n      .route('/balance/:id')\n      .get(TokenVerification.userAuthentication, controllerWallet.getBalance);\n\n    // this.router\n    //   .route('/transactions')\n    //   .get( TokenVerification.userAuthentication,  controllerWallet.getTransactions);\n\n    // this.router\n    //   .route('/deposit')\n    //   .post( TokenVerification.userAuthentication,\n    //     validate(walletDeposit), controllerWallet.deposit);\n\n    this.router.post(\n      '/paystack/pay', //cors(corsOption),\n      TokenVerification.userAuthentication,\n      UserController.paystackPayMeMoney,\n    );\n\n    this.router.get(\n      '/paystack/callback',\n      // TokenVerification.userAuthentication,\n      UserController.paystackCallBack,\n    );\n\n    this.router.get(\n      '/receipt/:id',\n      // TokenVerification.userAuthentication,\n      UserController.paystackReceipt,\n    );\n\n    this.router.get(\n      '/payment-history/:id',\n      TokenVerification.userAuthentication,\n      UserController.paystackHistory,\n    );\n\n    this.router.get(\n      '/payment-payments/:id',\n      TokenVerification.userAuthentication,\n      UserController.paystackPayments,\n    );\n\n    this.router.post(\n      '/makepayments',\n      TokenVerification.userAuthentication,\n      UserController.createPaymentDetail,\n    );\n\n    this.router.get(\n      '/payment-quotations/:id',\n      TokenVerification.userAuthentication,\n      UserController.paystackQuotations,\n    );\n\n    this.router.post(\n      '/notification',\n      TokenVerification.userAuthentication,\n      //UserSanitizer.checkIfUserDoesntExists,\n      UserController.makeNotification,\n    );\n    this.router.get(\n      '/notification/:id',\n      TokenVerification.userAuthentication,\n      UserController.getUserNotification,\n    );\n\n    // this.router.get(\"/drivers\",     //read done\n    //   TokenVerification.userAuthentication,\n    //   UserController.getDrivers\n    // );\n\n    // this.router\n    //   .route('/transfer')\n    //   .post( TokenVerification.userAuthentication, validate(walletTransfer), controllerWallet.transfer);\n\n    // this.router\n    //   .route('/withdrawal')\n    //   .post( TokenVerification.userAuthentication, validate(walletDeposit), controllerWallet.withdrawal);\n\n    this.router.get('/', (req, res) => {\n      res.render('index.pug');\n    });\n\n    this.router.get('/error', (req, res) => {\n      res.render('error.pug');\n    });\n\n    this.router.get('/testpaystack', (req, res) => {\n      res.render('index.pug');\n    });\n\n    //adminusers\n\n    //admin : users routes\n    this.router.post(\n      '/admin-add-user', //create done\n      TokenVerification.adminAuthentication,\n      UserSanitizer.checkIfUserExists,\n      UserController.addUserByAdmin,\n    );\n\n    this.router.get(\n      '/admin-users', //read - done\n      TokenVerification.adminAuthentication,\n      UserController.manageUsers,\n    );\n\n    this.router.put(\n      '/admin-users-detail/:id', //update\n      TokenVerification.adminAuthentication,\n      UserController.manageUsersDetail,\n    );\n\n    this.router.put(\n      '/admin-users-detail-verification/:id', //update\n      TokenVerification.adminAuthentication,\n      UserController.manageUsersDetailVerification,\n    );\n\n    this.router.delete(\n      '/users/:id/delete', //delete - done\n      TokenVerification.adminAuthentication,\n      UserController.deleteUser,\n    ); //\n\n    //end of admin user routes\n\n    this.router.post(\n      '/add-admin', //create done\n      TokenVerification.adminAuthentication,\n      UserSanitizer.checkIfUserExists,\n      UserController.addAdminByAdmin,\n    );\n\n    this.router.get(\n      '/admin-admins', //read done\n      TokenVerification.adminAuthentication,\n      UserController.manageAdmins,\n    );\n\n    this.router.put(\n      '/admin-admins-detail/:id', //edit done\n      TokenVerification.adminAuthentication,\n      UserController.manageAdminsDetail,\n    );\n\n    this.router.put(\n      '/admin-admins-detail-verification/:id', //update\n      TokenVerification.adminAuthentication,\n      UserController.manageAdminsDetailVerification,\n    );\n\n    this.router.delete(\n      '/users/:id/delete', //delete - done\n      TokenVerification.adminAuthentication,\n      UserController.deleteUser,\n    ); //\n\n    this.router.post(\n      '/add-driver', //create done\n      TokenVerification.adminAuthentication,\n      UserSanitizer.checkIfDriverExists,\n      UserController.addDriverByAdmin,\n    );\n\n    this.router.get(\n      '/admin-drivers', //read done\n      TokenVerification.adminAuthentication,\n      UserController.manageDrivers,\n    );\n\n    this.router.put(\n      '/admin-drivers-detail/:id', // update\n      TokenVerification.adminAuthentication,\n      UserController.manageDriversDetail,\n    );\n\n    this.router.put(\n      '/admin-drivers-detail-verification/:id', //update\n      TokenVerification.adminAuthentication,\n      UserController.manageDriversDetailVerification,\n    );\n\n    this.router.delete(\n      '/drivers/:id/delete', //delete done\n      TokenVerification.adminAuthentication,\n      UserController.deleteDriver,\n    );\n\n    this.router.get(\n      '/admin-partners', //read done\n      TokenVerification.adminAuthentication,\n      UserController.managePartners,\n    );\n\n    this.router.delete(\n      '/partners/:id/delete', //delete done\n      TokenVerification.adminAuthentication,\n      UserController.deletePartner,\n    );\n\n    this.router.put(\n      '/admin-partners-detail/:id', //update done\n      TokenVerification.adminAuthentication,\n      UserController.managePartnersDetail,\n    );\n\n    this.router.put(\n      '/admin-partners-detail-verification/:id', //update\n      TokenVerification.adminAuthentication,\n      UserController.managePartnersDetailVerification,\n    );\n\n    this.router.post(\n      '/add-partner', //create done\n      TokenVerification.adminAuthentication,\n      UserSanitizer.checkIfPartnerExists,\n      UserController.addPartnerByAdmin,\n    );\n\n    this.router.get(\n      '/admin-earnings', //read done\n      TokenVerification.adminAuthentication,\n      UserController.managePartnersEarnings,\n    );\n\n    this.router.delete(\n      '/partners-earnings/:id/delete', //delete done\n      TokenVerification.adminAuthentication,\n      UserController.deletePartnersEarnings,\n    );\n\n    this.router.put(\n      '/partners-earnings-detail/:id', //update done\n      TokenVerification.adminAuthentication,\n      UserController.managePartnersEarningsDetail,\n    );\n\n    this.router.post(\n      '/add-partner-earnings', //create done\n      TokenVerification.adminAuthentication,\n      // UserSanitizer.checkIfPartnerExists,\n      UserController.addPartnersEarningsByAdmin,\n    );\n\n    this.router.get(\n      '/admin-profile/:id', //read done\n      TokenVerification.adminAuthentication,\n      UserController.manageProfile,\n    );\n\n    this.router.put(\n      '/admin-profile-detail/:id', //update not completed\n      TokenVerification.adminAuthentication,\n      UserController.manageProfileDetail,\n    );\n\n    this.router.put(\n      '/admin-profile-detail-verification/:id', //update\n      TokenVerification.adminAuthentication,\n      UserController.manageProfileDetailVerification,\n    );\n\n    this.router.get(\n      '/admin-plan-package', // read done\n      TokenVerification.adminAuthentication,\n      UserController.managePlanPackage,\n    );\n\n    this.router.get(\n      '/admin-plan-package-corporate', //read done\n      TokenVerification.adminAuthentication,\n      UserController.managePlanPackageCorporate,\n    );\n\n    this.router.post(\n      '/add-plan', //create\n      TokenVerification.adminAuthentication,\n      UserController.createNewPlan,\n    );\n\n    this.router.put(\n      '/admin-plan-package-detail/:id', // update done\n      TokenVerification.adminAuthentication,\n      UserController.managePlanPackageDetail,\n    );\n\n    this.router.delete(\n      '/plan-package/:id/delete/:delete_type', //delete done\n      TokenVerification.adminAuthentication,\n      UserController.deletePlanPackage,\n    );\n\n    this.router.get(\n      '/admin-sos', //read done\n      TokenVerification.adminAuthentication,\n      UserController.manageSOS,\n    );\n\n    this.router.put(\n      '/admin-sos-detail/:id', //update\n      TokenVerification.adminAuthentication,\n      UserController.manageSOSDetail,\n    );\n\n    this.router.delete(\n      '/redflag-sos/:id/delete', //delete done\n      TokenVerification.adminAuthentication,\n      UserController.deleteSOS,\n    );\n\n    //admin cant create any sos\n\n    //tickets\n\n    this.router.get(\n      '/admin-tickets', //read done\n      TokenVerification.adminAuthentication,\n      UserController.manageTickets,\n    );\n\n    this.router.put(\n      '/admin-ticket-detail/:id', //update\n      TokenVerification.adminAuthentication,\n      UserController.manageTicketsDetail,\n    );\n\n    this.router.delete(\n      '/tickets/:id/delete', //delete done\n      TokenVerification.adminAuthentication,\n      UserController.deleteTicket,\n    );\n\n    this.router.post(\n      '/add-ticket', //done for admin\n      TokenVerification.adminAuthentication,\n      UserController.createNewTicket,\n    );\n\n    this.router.get(\n      '/admin-faqs', //done\n      TokenVerification.adminAuthentication,\n      UserController.manageFaqs,\n    );\n\n    this.router.put(\n      '/admin-faqs-detail/:id', //done\n      TokenVerification.adminAuthentication,\n      UserController.manageFaqsDetail,\n    );\n\n    this.router.post(\n      '/add-faq', //done\n      TokenVerification.adminAuthentication,\n      UserController.createNewFAQ,\n    );\n\n    this.router.get(\n      '/admin-settings-google', //done\n      TokenVerification.adminAuthentication,\n      UserController.manageGoogleSettings,\n    );\n\n    this.router.get(\n      '/admin-settings-facebook', //done\n      TokenVerification.adminAuthentication,\n      UserController.manageFacebookSettings,\n    );\n\n    this.router.get(\n      '/admin-settings-paystack', //done --- revisit this\n      TokenVerification.adminAuthentication,\n      UserController.managePaystackSettings,\n    );\n\n    this.router.get(\n      '/admin-settings-email', //done\n      TokenVerification.adminAuthentication,\n      UserController.manageEmailSettings,\n    );\n\n    this.router.get(\n      '/admin-settings-bucket', //done\n      TokenVerification.adminAuthentication,\n      UserController.manageS3BucketSettings,\n    );\n\n    this.router.get(\n      '/admin-settings-instagram', //done\n      TokenVerification.adminAuthentication,\n      UserController.manageInstagramSettings,\n    );\n\n    this.router.get(\n      '/admin-settings-instagram', //done\n      TokenVerification.adminAuthentication,\n      UserController.manageInstagramSettings,\n    );\n\n    this.router.put(\n      '/admin-settings-detail/:id',\n      TokenVerification.adminAuthentication,\n      UserController.manageSettingsDetail,\n    );\n\n    this.router.get(\n      '/admin-itineraries', //done\n      TokenVerification.adminAuthentication,\n      UserController.manageItineraries,\n    );\n\n    this.router.get(\n      '/admin-users-plan', //done\n      TokenVerification.adminAuthentication,\n      UserController.manageUsersPlan,\n    );\n\n    this.router.put(\n      '/admin-itinerary-details/:id', //done\n      TokenVerification.adminAuthentication,\n      UserController.manageItineraryDetail,\n    );\n\n    this.router.put(\n      '/notification-update/:id', //done\n      TokenVerification.adminAuthentication,\n      UserController.manageUserNotificationCounter,\n    );\n\n    // this.router.get(\"/admin-wallet\",\n    //   TokenVerification.adminAuthentication,\n    //   UserController.manageWalletHistory\n    // )\n\n    this.router.get(\n      '/admin-bookings',\n      TokenVerification.adminAuthentication,\n      UserController.manageBookings,\n    );\n\n    this.router.put(\n      '/admin-bookings-detail',\n      TokenVerification.adminAuthentication,\n      UserController.manageBookingsDetail,\n    );\n\n    this.router.post(\n      '/make-quotation',\n      TokenVerification.adminAuthentication,\n      UserController.makeQuotation,\n    );\n\n    this.router.post(\n      '/admin-manual-booking',\n      TokenVerification.adminAuthentication,\n\n      UserController.manageManualBooking,\n    );\n\n    this.router.get('/admin', TokenVerification.adminAuthentication, UserController.adminDashboard);\n\n    this.router.get(\n      '/admin-sales-today',\n      TokenVerification.adminAuthentication,\n      UserController.adminDashboardTodaySales,\n    );\n\n    this.router.get(\n      '/admin-sales-yesterday',\n      TokenVerification.adminAuthentication,\n      UserController.adminDashboardYesterdaySales,\n    );\n\n    this.router.get(\n      '/admin-sales-lastweek',\n      TokenVerification.adminAuthentication,\n      UserController.adminDashboardWeeklySales,\n    );\n\n    this.router.get(\n      '/admin-users-month-ago',\n      TokenVerification.adminAuthentication,\n      UserController.adminDashboardMonthlySales,\n    );\n\n    this.router.get(\n      '/payment-history',\n      TokenVerification.adminAuthentication,\n      UserController.paystackHistoryAdmin,\n    );\n\n    this.router.get(\n      '/payment-payments',\n      TokenVerification.adminAuthentication,\n      UserController.paystackPaymentsAdmin,\n    );\n\n    this.router.get(\n      '/payment-quotations',\n      TokenVerification.adminAuthentication,\n      UserController.paystackQuotationsAdmin,\n    );\n\n    this.router.delete(\n      '/payment/:id/delete',\n      TokenVerification.adminAuthentication,\n      UserController.deletePayment,\n    );\n\n    this.router.delete(\n      '/wallet/:id/delete',\n      TokenVerification.adminAuthentication,\n      UserController.deleteWallet,\n    );\n\n    this.router.delete(\n      '/quotation/:id/delete',\n      TokenVerification.adminAuthentication,\n      UserController.deleteQuotation,\n    );\n\n    this.router.put(\n      '/userplan-status-update/:id',\n      TokenVerification.adminAuthentication,\n      UserController.updateUsersPlanStatusAdmin,\n    );\n\n    this.router.put(\n      '/user-itinerary-status-update/:id',\n      TokenVerification.adminAuthentication,\n      UserController.updateItineraryStatusAdmin,\n    ); //admin-itinerary-add\n\n    this.router.post(\n      '/admin-itinerary-add',\n      TokenVerification.adminAuthentication,\n\n      UserSanitizer.checkIfUserDoesntExists,\n      UserController.createNewItinerary,\n    );\n\n    this.router.post(\n      '/admin-plan-add', //add booking\n      TokenVerification.adminAuthentication,\n      //UserSanitizer.checkIfUserDoesntExists,\n      UserController.createNewPlanBooking,\n    );\n\n    this.router.post(\n      '/add-cars', //done\n      TokenVerification.adminAuthentication,\n      UserController.createNewCar,\n    );\n\n    this.router.get(\n      '/admin-cars-mgt', //done\n      TokenVerification.adminAuthentication,\n      UserController.manageCars,\n    );\n\n    this.router.get(\n      '/get-cars-info',\n      TokenVerification.adminAuthentication,\n      UserController.getCarsInfo,\n    );\n\n    this.router.put(\n      '/admin-cars-detail/:id',\n      TokenVerification.adminAuthentication,\n      UserController.manageCarsDetail,\n    );\n\n    this.router.get(\n      '/admin-inspection', //read\n      TokenVerification.adminAuthentication,\n      UserController.manageInspection,\n    );\n\n    this.router.post(\n      '/add-inspection', //create\n      TokenVerification.adminAuthentication,\n      UserController.createNewInspection,\n    );\n\n    this.router.put(\n      '/admin-inspection-detail/:id', // update\n      TokenVerification.adminAuthentication,\n      UserController.manageInspectionDetail,\n    );\n\n    this.router.delete(\n      '/inspection/:id/delete', //delete\n      TokenVerification.adminAuthentication,\n      UserController.deleteInspection,\n    );\n\n    this.router.get('/admin-drive-test', UserController.manageDriveTest);\n\n    this.router.put(\n      '/admin-drive-test-detail/:id',\n      TokenVerification.adminAuthentication,\n      UserController.manageDriveTestDetail,\n    );\n\n    this.router.post(\n      '/add-drive-test', //create\n      TokenVerification.adminAuthentication,\n      UserController.createNewDriveTest,\n    );\n\n    this.router.delete(\n      '/drive-test/:id/delete', //delete\n      TokenVerification.adminAuthentication,\n      UserController.deleteDriveTest,\n    );\n\n    this.router.put(\n      '/update-testcenter/:id',\n      TokenVerification.adminAuthentication,\n      UserController.manageUsersDriveTestCenterUpdate,\n    );\n\n    this.router.get(\n      '/admin-previledges', //read done\n      TokenVerification.adminAuthentication,\n      UserController.managePreviledges,\n    );\n\n    this.router.post(\n      '/add-roles', //create\n      TokenVerification.adminAuthentication,\n      UserController.createNewPreviledges,\n    ); //\n\n    this.router.put(\n      '/admin-previledges-update/:id', //create\n      TokenVerification.adminAuthentication,\n      UserController.adminPreviledgesEdit,\n    );\n\n    this.router.get(\n      '/get-admin-previledges/:id',\n      TokenVerification.adminAuthentication,\n      UserController.getUserPreviledges,\n    );\n\n    this.router.get(\n      '/fetchuserinfo/:id',\n      TokenVerification.userAuthentication,\n      UserController.showUserInfo,\n    );\n\n    this.router.put(\n      '/old_balance/:id', //create\n      TokenVerification.userAuthentication,\n      UserController.setOldBalance,\n    );\n\n    this.router.put(\n      '/admin-role-detail/:id', // update done\n      TokenVerification.adminAuthentication,\n      UserController.managePreviledgesDetail,\n    );\n\n    this.router.delete(\n      '/roles/:id/delete', //delete done\n      TokenVerification.adminAuthentication,\n      UserController.deletePreviledges,\n    );\n\n    this.router.get(\n      '/profile-admin-rights/update/:id/permission/:roles',\n      TokenVerification.userAuthentication,\n      UserController.showProfileRights,\n    ); //showProfileRights(request,response)\n\n    this.router.get(\n      '/get-trails', //read done\n      TokenVerification.adminAuthentication,\n      UserController.getTrails,\n    );\n\n    this.router.post(\n      '/log-audit', //create\n      TokenVerification.adminAuthentication,\n      UserController.createTrail,\n    ); //\n\n    this.router.get(\n      '/get-all-notification',\n      TokenVerification.adminAuthentication,\n      UserController.getAllNotification,\n    );\n\n    this.router.get(\n      '/get-all-cars-repair-request',\n      TokenVerification.adminAuthentication,\n      UserController.getAllRepairs,\n    );\n\n    this.router.put(\n      '/admin-mech-status/:id',\n      TokenVerification.adminAuthentication,\n      UserController.changeRepairStatus,\n    );\n    //drivers\n    this.router.get(\n      '/confirm-booking-request',\n      //TokenVerification.userAuthentication,\n      UserController.driverConfirmBooking,\n    );\n\n    // Add a vehicle retrieval\n    this.router.post(\n      '/admin-new-car-revoke',\n      TokenVerification.adminAuthentication,\n      UserController.revokecar,\n    );\n\n    this.router.put(\n      '/admin-new-car-revoke-status/:id',\n      TokenVerification.adminAuthentication,\n      UserController.revokecarstatus,\n    );\n\n    this.router.get(\n      '/admin-get-revoke-details',\n      TokenVerification.adminAuthentication,\n      UserController.getrevokecars,\n    );\n\n    this.router.put(\n      '/notification/:id',\n      TokenVerification.userAuthentication,\n      UserController.updateNotificationStatus,\n    );\n\n    //update driver socket id\n    this.router.put('/driverLocationSocket/:id', function(req, res, next) {\n      var io = req.app.io;\n      if (!req.body) {\n        res.status(400);\n        res.json({\n          error: 'Bad Data',\n        });\n      } else {\n        console.log(req.params.id);\n        DriverModel.updateOne(\n          { id: req.params.id },\n          { $set: { socketId: req.body.socketId } },\n          function(err, updateDetails) {\n            if (err) {\n              res.send(err);\n            } else {\n              console.log(updateDetails);\n              res.send(updateDetails);\n            }\n          },\n        );\n      }\n    });\n\n    //get nearby driver\n    this.router.get('/driverLocation/:latitude/:longitude', function(req, res, next) {\n      //DriverModel.ensureIndex({\"coordinate\": \"2dsphere\"});\n      DriverModel.find(\n        {\n          location: {\n            $near: {\n              $maxDistance: 1000,\n              $geometry: {\n                type: 'Point',\n                coordinates: [\n                  parseFloat(req.params.latitude),\n                  parseFloat(request.params.longitude),\n                ],\n              },\n            },\n          },\n        },\n        function(err, location) {\n          if (err) {\n            res.send(err);\n          } else {\n            res.send(location);\n          }\n        },\n      );\n    });\n\n    //Get Single Driver and emit track by user to driver\n    this.router.get('/driverLocation/:id', function(req, res, next) {\n      var io = req.app.io;\n      DriverModel.findOne({ driverId: req.params.id }, function(err, location) {\n        if (err) {\n          res.send(err);\n        }\n        res.send(location);\n        io.emit('trackDriver', location);\n      });\n    });\n\n    //Update Location by driver to user\n    this.router.put('/driverLocation/:id', function(req, res, next) {\n      var io = req.app.io;\n      var location = req.body;\n      var latitude = parseFloat(location.latitude);\n      var longitude = parseFloat(location.longitude);\n      if (!location) {\n        res.status(400);\n        res.json({\n          error: 'Bad Data',\n        });\n      } else {\n        DriverModel.update(\n          { _id: req.params.id },\n          {\n            $set: {\n              socketId: location.socketId,\n              coordinate: {\n                type: 'Point',\n                coordinates: [longitude, latitude],\n              },\n            },\n          },\n          function(err, updateDetails) {\n            if (err) {\n              console.log(updateDetails);\n              res.send(err);\n            }\n            if (updateDetails) {\n              //Get updated location\n              db.driversLocation.findOne({ _id: mongojs.ObjectId(req.params.id) }, function(\n                error,\n                updatedLocation,\n              ) {\n                if (error) {\n                  res.send(error);\n                }\n                res.send(updatedLocation);\n                io.emit('action', {\n                  type: 'UPDATE_DRIVER_LOCATION',\n                  payload: updatedLocation,\n                });\n              });\n            }\n          },\n        );\n      }\n    });\n\n    return this.router;\n  }\n}\nexport default UserRoutes;\n"],"file":"user_routes.js"}